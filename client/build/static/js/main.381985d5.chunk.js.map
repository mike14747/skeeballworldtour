{"version":3,"sources":["pages/home/home.js","components/pageHeading/pageHeading.js","pages/rules/rules.js","context/currentSeasonContext.js","components/seasonDropdown/seasonDropdown.js","pages/standings/standings.js","pages/search/search.js","pages/champions/champions.js","components/statsBlockItem/statsBlockItem.js","components/statsBlock/statsBlock.js","pages/players/players.js","components/resultsThead/resultsThead.js","components/resultsTbody/resultsTbody.js","components/resultsTfoot/resultsTfoot.js","components/resultsDiv/resultsDiv.js","pages/teams/teams.js","pages/results/results.js","components/scheduleRow/scheduleRow.js","components/scheduleTable/scheduleTable.js","pages/schedule/schedule.js","components/numLeadersDropdown/numLeadersDropdown.js","pages/allTime/allTime.js","components/leadersTable/leadersTable.js","pages/leaders/leaders.js","pages/qualifiers/qualifiers.js","pages/noMatch/noMatch.js","components/searchbar/searchbar.js","components/header/header.js","components/navDropdown/navDropdown.js","components/navButton/navButton.js","components/navbar/navbar.js","components/footer/footer.js","index.js","App.js","components/header/images/skeeball_logo.png"],"names":["Home","useState","showRegButton","setShowRegButton","regButtonUrl","setregButtonUrl","regButtonText","setregButtonText","newsArr","setNewsArr","errorMsg","undefined","isLoaded","newsStatus","setNewsStatus","useEffect","axios","get","then","response","data","show_reg_button","reg_button_url","reg_button_text","catch","err","console","log","error","className","href","src","alt","ReactHtmlParser","length","map","news","i","key","page_id","content_heading","text_date1","page_content","PageHeading","props","text","Rules","rules","setRules","rulesStatus","setRulesStatus","CurrentSeasonContext","createContext","Dropdown","currentSeason","buttonText","listItems","handleSeasonId","season_name","season_year","item","season_id","onClick","Standings","seasonId","setSeasonId","currentSeasonId","useContext","querySeasonId","seasonName","setSeasonName","standingsArr","setStandingsArr","standingsArrStatus","setStandingsArrStatus","standingsSeasons","setStandingsSeasons","standingsSeasonsStatus","setStandingsSeasonsStatus","seasonArray","season","year","standings","standingsArray","curStoreDivision","index","forEach","standing","store_division","push","groupStandings","storeDiv","store_city","day_name","standings_id","team_id","team_name","wins","losses","ties","total_points","Search","searchstring","useParams","playerArray","setPlayerArray","teamArray","setTeamArray","player","player_id","full_name","cities","team","Champions","champions","setChampions","result","champion","tourny_team_id","comments","StatsBlockItem","stats","stat","StatsBlock","Players","playerid","playerNameStores","setPlayerNameStores","playerNameStoresStatus","setPlayerNameStoresStatus","currentViewStores","setCurrentViewStores","currentViewStoresStatus","setCurrentViewStoresStatus","playerSeasons","setPlayerSeasons","playerSeasonsStatus","setPlayerSeasonsStatus","playerStats","setPlayerStats","playerStatsStatus","setPlayerStatsStatus","playerResults","setPlayerResults","playerResultsStatus","setPlayerResultsStatus","stores","allScores","formattedResults","tempObj","id","week_id","scores","g1","g2","g3","g4","g5","g6","g7","g8","g9","g10","score","total","reduce","accumulator","currentValue","filter","Math","max","min","totalGames","games800","games700","games600","games500","games400","games300","highGame","lowGame","averageScore","highGameCount","lowGameCount","matchesArray","match","bestTenGameSeries","tempPlayerStats","toFixed","game","ResultsThead","teamId","teamName","ResultsTbody","players","name","ResultsTfoot","gameTotals","gameResults","teamTotal","ResultsDiv","results","setFormattedResults","date","week_date1","away_team","away_team_id","at","game_totals","game_results","team_total","home_team","home_team_id","ht","p","awayPlayerObj","homePlayerObj","g","Number","t","formatResults","colSpan","Teams","teamid","teamNameStores","setTeamNameStores","teamNameStoresStatus","setTeamNameStoresStatus","teamSeasons","setTeamSeasons","teamSeasonsStatus","setTeamSeasonsStatus","teamStats","setTeamStats","teamStatsStatus","setTeamStatsStatus","teamSchedule","setTeamSchedule","teamScheduleStatus","setTeamScheduleStatus","teamPlayers","setTeamPlayers","teamPlayersStatus","setTeamPlayersStatus","teamResults","setTeamResults","teamResultsStatus","setTeamResultsStatus","one_game_low","one_game_avg","one_game_high","ten_game_low","ten_game_avg","ten_game_high","games_played","avg_score","schedule","away_team_name","home_team_name","alley","start_time","Results","storeid","divisionid","setResults","resultsStatus","setResultsStatus","store","setStore","storeStatus","setStoreStatus","resultSeasons","setResultSeasons","resultSeasonsStatus","setResultSeasonsStatus","store_id","division_id","store_name","ScheduleRow","weekId","matchup","ScheduleTable","schedules","week","matchups","Schedule","scheduleArray","setScheduleArray","scheduleArrayStatus","setScheduleArrayStatus","scheduleSeasons","setScheduleSeasons","scheduleSeasonsStatus","setScheduleSeasonsStatus","formattedArray","counter","weekDate","rest","formatScheduleArray","NumLeadersDropdown","numLeaders","numLeadersArray","setNumLeaders","defaultValue","leaders","value","AllTime","LeadersTable","heading","subHeading","columnName","columnData","format","leadersObj","leader","rank","field_id","field_name","numAtTieValue","tieValue","Leaders","indAvgLeaders","setIndAvgLeaders","indAvgLeadersStatus","setIndAvgLeadersStatus","indOneGameLeaders","setIndOneGameLeaders","indOneGameLeadersStatus","setIndOneGameLeadersStatus","indTenGameLeaders","setIndTenGameLeaders","indTenGameLeadersStatus","setIndTenGameLeadersStatus","teamAvgLeaders","setTeamAvgLeaders","teamAvgLeadersStatus","setTeamAvgLeadersStatus","teamOneGameLeaders","setTeamOneGameLeaders","teamOneGameLeadersStatus","setTeamOneGameLeadersStatus","teamTenGameLeaders","setTeamTenGameLeaders","teamTenGameLeadersStatus","setTeamTenGameLeadersStatus","leadersSeasons","setLeadersSeasons","leadersSeasonsStatus","setLeadersSeasonsStatus","rankLeaders","lastData","num_at_tie_value","tie_value","Qualifers","NoMatch","SearchBar","searchInput","setSearchInput","submitted","setSubmitted","onSubmit","e","preventDefault","type","maxLength","placeholder","onChange","event","target","to","Header","skeeballLogo","NavDropdown","data-toggle","urlPrefix","NavButton","url","NavBar","displaySchedule","setDisplaySchedule","storeDivisionArr","setStoreDivisionArr","a","async","response1","current_season_id","display_schedule","response2","storeDivArray","Footer","rel","ReactDOM","render","setCurrentSeasonId","exact","path","Provider","component","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.381985d5.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\n\nfunction Home() {\n    const [showRegButton, setShowRegButton] = useState(0);\n    const [regButtonUrl, setregButtonUrl] = useState(null);\n    const [regButtonText, setregButtonText] = useState(null);\n    const [newsArr, setNewsArr] = useState([]);\n    const [newsStatus, setNewsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    useEffect(() => {\n        axios.get('/api/settings/homepage')\n            .then((response) => {\n                setShowRegButton(response.data[0].show_reg_button);\n                setregButtonUrl(response.data[0].reg_button_url);\n                setregButtonText(response.data[0].reg_button_text);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        axios.get('/api/pages/homepage-news')\n            .then((response) => {\n                setNewsArr(response.data);\n                setNewsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setNewsStatus({ errorMsg: 'An error occurred fetching league news!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <div>\n            {showRegButton === 1 && regButtonUrl && regButtonText &&\n                <div>\n                    <div className=\"text-center\">\n                        <a href={regButtonUrl}><img src=\"/images/register_now.jpg\" alt=\"REGISTER NOW!\" /></a>\n                        {ReactHtmlParser(regButtonText)}\n                    </div>\n                </div>\n            }\n\n            {!newsStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : newsArr && newsArr.length > 0\n                    ? <Fragment>\n                        {newsArr.map((news, i) => (\n                            <div key={news.page_id}>\n                                {i > 0 && <hr className=\"mt-4 mb-4\" />}\n                                <h5 className=\"text-danger mt-1 mb-0\">{news.content_heading}</h5>\n                                <p><span className=\"small\">{news.text_date1}</span></p>\n                                {ReactHtmlParser(news.page_content)}\n                            </div>\n                        ))}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see league news!</div>\n\n            }\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeading = (props) => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center\">{props.text}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nPageHeading.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageHeading;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Rules = () => {\n    const [rules, setRules] = useState(null);\n    const [rulesStatus, setRulesStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    useEffect(() => {\n        axios.get('/api/pages/rules')\n            .then((response) => {\n                response.data[0] && setRules(response.data[0]);\n                setRulesStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setRulesStatus({ errorMsg: 'An error occurred fetching league rules!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            {!rulesStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : rules\n                    ? <Fragment>\n                        <PageHeading text={rules.content_heading} />\n                        {ReactHtmlParser(rules.page_content)}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see the rules!</div>\n\n            }\n        </Fragment>\n    );\n};\n\nexport default Rules;\n","import { createContext } from 'react';\n\nconst CurrentSeasonContext = createContext(null);\n\nexport default CurrentSeasonContext;\n","import React, { Fragment } from 'react';\nimport './css/seasonDropdown.css';\nimport PropTypes from 'prop-types';\n\nfunction Dropdown({ currentSeason, buttonText, listItems, handleSeasonId }) {\n    return (\n        <Fragment>\n            {currentSeason &&\n                <Fragment>\n                    <span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentSeason.season_name}, {currentSeason.season_year}</span>\n                </Fragment>\n            }\n            <div className=\"dropdown ml-2\">\n                <button className=\"dropbtn\">{buttonText}<i className=\"down\"></i></button>\n                <ul className=\"dropdown-content\">\n                    {listItems.map(item => (\n                        <Fragment key={item.season_id}>\n                            {currentSeason && (item.season_id === currentSeason.season_id)\n                                ? <li className=\"viewing\">{item.text}</li>\n                                : <li onClick={() => handleSeasonId(item.season_id)}>{item.text}</li>\n                            }\n                        </Fragment>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n}\n\nDropdown.propTypes = {\n    currentSeason: PropTypes.object,\n    buttonText: PropTypes.string,\n    listItems: PropTypes.array,\n    handleSeasonId: PropTypes.func,\n};\n\nexport default Dropdown;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\n\nexport default function Standings() {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [standingsArr, setStandingsArr] = useState();\n    const [standingsArrStatus, setStandingsArrStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [standingsSeasons, setStandingsSeasons] = useState(null);\n    const [standingsSeasonsStatus, setStandingsSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    function groupStandings(standings) {\n        const standingsArray = [];\n        let curStoreDivision = 0;\n        let index = -1;\n        standings.forEach(standing => {\n            if (index === -1 || curStoreDivision !== standing.store_division) {\n                standingsArray.push([]);\n                index++;\n                curStoreDivision = standing.store_division;\n            }\n            standingsArray[index].push(standing);\n        });\n        setStandingsArr(standingsArray);\n        setStandingsArrStatus({ errorMsg: undefined, isLoaded: true });\n    }\n\n    useEffect(() => {\n        axios.get('/api/standings/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setStandingsSeasons(seasonArray);\n                setStandingsSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setStandingsSeasons(null);\n                setStandingsSeasonsStatus({ errorMsg: 'An error occurred fetching the standings!', isLoaded: true });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/standings/season/' + querySeasonId)\n                .then(response => groupStandings(response.data))\n                .catch((error) => {\n                    console.log(error);\n                    setStandingsArr(null);\n                    setStandingsArrStatus({ errorMsg: 'An error occurred fetching the standings!', isLoaded: true });\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Standings\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-12 text-right p-2\">\n                    {standingsSeasonsStatus.isLoaded && standingsSeasons && standingsSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Standings From\" listItems={standingsSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            {!standingsArrStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : standingsArr && standingsArr.length > 0\n                    ? <Fragment>\n                        {standingsArr.map((storeDiv, index) => (\n                            <div key={index}>\n                                <h5 className=\"text-center\">{storeDiv[0].store_city} - {storeDiv[0].day_name}</h5>\n                                <div className=\"d-flex justify-content-center mb-4\">\n                                    <div className=\"min-w-50 mx-auto table-wrapper\">\n                                        <table className=\"table table-bordered mb-4 text-center\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th className=\"text-left\">TEAM</th>\n                                                    <th>W</th>\n                                                    <th>L</th>\n                                                    <th>T</th>\n                                                    <th>TOTAL POINTS</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {standingsArr[index].map((standing) => (\n                                                    <tr key={standing.standings_id}>\n                                                        <td className=\"text-left\"><a href={'/teams/' + standing.team_id}>{standing.team_name}</a></td>\n                                                        <td>{standing.wins}</td>\n                                                        <td>{standing.losses}</td>\n                                                        <td>{standing.ties}</td>\n                                                        <td>{standing.total_points}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </Fragment>\n                    : standingsArr\n                        ? <span className=\"empty-result\">There are no standings for this season!</span>\n                        : <span className=\"empty-result\">{standingsArrStatus.errorMsg}</span>\n            }\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nexport default function Search() {\n    const { searchstring } = useParams();\n    const [playerArray, setPlayerArray] = useState([]);\n    const [teamArray, setTeamArray] = useState([]);\n    useEffect(() => {\n        axios.get('/api/searches/players/' + searchstring)\n            .then((response) => {\n                setPlayerArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        axios.get('/api/searches/teams/' + searchstring)\n            .then((response) => {\n                setTeamArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [searchstring]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Search Results\" />\n            <p className=\"text-center\"><b>Search Results for:</b> {searchstring}</p>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Player Matches:</b> {playerArray.length}</p>\n                    {playerArray.map(player => (\n                        <p key={player.player_id}><a href={'/players/' + player.player_id}>{player.full_name}</a> ({player.cities})</p>\n                    ))}\n                </div>\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Team Matches:</b> {teamArray.length}</p>\n                    {teamArray.map(team => (\n                        <p key={team.team_id}><a href={'/teams/' + team.team_id}>{team.team_name}</a> ({team.cities})</p>\n                    ))}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport axios from 'axios';\n\nconst Champions = () => {\n    const [champions, setChampions] = useState([]);\n\n    useEffect(() => {\n        axios.get('/api/seasons/champions')\n            .then(result => setChampions(result.data))\n            .catch(err => console.log(err));\n    }, []);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Champions\" />\n            {champions.length > 0 &&\n                <div className=\"d-flex justify-content-center\">\n                    <div className=\"min-w-50 mx-auto\">\n                        <table className=\"table table-bordered table-hover\">\n                            <thead>\n                                <tr className=\"bg-gray6\">\n                                    <th>Season</th>\n                                    <th>Champion</th>\n                                    <th>Store</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {champions.map((champion) => (\n                                    <tr key={champion.season_id}>\n                                        <td>{champion.season_name}-{champion.year}</td>\n                                        <td><a href={'/teams/' + champion.tourny_team_id}>{champion.team_name}</a>{champion.comments.length > 0 && <span className=\"small ml-2\">*({champion.comments})</span>}</td>\n                                        <td>{champion.store_city}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Champions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './css/statsBlockItem.css';\n\nconst StatsBlockItem = (props) => {\n    return (\n        props.stats.map((stat, index) => (\n            <tr key={index}>\n                <td className=\"bg-stat-heading font-weight-bolder text-right\">{stat.text}</td>\n                <td className=\"text-center px-4\">{stat.data}</td>\n            </tr>\n        ))\n    );\n};\n\nStatsBlockItem.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatsBlockItem from '../../components/statsBlockItem/statsBlockItem';\n\nconst StatsBlock = (props) => {\n    return (\n        <table className=\"table table-bordered table-hover\">\n            <tbody>\n                <StatsBlockItem stats={props.stats} />\n            </tbody>\n        </table>\n    );\n};\n\nStatsBlock.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlock;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nconst Players = () => {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { playerid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [playerNameStores, setPlayerNameStores] = useState(null);\n    const [playerNameStoresStatus, setPlayerNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerSeasons, setPlayerSeasons] = useState(null);\n    const [playerSeasonsStatus, setPlayerSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerStats, setPlayerStats] = useState(null);\n    const [playerStatsStatus, setPlayerStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerResults, setPlayerResults] = useState(null);\n    const [playerResultsStatus, setPlayerResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/players/' + playerid + '/name-store')\n            .then((response) => {\n                response.data[0] ? setPlayerNameStores(response.data[0]) : setPlayerNameStores([]);\n                setPlayerNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerNameStores(null);\n                setPlayerNameStoresStatus({ errorMsg: 'An error occurred fetching info for this Player!', isLoaded: true });\n            });\n        axios.get('/api/players/' + playerid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setPlayerSeasons(seasonArray);\n                setPlayerSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerSeasons(null);\n                setPlayerSeasonsStatus({ errorMsg: 'An error occurred fetching stats for this player!', isLoaded: true });\n            });\n    }, [playerid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/players/' + playerid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/players/' + playerid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data.length > 0) {\n                        const allScores = [];\n                        const formattedResults = response.data.map((result, index) => {\n                            const tempObj = {\n                                id: index,\n                                team_id: result.team_id,\n                                team_name: result.team_name,\n                                week_id: result.week_id,\n                                player_id: result.player_id,\n                                scores: [result.g1, result.g2, result.g3, result.g4, result.g5, result.g6, result.g7, result.g8, result.g9, result.g10],\n                            };\n                            tempObj.scores.map(score => allScores.push(score));\n                            tempObj.total = tempObj.scores.reduce((accumulator, currentValue) => accumulator + currentValue);\n                            return tempObj;\n                        });\n                        const [totalGames, games800, games700, games600, games500, games400, games300, highGame, lowGame] = [\n                            allScores.length,\n                            allScores.filter(score => score >= 800).length,\n                            allScores.filter(score => score >= 700).length,\n                            allScores.filter(score => score >= 600).length,\n                            allScores.filter(score => score >= 500).length,\n                            allScores.filter(score => score >= 400).length,\n                            allScores.filter(score => score >= 300).length,\n                            Math.max(...allScores), Math.min(...allScores),\n                        ];\n                        const [averageScore, highGameCount, lowGameCount] = [allScores.reduce((accumulator, currentValue) => accumulator + currentValue) / totalGames, allScores.filter(score => score === highGame).length, allScores.filter(score => score === lowGame).length];\n                        const matchesArray = formattedResults.map(match => match.scores.reduce((accumulator, currentValue) => accumulator + currentValue));\n                        const bestTenGameSeries = Math.max(...matchesArray);\n                        const tempPlayerStats = [];\n                        tempPlayerStats.push({ text: 'Total Games Played:', data: totalGames });\n                        games800 > 0 && tempPlayerStats.push({ text: '800+ Games:', data: games800 + ' (' + (100 * games800 / totalGames).toFixed(1) + '%)' });\n                        games700 > 0 && tempPlayerStats.push({ text: '700+ Games:', data: games700 + ' (' + (100 * games700 / totalGames).toFixed(1) + '%)' });\n                        games600 > 0 && tempPlayerStats.push({ text: '600+ Games:', data: games600 + ' (' + (100 * games600 / totalGames).toFixed(1) + '%)' });\n                        games500 > 0 && tempPlayerStats.push({ text: '500+ Games:', data: games500 + ' (' + (100 * games500 / totalGames).toFixed(1) + '%)' });\n                        games400 > 0 && tempPlayerStats.push({ text: '400+ Games:', data: games400 + ' (' + (100 * games400 / totalGames).toFixed(1) + '%)' });\n                        games300 > 0 && tempPlayerStats.push({ text: '300+ Games:', data: games300 + ' (' + (100 * games300 / totalGames).toFixed(1) + '%)' });\n                        tempPlayerStats.push({ text: 'Average Score per Game:', data: averageScore.toFixed(1) });\n                        tempPlayerStats.push({ text: 'High Game:', data: highGame + ' (' + highGameCount + ')' });\n                        tempPlayerStats.push({ text: 'Low Game:', data: lowGame + ' (' + lowGameCount + ')' });\n                        tempPlayerStats.push({ text: 'Best 10-Game Series:', data: bestTenGameSeries });\n                        setPlayerStats(tempPlayerStats);\n                        setPlayerResults(formattedResults);\n                    } else {\n                        setPlayerStats([]);\n                        setPlayerResults([]);\n                    }\n                    setPlayerStatsStatus({ errorMsg: undefined, isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setPlayerStats(null);\n                    setPlayerResults(null);\n                    setPlayerStatsStatus({ errorMsg: 'An error occurred fetching stats for this Player!', isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: 'An error occurred fetching results for this Player!', isLoaded: true });\n                });\n        }\n    }, [playerid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Player Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {playerNameStoresStatus.isLoaded && playerNameStores &&\n                        <div className=\"mb-3\">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Player: </span>{playerNameStores.full_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {playerNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {playerSeasonsStatus.isLoaded && playerSeasons && playerSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={playerSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto\">\n                    {!playerStatsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerStats && playerStats.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                <StatsBlock stats={playerStats} />\n                            </Fragment>\n                            : playerStats\n                                ? <span className=\"empty-result\">There are no player stats for this season!</span>\n                                : <span className=\"empty-result\">{playerStatsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto\">\n                    {!playerResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerResults && playerResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Week by Week Results</h5>\n                                <table className=\"table table-bordered table-hover mb-0\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th>Week # - Team</th>\n                                            {gamesArray.map((game, i) => (\n                                                <th key={i} className=\"text-center\">{game}</th>\n                                            ))}\n                                            <th className=\"text-center\">Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {playerResults.map((result) => (\n                                            <tr key={result.id}>\n                                                <td>{result.week_id} - <a href={'/teams/' + result.team_id}>{result.team_name}</a></td>\n                                                {result.scores.map((score, index) => (\n                                                    <td key={index} className=\"text-center\">{score}</td>\n                                                ))}\n                                                <td className=\"text-center\">{result.total}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : playerResults\n                                ? <span className=\"empty-result\">There are no player results for this season!</span>\n                                : <span className=\"empty-result\">{playerResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n};\n\nexport default Players;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsThead = ({ teamId, teamName, wins, losses, ties }) => {\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td><a href={'/teams/' + teamId}>{teamName}</a> (<span className={'text-' + (wins > losses ? 'success' : (wins < losses ? 'danger' : 'primary'))}>{wins}-{losses}-{ties}</span>)</td>\n                {gamesArray.map((game, i) => (\n                    <td key={i} className=\"text-center\">{game}</td>\n                ))}\n                <td className=\"text-center\">Total</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsThead.propTypes = {\n    teamId: PropTypes.number,\n    teamName: PropTypes.string,\n    wins: PropTypes.number,\n    losses: PropTypes.number,\n    ties: PropTypes.number,\n};\n\nexport default ResultsThead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTbody = ({ players }) => {\n    return (\n        <tbody>\n            {players.map((player, index) => (\n                <tr key={index} className=\"bg-white\">\n                    <td><a href={'/players/' + player.player_id}>{player.name}</a></td>\n                    {player.scores.map((score, i) => (\n                        <td key={i} className=\"text-center\">{score}</td>\n                    ))}\n                    <td className=\"text-center\">{player.total_points}</td>\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nResultsTbody.propTypes = {\n    players: PropTypes.array,\n};\n\nexport default ResultsTbody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTfoot = ({ gameTotals, gameResults, teamTotal }) => {\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td>Total</td>\n                {gameTotals.map((total, i) => (\n                    <td key={i} className=\"text-center\"><span className={'text-' + (gameResults[i] === 'w' ? 'success' : (gameResults[i] === 'l' ? 'danger' : 'primary'))}>{total}</span></td>\n                ))}\n                <td className=\"text-center\">{teamTotal}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsTfoot.propTypes = {\n    gameTotals: PropTypes.array,\n    gameResults: PropTypes.array,\n    teamTotal: PropTypes.number,\n};\n\nexport default ResultsTfoot;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsThead from '../resultsThead/resultsThead';\nimport ResultsTbody from '../resultsTbody/resultsTbody';\nimport ResultsTfoot from '../resultsTfoot/resultsTfoot';\n\nconst formatResults = (results) => {\n    const resultsArray = results.map((result, index) => {\n        const tempObj = {};\n        tempObj.id = index;\n        tempObj.week_id = result.week_id;\n        tempObj.date = result.week_date1;\n        tempObj.away_team = {\n            team_id: result.away_team_id,\n            team_name: result.at,\n            wins: 0,\n            losses: 0,\n            ties: 0,\n            game_totals: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            game_results: [],\n            team_total: 0,\n            players: [],\n        };\n        tempObj.home_team = {\n            team_id: result.home_team_id,\n            team_name: result.ht,\n            wins: 0,\n            losses: 0,\n            ties: 0,\n            game_totals: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            game_results: [],\n            team_total: 0,\n            players: [],\n        };\n        for (let p = 1; p <= 3; p++) {\n            const awayPlayerObj = {\n                player_id: result['ap' + p + 'id'],\n                name: result['ap' + p],\n                scores: [],\n                total_points: 0,\n            };\n            const homePlayerObj = {\n                player_id: result['hp' + p + 'id'],\n                name: result['hp' + p],\n                scores: [],\n                total_points: 0,\n            };\n            for (let g = 1; g <= 10; g++) {\n                tempObj.away_team.game_totals[g - 1] += Number(result['ap' + p + 'g' + g]);\n                tempObj.away_team.team_total += Number(result['ap' + p + 'g' + g]);\n                tempObj.home_team.game_totals[g - 1] += Number(result['hp' + p + 'g' + g]);\n                tempObj.home_team.team_total += Number(result['hp' + p + 'g' + g]);\n                awayPlayerObj.total_points += Number(result['ap' + p + 'g' + g]);\n                awayPlayerObj.scores.push(Number(result['ap' + p + 'g' + g]));\n                homePlayerObj.total_points += Number(result['hp' + p + 'g' + g]);\n                homePlayerObj.scores.push(Number(result['hp' + p + 'g' + g]));\n            }\n            tempObj.away_team.players.push(awayPlayerObj);\n            tempObj.home_team.players.push(homePlayerObj);\n        }\n        for (let t = 0; t <= 9; t++) {\n            if (tempObj.away_team.game_totals[t] > tempObj.home_team.game_totals[t]) {\n                tempObj.away_team.wins += 1;\n                tempObj.away_team.game_results.push('w');\n                tempObj.home_team.losses += 1;\n                tempObj.home_team.game_results.push('l');\n            } else if (tempObj.away_team.game_totals[t] < tempObj.home_team.game_totals[t]) {\n                tempObj.away_team.losses += 1;\n                tempObj.away_team.game_results.push('l');\n                tempObj.home_team.wins += 1;\n                tempObj.home_team.game_results.push('w');\n            } else {\n                tempObj.away_team.ties += 1;\n                tempObj.away_team.game_results.push('t');\n                tempObj.home_team.ties += 1;\n                tempObj.home_team.game_results.push('t');\n            }\n        }\n        return tempObj;\n    });\n    return resultsArray;\n};\n\nconst ResultsDiv = ({ results }) => {\n    const [formattedResults, setFormattedResults] = useState([]);\n\n    useEffect(() => {\n        setFormattedResults(formatResults(results));\n    }, [results]);\n\n    return (\n        <Fragment>\n            {formattedResults.map((result) => (\n                <Fragment key={result.id}>\n                    <h5 className=\"text-center text-success\">Week {result.week_id} ({result.date})</h5>\n                    <div className=\"p-1 mb-4 border border-secondary table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-1\">\n                            <ResultsThead teamId={result.away_team.team_id} teamName={result.away_team.team_name} wins={result.away_team.wins} losses={result.away_team.losses} ties={result.away_team.ties} />\n                            <ResultsTbody players={result.away_team.players} />\n                            <ResultsTfoot gameTotals={result.away_team.game_totals} gameResults={result.away_team.game_results} teamTotal={result.away_team.team_total} />\n                            <tbody><tr><td colSpan=\"12\" className=\"border-0\"></td></tr></tbody>\n                            <ResultsThead teamId={result.home_team.team_id} teamName={result.home_team.team_name} wins={result.home_team.wins} losses={result.home_team.losses} ties={result.home_team.ties} />\n                            <ResultsTbody players={result.home_team.players} />\n                            <ResultsTfoot gameTotals={result.home_team.game_totals} gameResults={result.home_team.game_results} teamTotal={result.home_team.team_total} />\n                        </table>\n                    </div>\n                </Fragment>\n            ))}\n        </Fragment>\n    );\n};\n\nResultsDiv.propTypes = {\n    results: PropTypes.array,\n};\n\nexport default ResultsDiv;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nexport default function Teams() {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { teamid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [teamNameStores, setTeamNameStores] = useState(null);\n    const [teamNameStoresStatus, setTeamNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamSeasons, setTeamSeasons] = useState(null);\n    const [teamSeasonsStatus, setTeamSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamStats, setTeamStats] = useState(null);\n    const [teamStatsStatus, setTeamStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamSchedule, setTeamSchedule] = useState(null);\n    const [teamScheduleStatus, setTeamScheduleStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamPlayers, setTeamPlayers] = useState(null);\n    const [teamPlayersStatus, setTeamPlayersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamResults, setTeamResults] = useState(null);\n    const [teamResultsStatus, setTeamResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/teams/' + teamid + '/store-name')\n            .then((response) => {\n                response.data[0] ? setTeamNameStores(response.data[0]) : setTeamNameStores([]);\n                setTeamNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamNameStores(null);\n                setTeamNameStoresStatus({ errorMsg: 'An error occurred fetching info for this team!', isLoaded: true });\n            });\n        axios.get('/api/teams/' + teamid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setTeamSeasons(seasonArray);\n                setTeamSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamSeasons(null);\n                setTeamSeasonsStatus({ errorMsg: 'An error occurred fetching stats for this team!', isLoaded: true });\n            });\n    }, [teamid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/teams/' + teamid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data[2][0]) {\n                        setTeamStats([\n                            { text: 'Record:', data: response.data[2][0].wins + '-' + response.data[2][0].losses + '-' + response.data[2][0].ties },\n                            { text: 'Total Points:', data: response.data[2][0].total_points },\n                            { text: '1-Game Low:', data: response.data[2][0].one_game_low },\n                            { text: '1-Game Avg:', data: Number(response.data[2][0].one_game_avg).toFixed(1) },\n                            { text: '1-Game High:', data: response.data[2][0].one_game_high },\n                            { text: '10-Game Low:', data: response.data[2][0].ten_game_low },\n                            { text: '10-Game Avg:', data: Number(response.data[2][0].ten_game_avg).toFixed(1) },\n                            { text: '10-Game High:', data: response.data[2][0].ten_game_high },\n                        ]);\n                    } else {\n                        setTeamStats([]);\n                    }\n                    setTeamStatsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamStats(null);\n                    setTeamStatsStatus({ errorMsg: 'An error occurred fetching stats for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/current-schedule/seasons/' + querySeasonId)\n                .then((response) => {\n                    response.data[2] ? setTeamSchedule(response.data[2]) : setTeamSchedule([]);\n                    setTeamScheduleStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamSchedule(null);\n                    setTeamScheduleStatus({ errorMsg: 'An error occurred fetching the schedule for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/players/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamPlayers(response.data);\n                    setTeamPlayersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamPlayers(null);\n                    setTeamPlayersStatus({ errorMsg: 'An error occurred fetching players for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    response.data[2] ? setTeamResults(response.data[2]) : setTeamResults([]);\n                    setTeamResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamResults(null);\n                    setTeamResultsStatus({ errorMsg: 'An error occurred fetching the schedule for this team!', isLoaded: true });\n                });\n        }\n    }, [teamid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Team Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {teamNameStoresStatus.isLoaded && teamNameStores &&\n                        <div className=\"mb-3 \">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Team: </span>{teamNameStores.team_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {teamNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {teamSeasonsStatus.isLoaded && teamSeasons && teamSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={teamSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamPlayersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamPlayers && teamPlayers.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Players</h5>\n                                        <table className=\"table table-bordered table-hover\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th>Player</th>\n                                                    <th className=\"text-center\">Games</th>\n                                                    <th className=\"text-center\">Average</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {teamPlayers.map((player) => (\n                                                    <tr key={player.player_id}>\n                                                        <td><a href={'/players/' + player.player_id}>{player.full_name}</a></td>\n                                                        <td className=\"text-center\">{player.games_played}</td>\n                                                        <td className=\"text-center\">{Number(player.avg_score).toFixed(1)}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </Fragment>\n                                    : teamPlayers\n                                        ? <span className=\"empty-result\">There are no players on this team in the selected season!</span>\n                                        : <span className=\"empty-result\">{teamPlayersStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamStatsStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamStats && teamStats.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                        <StatsBlock stats={teamStats} />\n                                    </Fragment>\n                                    : teamStats\n                                        ? <span className=\"empty-result\">There are no team stats for the selected season!</span>\n                                        : <span className=\"empty-result\">{teamStatsStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamScheduleStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamSchedule && teamSchedule.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Schedule</h5>\n                                <table className=\"table table-bordered table-hover\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th className=\"text-center\">WEEK #</th>\n                                            <th>Away Team</th>\n                                            <th>Home Team</th>\n                                            <th className=\"text-center\">Alley</th>\n                                            <th>Start Time</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {teamSchedule.map((schedule) => (\n                                            <tr key={schedule.week_id} className=\"bg-white\">\n                                                <td className=\"text-center\">{schedule.week_id}</td>\n                                                <td><a href={'/teams/' + schedule.away_team_id}>{schedule.away_team_name}</a></td>\n                                                <td><a href={'/teams/' + schedule.home_team_id}>{schedule.home_team_name}</a></td>\n                                                <td className=\"text-center\">{schedule.alley}</td>\n                                                <td>{schedule.start_time}</td>\n                                                <td>{schedule.week_date1}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : teamSchedule\n                                ? <span className=\"empty-result\">There is no schedule for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamScheduleStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamResults && teamResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Weekly Results</h5>\n                                <ResultsDiv results={teamResults} />\n                            </Fragment>\n                            : teamResults\n                                ? <span className=\"empty-result\">There are no results for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Results = () => {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [results, setResults] = useState(null);\n    const [resultsStatus, setResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [resultSeasons, setResultSeasons] = useState(null);\n    const [resultSeasonsStatus, setResultSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setResultSeasons(seasonArray);\n                setResultSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setResultSeasons(null);\n                setResultSeasonsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore(null);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching the store name!', isLoaded: true });\n                });\n            axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    if (response.data[3]) {\n                        setResults(response.data[3]);\n                    }\n                    setResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setResults(null);\n                    setResultsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Results\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {resultSeasonsStatus.isLoaded && resultSeasons && resultSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={resultSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!resultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : results && results.length > 0\n                            ? <ResultsDiv results={results} />\n                            : results\n                                ? <span className=\"empty-result\">There are no results for this season!</span>\n                                : <span className=\"empty-result\">{resultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScheduleRow = ({ weekId, matchup }) => {\n    return (\n        <tr key={`${weekId}${matchup.home_team_id}`} className=\"bg-white\">\n            <td><a href={'/teams/' + matchup.away_team_id}>{matchup.away_team}</a></td>\n            <td><a href={'/teams/' + matchup.home_team_id}>{matchup.home_team}</a></td>\n            <td className=\"text-center\">{matchup.alley}</td>\n            <td>{matchup.start_time}</td>\n        </tr>\n    );\n};\n\nScheduleRow.propTypes = {\n    weekId: PropTypes.number,\n    matchup: PropTypes.object,\n};\n\nexport default ScheduleRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ScheduleRow from '../../components/scheduleRow/scheduleRow';\n\nconst ScheduleTable = ({ schedules }) => {\n    return (\n        <Fragment>\n            {schedules.map((week) => (\n                <div key={week.week_id} className=\"mb-5\">\n                    <h5 className=\"text-center text-success mb-4\">Week {week.week_id} ({week.week_date1})</h5>\n                    <div className=\"mb-3 table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-2\">\n                            <thead>\n                                <tr className=\"bg-gray6\">\n                                    <th>Away Team</th>\n                                    <th>Home Team</th>\n                                    <th className=\"text-center\">Alley</th>\n                                    <th>Start Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {week.matchups.map((matchup) => (\n                                    <Fragment key={`${week.week_id}${matchup.home_team_id}`}>\n                                        <ScheduleRow weekId={week.week_id} matchup={matchup} />\n                                    </Fragment>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nScheduleTable.propTypes = {\n    schedules: PropTypes.array,\n};\n\nexport default ScheduleTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport ScheduleTable from '../../components/scheduleTable/scheduleTable';\n\nconst Schedule = () => {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [scheduleArray, setScheduleArray] = useState(null);\n    const [scheduleArrayStatus, setScheduleArrayStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [scheduleSeasons, setScheduleSeasons] = useState(null);\n    const [scheduleSeasonsStatus, setScheduleSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    function formatScheduleArray(schedules) {\n        const formattedArray = [];\n        let tempObj = {};\n        let counter = 0;\n        schedules.map((schedule) => {\n            const { week_id: weekId, week_date1: weekDate, ...rest } = schedule;\n            if (schedule.week_id !== counter) {\n                tempObj = {\n                    week_id: weekId,\n                    week_date1: weekDate,\n                    matchups: [],\n                };\n                formattedArray.push(tempObj);\n                counter = schedule.week_id;\n            }\n            return formattedArray[counter - 1].matchups.push({ ...rest });\n        });\n        setScheduleArray(formattedArray);\n        setScheduleArrayStatus({ errorMsg: undefined, isLoaded: true });\n    }\n\n    useEffect(() => {\n        axios.get('/api/schedules/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setScheduleSeasons(seasonArray);\n                setScheduleSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setScheduleSeasons(null);\n                setScheduleSeasonsStatus({ errorMsg: 'An error occurred fetching the schedule for this store!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore([]);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching info for this store!', isLoaded: true });\n                });\n\n            axios('/api/schedules/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then(response => formatScheduleArray(response.data))\n                .catch(err => console.log(err));\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Schedule\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {scheduleSeasonsStatus.isLoaded && scheduleSeasons && scheduleSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Schedule From\" listItems={scheduleSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!scheduleArrayStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : scheduleArray && scheduleArray.length > 0\n                            ? <Fragment>\n                                <ScheduleTable schedules={scheduleArray} />\n                            </Fragment>\n                            : scheduleArray\n                                ? <span className=\"empty-result\">There is no schedule available for this season!</span>\n                                : <span className=\"empty-result\">{scheduleArrayStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Schedule;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumLeadersDropdown({ numLeaders, numLeadersArray, setNumLeaders }) {\n    return (\n        <Fragment>\n            {numLeadersArray && numLeadersArray.length > 0 &&\n                <span className=\"small\">Currently showing top:</span>\n            }\n            <select className=\"ml-2\" defaultValue={numLeaders}>\n                {numLeadersArray.map(leaders => (\n                    <Fragment key={leaders}>\n                        {numLeaders === leaders\n                            ? <option>{leaders}</option>\n                            : <option value={leaders} onClick={() => setNumLeaders(leaders)}>{leaders}</option>\n                        }\n                    </Fragment>\n                ))}\n            </select>\n        </Fragment>\n    );\n}\n\nNumLeadersDropdown.propTypes = {\n    numLeaders: PropTypes.number,\n    numLeadersArray: PropTypes.array,\n    setNumLeaders: PropTypes.func,\n};\n\nexport default NumLeadersDropdown;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst AllTime = () => {\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    useEffect(() => {\n\n    }, [numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default AllTime;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LeadersTable = ({ heading, subHeading, columnName, columnData, format, href, leadersObj }) => {\n    return (\n        <Fragment>\n            <div className=\"text-center mb-4\">\n                <h5 className=\"text-success mb-0\">{heading}</h5>\n                {subHeading &&\n                    <span className=\"text-secondary small\">{subHeading}</span>\n                }\n            </div>\n            <table className=\"table table-bordered table-hover mb-5\">\n                <thead>\n                    <tr className=\"bg-gray6\">\n                        <th className=\"text-center\">Rank</th>\n                        <th className=\"text-left\">{columnName}</th>\n                        <th className=\"text-center\">{columnData}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {leadersObj.leaders.map((leader) => (\n                        <tr key={leader.key}>\n                            <td className=\"text-center\">{leader.rank}</td>\n                            <td><a href={`${href}${leader.field_id}`}>{leader.field_name}</a> ({leader.store_city})</td>\n                            <td className=\"text-center\">\n                                {format === 'decimal'\n                                    ? Number(leader.data).toFixed(1)\n                                    : Number(leader.data)\n                                }\n                            </td>\n                        </tr>\n                    ))}\n                    {leadersObj.numAtTieValue > 1 &&\n                        <tr>\n                            <td></td>\n                            <td className=\"text-right text-success\">{leadersObj.numAtTieValue} tied at:</td>\n                            <td className=\"text-center\">{leadersObj.tieValue}</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nLeadersTable.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    columnName: PropTypes.string,\n    columnData: PropTypes.string,\n    format: PropTypes.string,\n    href: PropTypes.string,\n    leadersObj: PropTypes.object,\n};\n\nexport default LeadersTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport LeadersTable from '../../components/leadersTable/leadersTable';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst Leaders = () => {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    const [indAvgLeaders, setIndAvgLeaders] = useState(null);\n    const [indAvgLeadersStatus, setIndAvgLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [indOneGameLeaders, setIndOneGameLeaders] = useState(null);\n    const [indOneGameLeadersStatus, setIndOneGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [indTenGameLeaders, setIndTenGameLeaders] = useState(null);\n    const [indTenGameLeadersStatus, setIndTenGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamAvgLeaders, setTeamAvgLeaders] = useState(null);\n    const [teamAvgLeadersStatus, setTeamAvgLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamOneGameLeaders, setTeamOneGameLeaders] = useState(null);\n    const [teamOneGameLeadersStatus, setTeamOneGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamTenGameLeaders, setTeamTenGameLeaders] = useState(null);\n    const [teamTenGameLeadersStatus, setTeamTenGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [leadersSeasons, setLeadersSeasons] = useState(null);\n    const [leadersSeasonsStatus, setLeadersSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    function rankLeaders(leaders) {\n        let rank = 0;\n        let lastData = 0;\n        const newLeaders = leaders.map((leader, index) => {\n            (leader.data !== lastData) && (rank = index + 1);\n            leader.key = `${leader.player_id}${index}`;\n            leader.rank = rank;\n            lastData = leader.data;\n            return leader;\n        });\n        return newLeaders;\n    }\n\n    useEffect(() => {\n        axios.get('/api/leaders/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setLeadersSeasons(seasonArray);\n                setLeadersSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setLeadersSeasons(null);\n                setLeadersSeasonsStatus({ errorMsg: 'An error occurred fetching leaders seasons!', isLoaded: true });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('api/leaders/individual/average/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndAvgLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: rankLeaders(response.data[1]),\n                    });\n                    setIndAvgLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndAvgLeaders(null);\n                    setIndAvgLeadersStatus({ errorMsg: 'An error occurred fetching player best average leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/individual/one-game/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndOneGameLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: rankLeaders(response.data[1]),\n                    });\n                    setIndOneGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndOneGameLeaders(null);\n                    setIndOneGameLeadersStatus({ errorMsg: 'An error occurred fetching player 1-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/individual/ten-game/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndTenGameLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: rankLeaders(response.data[1]),\n                    });\n                    setIndTenGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndTenGameLeaders(null);\n                    setIndTenGameLeadersStatus({ errorMsg: 'An error occurred fetching player 10-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/average/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamAvgLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: rankLeaders(response.data[1]),\n                    });\n                    setTeamAvgLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamAvgLeaders(null);\n                    setTeamAvgLeadersStatus({ errorMsg: 'An error occurred fetching team best average leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/one-game/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamOneGameLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: rankLeaders(response.data[1]),\n                    });\n                    setTeamOneGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamOneGameLeaders(null);\n                    setTeamOneGameLeadersStatus({ errorMsg: 'An error occurred fetching team 1-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/ten-game/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamTenGameLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: rankLeaders(response.data[1]),\n                    });\n                    setTeamTenGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamTenGameLeaders(null);\n                    setTeamTenGameLeadersStatus({ errorMsg: 'An error occurred fetching team 10-game leaders!', isLoaded: true });\n                });\n        }\n    }, [querySeasonId, numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n                    Filter by: (Store / Division)\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n                    {leadersSeasonsStatus.isLoaded && leadersSeasons && leadersSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Leaders From\" listItems={leadersSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Individual Leaders</h3>\n                            {!indAvgLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indAvgLeaders.leaders && indAvgLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Player, high season average / game\" subHeading=\"(must play in a minimum of 50% of your team's games to qualify)\" columnName=\"Player\" columnData=\"Average\" format=\"decimal\" href=\"/players/\" leadersObj={indAvgLeaders} />\n                                    : indAvgLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no player average leaders for this season!</span>\n                                        : <span className=\"empty-result\">{indAvgLeadersStatus.errorMsg}</span>\n                            }\n                            {!indOneGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indOneGameLeaders.leaders && indOneGameLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Player, 1-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indOneGameLeaders} />\n                                    : indOneGameLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no player 1-game leaders for this season!</span>\n                                        : <span className=\"empty-result\">{indOneGameLeadersStatus.errorMsg}</span>\n                            }\n                            {!indTenGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indTenGameLeaders.leaders && indTenGameLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Player, 10-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indTenGameLeaders} />\n                                    : indTenGameLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no player 10-game leaders for this season!</span>\n                                        : <span className=\"empty-result\">{indTenGameLeadersStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Team Leaders</h3>\n                            {!teamAvgLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamAvgLeaders.leaders && teamAvgLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Team, 10-game high average\" columnName=\"Team\" columnData=\"Average\" format=\"decimal\" href=\"/teams/\" leadersObj={teamAvgLeaders} />\n                                    : teamAvgLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no team average leaders for this season!</span>\n                                        : <span className=\"empty-result\">{teamAvgLeadersStatus.errorMsg}</span>\n                            }\n                            {!teamOneGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamOneGameLeaders.leaders && teamOneGameLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Team, 1-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamOneGameLeaders} />\n                                    : teamOneGameLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no team 1-game leaders for this season!</span>\n                                        : <span className=\"empty-result\">{teamOneGameLeadersStatus.errorMsg}</span>\n                            }\n                            {!teamTenGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamTenGameLeaders.leaders && teamTenGameLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Team, 10-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamTenGameLeaders} />\n                                    : teamTenGameLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no team 10-game leaders for this season!</span>\n                                        : <span className=\"empty-result\">{teamTenGameLeadersStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Leaders;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Qualifers = () => {\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Tournament Qualifiers\" />\n            {seasonName &&\n                <div>\n                    {seasonName.season_name}-{seasonName.season_year}\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Qualifers;\n","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div className=\"m-5 bigger\">\n            <p className=\"text-danger\"><b>Error 404!</b></p>\n            <p>An error has occurred.</p>\n            <p>The page you are looking for does not exist!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/searchbar.css';\n\nfunction SearchBar() {\n    const [searchInput, setSearchInput] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    useEffect(() => {\n        if (submitted) {\n            setSearchInput('');\n            setSubmitted(false);\n        }\n    }, [submitted]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchInput.length > 0 && setSubmitted(true);\n    };\n\n    return (\n        <Fragment>\n            <form className=\"form-searchbar\" onSubmit={handleSubmit}>\n                <input type=\"text\" maxLength=\"20\" placeholder=\"Find a Player or Team\" className=\"input-searchbar\" value={searchInput} onChange={event => setSearchInput(event.target.value)} />\n                <button type=\"submit\" name=\"submit\" className=\"search-button\">Submit</button>\n            </form>\n            {submitted && <Redirect to={'/search/' + searchInput} />}\n        </Fragment>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/header.css';\nimport skeeballLogo from './images/skeeball_logo.png';\nimport SearchBar from '../searchbar/searchbar';\n\nfunction Header() {\n    return (\n        <div className=\"header-bg row mb-0\">\n            <div className=\"col-sm-2 col-3 p-2 my-auto text-left\">\n                <Link to=\"/\"><img className=\"img-fluid\" src={skeeballLogo} alt=\"Skeeball World Tour\" /></Link>\n            </div>\n            <div className=\"col-sm-8 col-9 d-flex justify-content-center align-items-end mb-1 p-0\">\n                <SearchBar />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './css/navDropdown.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavDropdown(props) {\n    return (\n        <div className=\"navdropdown\" data-toggle=\"dropdown\">\n            <div className=\"navdropbtn\">{props.buttonText}</div>\n            <div className=\"navdropdown-content\">\n                {props.listItems.map(item => (\n                    <div key={item.id}>\n                        <a href={props.urlPrefix + item.href}>{item.text}</a>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nNavDropdown.propTypes = {\n    buttonText: PropTypes.string,\n    urlPrefix: PropTypes.string,\n    listItems: PropTypes.array,\n};\n","import React from 'react';\nimport './css/navButton.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavButton(props) {\n    return (\n        <div className=\"navbutton\">\n            <a href={props.url}><div className=\"navbtn\">{props.buttonText}</div></a>\n        </div>\n    );\n}\n\nNavButton.propTypes = {\n    buttonText: PropTypes.string,\n    url: PropTypes.string,\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavDropdown from '../navDropdown/navDropdown';\nimport NavButton from '../navButton/navButton';\n\nfunction NavBar() {\n    const [displaySchedule, setDisplaySchedule] = useState(0);\n    const [storeDivisionArr, setStoreDivisionArr] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const response1 = await axios.get('/api/settings/navbar');\n                const currentSeasonId = (response1.data[0].current_season_id);\n                setDisplaySchedule(response1.data[0].display_schedule);\n                const response2 = await axios.get('/api/schedules/navbar/' + currentSeasonId);\n                const storeDivArray = response2.data.map((storeDiv) => {\n                    return {\n                        id: storeDiv.store_division,\n                        text: storeDiv.store_city + ' (' + storeDiv.day_name + ')',\n                        href: '/' + storeDiv.store_id + '/' + storeDiv.division_id,\n                    };\n                });\n                setStoreDivisionArr(storeDivArray);\n            } catch (err) {\n                console.log(err);\n            }\n        })();\n    }, []);\n\n    return (\n        <div className=\"row mb-4\">\n            <div className=\"col-sm-12 justify-content-center text-center\">\n                <NavButton buttonText=\"Standings\" url=\"/standings\" />\n                <NavDropdown buttonText=\"Results +\" urlPrefix=\"/results\" listItems={storeDivisionArr} />\n                {displaySchedule === 1 &&\n                    <NavDropdown buttonText=\"Schedule +\" urlPrefix=\"/schedule\" listItems={storeDivisionArr} />\n                }\n                <NavDropdown buttonText=\"Stores +\" urlPrefix=\"/stores\" listItems={storeDivisionArr} />\n                <NavButton buttonText=\"Champions\" url=\"/champions\" />\n                <NavButton buttonText=\"Rules\" url=\"/rules\" />\n            </div >\n        </div >\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './css/footer.css';\n\nfunction Footer() {\n    return (\n        <div className=\"row mt-3 bg-footer\">\n            <div className=\"col-6 text-center p-3 border-right\">\n                <p className=\"mb-3\"><b>Brought to you by:</b></p>\n                <p className=\"mb-1\"><a href=\"https://www.winkinglizard.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Winking Lizard Tavern</a></p>\n                <p className=\"mb-1 small\">and</p>\n                <p className=\"m-0\"><a href=\"http://www.bellmusicco.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Bell Music Company</a></p>\n            </div>\n            <div className=\"col-6 text-center p-3 small border-left\">\n                <h5 className=\"mb-5\"><a href=\"mailto:ktaylor@bellmusicco.com\">Contact Us</a></h5>\n                <p>&copy; 2010 Skeeball World Tour</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/home';\nimport Rules from './pages/rules/rules';\nimport Standings from './pages/standings/standings';\nimport Search from './pages/search/search';\nimport Champions from './pages/champions/champions';\nimport Players from './pages/players/players';\nimport Teams from './pages/teams/teams';\nimport Results from './pages/results/results';\nimport Schedule from './pages/schedule/schedule';\nimport AllTime from './pages/allTime/allTime';\nimport Leaders from './pages/leaders/leaders';\nimport Qualifiers from './pages/qualifiers/qualifiers';\nimport NoMatch from './pages/noMatch/noMatch';\nimport Header from './components/header/header';\nimport NavBar from './components/navbar/navbar';\nimport Footer from './components/footer/footer';\nimport CurrentSeasonContext from './context/currentSeasonContext';\nimport axios from 'axios';\nimport './css/style.css';\nimport './css/my_style.css';\n\nexport default function App() {\n    const [currentSeasonId, setCurrentSeasonId] = useState(null);\n\n    useEffect(() => {\n        axios.get('/api/settings/current-season')\n            .then((response) => {\n                setCurrentSeasonId(response.data[0].current_season_id);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"container border bg-white\">\n                <Header />\n                <NavBar />\n                <Switch>\n                    <Route exact path=\"/\"><CurrentSeasonContext.Provider value={currentSeasonId}><Home /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/rules\" component={Rules} />\n                    <Route exact path=\"/standings\"><CurrentSeasonContext.Provider value={currentSeasonId}><Standings /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/teams/:teamid\"><CurrentSeasonContext.Provider value={currentSeasonId}><Teams /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/players/:playerid\"><CurrentSeasonContext.Provider value={currentSeasonId}><Players /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/results/:storeid/:divisionid/:seasonid?\"><CurrentSeasonContext.Provider value={currentSeasonId}><Results /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/schedule/:storeid/:divisionid/:seasonid?\"><CurrentSeasonContext.Provider value={currentSeasonId}><Schedule /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/leaders\"><CurrentSeasonContext.Provider value={currentSeasonId}><Leaders /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/all-time\" component={AllTime} />\n                    <Route exact path=\"/qualifiers\"><CurrentSeasonContext.Provider value={currentSeasonId}><Qualifiers /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/champions\" component={Champions} />\n                    <Route path=\"/search/:searchstring\" component={Search} />\n                    <Route component={NoMatch} />\n                </Switch>\n                <Footer />\n            </div>\n        </Router>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/media/skeeball_logo.102ce1b8.png\";"],"sourceRoot":""}