{"version":3,"sources":["pages/home/home.js","components/pageHeading/pageHeading.js","pages/rules/rules.js","context/currentSeasonContext.js","components/seasonDropdown/seasonDropdown.js","pages/standings/standings.js","pages/search/search.js","pages/champions/champions.js","components/statsBlock/subcomponents/statsBlockItem/statsBlockItem.js","components/statsBlock/statsBlock.js","pages/players/players.js","components/resultsDiv/subcomponents/resultsThead/resultsThead.js","components/resultsDiv/subcomponents/resultsTbody/resultsTbody.js","components/resultsDiv/subcomponents/resultsTfoot/resultsTfoot.js","components/resultsDiv/resultsDiv.js","pages/teams/teams.js","pages/results/results.js","components/scheduleTable/subcomponents/scheduleRow/scheduleRow.js","components/scheduleTable/scheduleTable.js","pages/schedule/schedule.js","components/numLeadersDropdown/numLeadersDropdown.js","pages/allTime/allTime.js","components/leadersTable/leadersTable.js","pages/leaders/leaders.js","pages/qualifiers/qualifiers.js","pages/noMatch/noMatch.js","components/header/subcomponents/searchbar/searchbar.js","components/header/subcomponents/headerNav/headerNav.js","components/header/header.js","components/navbar/subcomponents/navDropdown/navDropdown.js","components/navbar/subcomponents/navButton/navButton.js","components/navbar/navbar.js","components/footer/footer.js","index.js","App.js","components/header/images/skeeball_logo.png"],"names":["Home","useState","showRegButton","setShowRegButton","regButtonUrl","setregButtonUrl","regButtonText","setregButtonText","newsArr","setNewsArr","errorMsg","undefined","isLoaded","newsStatus","setNewsStatus","useEffect","axios","get","then","response","data","show_reg_button","reg_button_url","reg_button_text","catch","err","console","log","error","className","href","src","alt","ReactHtmlParser","length","map","news","i","key","page_id","content_heading","text_date1","page_content","PageHeading","props","text","Rules","rules","setRules","rulesStatus","setRulesStatus","CurrentSeasonContext","createContext","Dropdown","currentSeason","buttonText","listItems","handleSeasonId","season_name","season_year","item","season_id","onClick","Standings","seasonId","setSeasonId","currentSeasonId","useContext","querySeasonId","seasonName","setSeasonName","standingsArr","setStandingsArr","standingsArrStatus","setStandingsArrStatus","standingsSeasons","setStandingsSeasons","standingsSeasonsStatus","setStandingsSeasonsStatus","seasonArray","season","year","storeDiv","index","store_city","day_name","standing","standings_id","team_id","team_name","wins","losses","ties","total_points","Search","searchstring","useParams","playerArray","setPlayerArray","teamArray","setTeamArray","player","player_id","full_name","cities","team","Champions","champions","setChampions","championsStatus","setChampionsStatus","champion","tourny_team_id","comments","StatsBlockItem","stats","stat","StatsBlock","Players","playerid","playerNameStores","setPlayerNameStores","playerNameStoresStatus","setPlayerNameStoresStatus","currentViewStores","setCurrentViewStores","currentViewStoresStatus","setCurrentViewStoresStatus","playerSeasons","setPlayerSeasons","playerSeasonsStatus","setPlayerSeasonsStatus","playerStats","setPlayerStats","playerStatsStatus","setPlayerStatsStatus","playerResults","setPlayerResults","playerResultsStatus","setPlayerResultsStatus","stores","formattedPlayerStats","formattedPlayerResults","game","result","id","week_id","scores","score","total","ResultsThead","teamId","teamName","ResultsTbody","players","name","ResultsTfoot","gameTotals","gameResults","teamTotal","ResultsDiv","results","date","away_team","game_totals","game_results","team_total","colSpan","home_team","Teams","teamid","teamNameStores","setTeamNameStores","teamNameStoresStatus","setTeamNameStoresStatus","teamSeasons","setTeamSeasons","teamSeasonsStatus","setTeamSeasonsStatus","teamStats","setTeamStats","teamStatsStatus","setTeamStatsStatus","teamSchedule","setTeamSchedule","teamScheduleStatus","setTeamScheduleStatus","teamPlayers","setTeamPlayers","teamPlayersStatus","setTeamPlayersStatus","teamResults","setTeamResults","teamResultsStatus","setTeamResultsStatus","one_game_low","Number","one_game_avg","toFixed","one_game_high","ten_game_low","ten_game_avg","ten_game_high","games_played","avg_score","schedule","away_team_id","away_team_name","home_team_id","home_team_name","alley","start_time","week_date1","Results","storeid","divisionid","setResults","resultsStatus","setResultsStatus","store","setStore","storeStatus","setStoreStatus","resultSeasons","setResultSeasons","resultSeasonsStatus","setResultSeasonsStatus","store_id","division_id","store_name","ScheduleRow","weekId","matchup","ScheduleTable","schedules","week","matchups","Schedule","scheduleArray","setScheduleArray","scheduleArrayStatus","setScheduleArrayStatus","scheduleSeasons","setScheduleSeasons","scheduleSeasonsStatus","setScheduleSeasonsStatus","NumLeadersDropdown","numLeaders","numLeadersArray","setNumLeaders","defaultValue","leaders","value","AllTime","LeadersTable","heading","subHeading","columnName","columnData","format","leadersObj","leader","rank","field_id","field_name","numAtTieValue","tieValue","Leaders","indAvgLeaders","setIndAvgLeaders","indAvgLeadersStatus","setIndAvgLeadersStatus","indOneGameLeaders","setIndOneGameLeaders","indOneGameLeadersStatus","setIndOneGameLeadersStatus","indTenGameLeaders","setIndTenGameLeaders","indTenGameLeadersStatus","setIndTenGameLeadersStatus","teamAvgLeaders","setTeamAvgLeaders","teamAvgLeadersStatus","setTeamAvgLeadersStatus","teamOneGameLeaders","setTeamOneGameLeaders","teamOneGameLeadersStatus","setTeamOneGameLeadersStatus","teamTenGameLeaders","setTeamTenGameLeaders","teamTenGameLeadersStatus","setTeamTenGameLeadersStatus","leadersSeasons","setLeadersSeasons","leadersSeasonsStatus","setLeadersSeasonsStatus","num_at_tie_value","tie_value","Qualifers","NoMatch","SearchBar","searchInput","setSearchInput","submitted","setSubmitted","onSubmit","e","preventDefault","type","maxLength","placeholder","onChange","event","target","to","HeaderNav","Header","skeeballLogo","NavDropdown","data-toggle","urlPrefix","NavButton","url","NavBar","displaySchedule","setDisplaySchedule","storeDivisionArr","setStoreDivisionArr","display_schedule","storeDivArray","store_division","Footer","rel","ReactDOM","render","setCurrentSeasonId","current_season_id","Provider","exact","path","component","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.26b82f44.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\n\nfunction Home() {\n    const [showRegButton, setShowRegButton] = useState(0);\n    const [regButtonUrl, setregButtonUrl] = useState(null);\n    const [regButtonText, setregButtonText] = useState(null);\n    const [newsArr, setNewsArr] = useState([]);\n    const [newsStatus, setNewsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    useEffect(() => {\n        axios.get('/api/settings/homepage')\n            .then((response) => {\n                setShowRegButton(response.data[0].show_reg_button);\n                setregButtonUrl(response.data[0].reg_button_url);\n                setregButtonText(response.data[0].reg_button_text);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        axios.get('/api/pages/homepage-news')\n            .then((response) => {\n                setNewsArr(response.data);\n                setNewsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setNewsStatus({ errorMsg: 'An error occurred fetching league news!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <div>\n            {showRegButton === 1 && regButtonUrl && regButtonText &&\n                <div>\n                    <div className=\"text-center\">\n                        <a href={regButtonUrl}><img src=\"/images/register_now.jpg\" alt=\"REGISTER NOW!\" /></a>\n                        {ReactHtmlParser(regButtonText)}\n                    </div>\n                </div>\n            }\n\n            {!newsStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : newsArr && newsArr.length > 0\n                    ? <Fragment>\n                        {newsArr.map((news, i) => (\n                            <div key={news.page_id}>\n                                {i > 0 && <hr className=\"mt-4 mb-4\" />}\n                                <h5 className=\"text-danger mt-1 mb-0\">{news.content_heading}</h5>\n                                <p><span className=\"small\">{news.text_date1}</span></p>\n                                {ReactHtmlParser(news.page_content)}\n                            </div>\n                        ))}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see league news!</div>\n\n            }\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeading = (props) => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center\">{props.text}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nPageHeading.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageHeading;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Rules = () => {\n    const [rules, setRules] = useState(null);\n    const [rulesStatus, setRulesStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    useEffect(() => {\n        axios.get('/api/pages/rules')\n            .then((response) => {\n                response.data[0] && setRules(response.data[0]);\n                setRulesStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setRulesStatus({ errorMsg: 'An error occurred fetching league rules!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            {!rulesStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : rules\n                    ? <Fragment>\n                        <PageHeading text={rules.content_heading} />\n                        {ReactHtmlParser(rules.page_content)}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see the rules!</div>\n\n            }\n        </Fragment>\n    );\n};\n\nexport default Rules;\n","import { createContext } from 'react';\n\nconst CurrentSeasonContext = createContext(null);\n\nexport default CurrentSeasonContext;\n","import React, { Fragment } from 'react';\nimport './css/seasonDropdown.css';\nimport PropTypes from 'prop-types';\n\nfunction Dropdown({ currentSeason, buttonText, listItems, handleSeasonId }) {\n    return (\n        <Fragment>\n            {currentSeason &&\n                <Fragment>\n                    <span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentSeason.season_name}, {currentSeason.season_year}</span>\n                </Fragment>\n            }\n            <div className=\"dropdown ml-2\">\n                <button className=\"dropbtn\">{buttonText}<i className=\"down\"></i></button>\n                <ul className=\"dropdown-content\">\n                    {listItems.map(item => (\n                        <Fragment key={item.season_id}>\n                            {currentSeason && (item.season_id === currentSeason.season_id)\n                                ? <li className=\"viewing\">{item.text}</li>\n                                : <li onClick={() => handleSeasonId(item.season_id)}>{item.text}</li>\n                            }\n                        </Fragment>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n}\n\nDropdown.propTypes = {\n    currentSeason: PropTypes.object,\n    buttonText: PropTypes.string,\n    listItems: PropTypes.array,\n    handleSeasonId: PropTypes.func,\n};\n\nexport default Dropdown;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\n\nexport default function Standings() {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [standingsArr, setStandingsArr] = useState(null);\n    const [standingsArrStatus, setStandingsArrStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [standingsSeasons, setStandingsSeasons] = useState(null);\n    const [standingsSeasonsStatus, setStandingsSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/standings/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setStandingsSeasons(seasonArray);\n                setStandingsSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setStandingsSeasons(null);\n                setStandingsSeasonsStatus({ errorMsg: 'An error occurred fetching the standings!', isLoaded: true });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/standings/season/' + querySeasonId)\n                .then((response) => {\n                    setStandingsArr(response.data);\n                    setStandingsArrStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStandingsArr(null);\n                    setStandingsArrStatus({ errorMsg: 'An error occurred fetching the standings!', isLoaded: true });\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Standings\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-12 text-right p-2\">\n                    {standingsSeasonsStatus.isLoaded && standingsSeasons && standingsSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Standings From\" listItems={standingsSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            {!standingsArrStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : standingsArr && standingsArr.length > 0\n                    ? <Fragment>\n                        {standingsArr.map((storeDiv, index) => (\n                            <div key={index}>\n                                <h5 className=\"text-center\">{storeDiv[0].store_city} - {storeDiv[0].day_name}</h5>\n                                <div className=\"d-flex justify-content-center mb-4\">\n                                    <div className=\"min-w-50 mx-auto table-wrapper\">\n                                        <table className=\"table table-bordered mb-4 text-center\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th className=\"text-left\">TEAM</th>\n                                                    <th>W</th>\n                                                    <th>L</th>\n                                                    <th>T</th>\n                                                    <th>TOTAL POINTS</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {standingsArr[index].map((standing) => (\n                                                    <tr key={standing.standings_id}>\n                                                        <td className=\"text-left\"><a href={'/teams/' + standing.team_id}>{standing.team_name}</a></td>\n                                                        <td>{standing.wins}</td>\n                                                        <td>{standing.losses}</td>\n                                                        <td>{standing.ties}</td>\n                                                        <td>{standing.total_points}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </Fragment>\n                    : standingsArr\n                        ? <span className=\"empty-result\">There are no standings for this season!</span>\n                        : <span className=\"empty-result\">{standingsArrStatus.errorMsg}</span>\n            }\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nexport default function Search() {\n    const { searchstring } = useParams();\n    const [playerArray, setPlayerArray] = useState([]);\n    const [teamArray, setTeamArray] = useState([]);\n    useEffect(() => {\n        axios.get('/api/searches/players/' + searchstring)\n            .then((response) => {\n                setPlayerArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        axios.get('/api/searches/teams/' + searchstring)\n            .then((response) => {\n                setTeamArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [searchstring]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Search Results\" />\n            <p className=\"text-center\"><b>Search Results for:</b> {searchstring}</p>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Player Matches:</b> {playerArray.length}</p>\n                    {playerArray.map(player => (\n                        <p key={player.player_id}><a href={'/players/' + player.player_id}>{player.full_name}</a> ({player.cities})</p>\n                    ))}\n                </div>\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Team Matches:</b> {teamArray.length}</p>\n                    {teamArray.map(team => (\n                        <p key={team.team_id}><a href={'/teams/' + team.team_id}>{team.team_name}</a> ({team.cities})</p>\n                    ))}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport axios from 'axios';\n\nconst Champions = () => {\n    const [champions, setChampions] = useState(null);\n    const [championsStatus, setChampionsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    useEffect(() => {\n        axios.get('/api/seasons/champions')\n            .then((response) => {\n                setChampions(response.data);\n                setChampionsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setChampions(null);\n                setChampionsStatus({ errorMsg: 'An error occurred fetching champions!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Champions\" />\n            {!championsStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : champions && champions.length > 0\n                    ? <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <table className=\"table table-bordered table-hover\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th>Season</th>\n                                        <th>Champion</th>\n                                        <th>Store</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {champions.map((champion) => (\n                                        <tr key={champion.season_id}>\n                                            <td>{champion.season_name}-{champion.year}</td>\n                                            <td><a href={'/teams/' + champion.tourny_team_id}>{champion.team_name}</a>{champion.comments.length > 0 && <span className=\"small ml-2\">*({champion.comments})</span>}</td>\n                                            <td>{champion.store_city}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    : champions\n                        ? <span className=\"empty-result\">There are no champions to display!</span>\n                        : <span className=\"empty-result\">{championsStatus.errorMsg}</span>\n            }\n        </Fragment>\n    );\n};\n\nexport default Champions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './css/statsBlockItem.css';\n\nconst StatsBlockItem = (props) => {\n    return (\n        props.stats.map((stat, index) => (\n            <tr key={index}>\n                <td className=\"bg-stat-heading font-weight-bolder text-right\">{stat.text}</td>\n                <td className=\"text-center px-4\">{stat.data}</td>\n            </tr>\n        ))\n    );\n};\n\nStatsBlockItem.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatsBlockItem from './subcomponents/statsBlockItem/statsBlockItem';\n\nconst StatsBlock = (props) => {\n    return (\n        <table className=\"table table-bordered table-hover\">\n            <tbody>\n                <StatsBlockItem stats={props.stats} />\n            </tbody>\n        </table>\n    );\n};\n\nStatsBlock.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlock;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nconst Players = () => {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { playerid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [playerNameStores, setPlayerNameStores] = useState(null);\n    const [playerNameStoresStatus, setPlayerNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerSeasons, setPlayerSeasons] = useState(null);\n    const [playerSeasonsStatus, setPlayerSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerStats, setPlayerStats] = useState(null);\n    const [playerStatsStatus, setPlayerStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerResults, setPlayerResults] = useState(null);\n    const [playerResultsStatus, setPlayerResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/players/' + playerid + '/name-store')\n            .then((response) => {\n                response.data[0] ? setPlayerNameStores(response.data[0]) : setPlayerNameStores([]);\n                setPlayerNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerNameStores(null);\n                setPlayerNameStoresStatus({ errorMsg: 'An error occurred fetching info for this Player!', isLoaded: true });\n            });\n        axios.get('/api/players/' + playerid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setPlayerSeasons(seasonArray);\n                setPlayerSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerSeasons(null);\n                setPlayerSeasonsStatus({ errorMsg: 'An error occurred fetching stats for this player!', isLoaded: true });\n            });\n    }, [playerid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/players/' + playerid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/players/' + playerid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data) {\n                        setPlayerStats(response.data.formattedPlayerStats);\n                        setPlayerResults(response.data.formattedPlayerResults);\n                    } else {\n                        setPlayerStats([]);\n                        setPlayerResults([]);\n                    }\n                    setPlayerStatsStatus({ errorMsg: undefined, isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setPlayerStats(null);\n                    setPlayerResults(null);\n                    setPlayerStatsStatus({ errorMsg: 'An error occurred fetching stats for this Player!', isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: 'An error occurred fetching results for this Player!', isLoaded: true });\n                });\n        }\n    }, [playerid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Player Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {playerNameStoresStatus.isLoaded && playerNameStores &&\n                        <div className=\"mb-3\">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Player: </span>{playerNameStores.full_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {playerNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {playerSeasonsStatus.isLoaded && playerSeasons && playerSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={playerSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto\">\n                    {!playerStatsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerStats && playerStats.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                <StatsBlock stats={playerStats} />\n                            </Fragment>\n                            : playerStats\n                                ? <span className=\"empty-result\">There are no player stats for this season!</span>\n                                : <span className=\"empty-result\">{playerStatsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto table-wrapper\">\n                    {!playerResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerResults && playerResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Week by Week Results</h5>\n                                <table className=\"table table-bordered table-hover mb-0\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th>Week # - Team</th>\n                                            {gamesArray.map((game, i) => (\n                                                <th key={i} className=\"text-center\">{game}</th>\n                                            ))}\n                                            <th className=\"text-center\">Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {playerResults.map((result) => (\n                                            <tr key={result.id}>\n                                                <td>{result.week_id} - <a href={'/teams/' + result.team_id}>{result.team_name}</a></td>\n                                                {result.scores.map((score, index) => (\n                                                    <td key={index} className=\"text-center\">{score}</td>\n                                                ))}\n                                                <td className=\"text-center\">{result.total}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : playerResults\n                                ? <span className=\"empty-result\">There are no player results for this season!</span>\n                                : <span className=\"empty-result\">{playerResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n};\n\nexport default Players;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsThead = ({ teamId, teamName, wins, losses, ties }) => {\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td><a href={'/teams/' + teamId}>{teamName}</a> (<span className={'text-' + (wins > losses ? 'success' : (wins < losses ? 'danger' : 'primary'))}>{wins}-{losses}-{ties}</span>)</td>\n                {gamesArray.map((game, i) => (\n                    <td key={i} className=\"text-center\">{game}</td>\n                ))}\n                <td className=\"text-center\">Total</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsThead.propTypes = {\n    teamId: PropTypes.number,\n    teamName: PropTypes.string,\n    wins: PropTypes.number,\n    losses: PropTypes.number,\n    ties: PropTypes.number,\n};\n\nexport default ResultsThead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTbody = ({ players }) => {\n    return (\n        <tbody>\n            {players.map((player, index) => (\n                <tr key={index} className=\"bg-white\">\n                    <td><a href={'/players/' + player.player_id}>{player.name}</a></td>\n                    {player.scores.map((score, i) => (\n                        <td key={i} className=\"text-center\">{score}</td>\n                    ))}\n                    <td className=\"text-center\">{player.total_points}</td>\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nResultsTbody.propTypes = {\n    players: PropTypes.array,\n};\n\nexport default ResultsTbody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTfoot = ({ gameTotals, gameResults, teamTotal }) => {\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td>Total</td>\n                {gameTotals.map((total, i) => (\n                    <td key={i} className=\"text-center\"><span className={'text-' + (gameResults[i] === 'w' ? 'success' : (gameResults[i] === 'l' ? 'danger' : 'primary'))}>{total}</span></td>\n                ))}\n                <td className=\"text-center\">{teamTotal}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsTfoot.propTypes = {\n    gameTotals: PropTypes.array,\n    gameResults: PropTypes.array,\n    teamTotal: PropTypes.number,\n};\n\nexport default ResultsTfoot;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsThead from './subcomponents/resultsThead/resultsThead';\nimport ResultsTbody from './subcomponents/resultsTbody/resultsTbody';\nimport ResultsTfoot from './subcomponents/resultsTfoot/resultsTfoot';\n\nconst ResultsDiv = ({ results }) => {\n    return (\n        <Fragment>\n            {results.map((result) => (\n                <Fragment key={result.id}>\n                    <h5 className=\"text-center text-success\">Week {result.week_id} ({result.date})</h5>\n                    <div className=\"p-1 mb-4 border border-secondary table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-1\">\n                            <ResultsThead teamId={result.away_team.team_id} teamName={result.away_team.team_name} wins={result.away_team.wins} losses={result.away_team.losses} ties={result.away_team.ties} />\n                            <ResultsTbody players={result.away_team.players} />\n                            <ResultsTfoot gameTotals={result.away_team.game_totals} gameResults={result.away_team.game_results} teamTotal={result.away_team.team_total} />\n                            <tbody><tr><td colSpan=\"12\" className=\"border-0\"></td></tr></tbody>\n                            <ResultsThead teamId={result.home_team.team_id} teamName={result.home_team.team_name} wins={result.home_team.wins} losses={result.home_team.losses} ties={result.home_team.ties} />\n                            <ResultsTbody players={result.home_team.players} />\n                            <ResultsTfoot gameTotals={result.home_team.game_totals} gameResults={result.home_team.game_results} teamTotal={result.home_team.team_total} />\n                        </table>\n                    </div>\n                </Fragment>\n            ))}\n        </Fragment>\n    );\n};\n\nResultsDiv.propTypes = {\n    results: PropTypes.array,\n};\n\nexport default ResultsDiv;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nexport default function Teams() {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { teamid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [teamNameStores, setTeamNameStores] = useState(null);\n    const [teamNameStoresStatus, setTeamNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamSeasons, setTeamSeasons] = useState(null);\n    const [teamSeasonsStatus, setTeamSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamStats, setTeamStats] = useState(null);\n    const [teamStatsStatus, setTeamStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamSchedule, setTeamSchedule] = useState(null);\n    const [teamScheduleStatus, setTeamScheduleStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamPlayers, setTeamPlayers] = useState(null);\n    const [teamPlayersStatus, setTeamPlayersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamResults, setTeamResults] = useState(null);\n    const [teamResultsStatus, setTeamResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/teams/' + teamid + '/store-name')\n            .then((response) => {\n                response.data[0] ? setTeamNameStores(response.data[0]) : setTeamNameStores([]);\n                setTeamNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamNameStores(null);\n                setTeamNameStoresStatus({ errorMsg: 'An error occurred fetching info for this team!', isLoaded: true });\n            });\n        axios.get('/api/teams/' + teamid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setTeamSeasons(seasonArray);\n                setTeamSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamSeasons(null);\n                setTeamSeasonsStatus({ errorMsg: 'An error occurred fetching stats for this team!', isLoaded: true });\n            });\n    }, [teamid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/teams/' + teamid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data[2][0]) {\n                        setTeamStats([\n                            { text: 'Record:', data: response.data[2][0].wins + '-' + response.data[2][0].losses + '-' + response.data[2][0].ties },\n                            { text: 'Total Points:', data: response.data[2][0].total_points },\n                            { text: '1-Game Low:', data: response.data[2][0].one_game_low },\n                            { text: '1-Game Avg:', data: Number(response.data[2][0].one_game_avg).toFixed(1) },\n                            { text: '1-Game High:', data: response.data[2][0].one_game_high },\n                            { text: '10-Game Low:', data: response.data[2][0].ten_game_low },\n                            { text: '10-Game Avg:', data: Number(response.data[2][0].ten_game_avg).toFixed(1) },\n                            { text: '10-Game High:', data: response.data[2][0].ten_game_high },\n                        ]);\n                    } else {\n                        setTeamStats([]);\n                    }\n                    setTeamStatsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamStats(null);\n                    setTeamStatsStatus({ errorMsg: 'An error occurred fetching stats for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/current-schedule/seasons/' + querySeasonId)\n                .then((response) => {\n                    response.data[2] ? setTeamSchedule(response.data[2]) : setTeamSchedule([]);\n                    setTeamScheduleStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamSchedule(null);\n                    setTeamScheduleStatus({ errorMsg: 'An error occurred fetching the schedule for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/players/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamPlayers(response.data);\n                    setTeamPlayersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamPlayers(null);\n                    setTeamPlayersStatus({ errorMsg: 'An error occurred fetching players for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setTeamResults(response.data) : setTeamResults([]);\n                    setTeamResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamResults(null);\n                    setTeamResultsStatus({ errorMsg: 'An error occurred fetching the schedule for this team!', isLoaded: true });\n                });\n        }\n    }, [teamid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Team Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {teamNameStoresStatus.isLoaded && teamNameStores &&\n                        <div className=\"mb-3 \">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Team: </span>{teamNameStores.team_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {teamNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {teamSeasonsStatus.isLoaded && teamSeasons && teamSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={teamSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamPlayersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamPlayers && teamPlayers.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Players</h5>\n                                        <table className=\"table table-bordered table-hover\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th>Player</th>\n                                                    <th className=\"text-center\">Games</th>\n                                                    <th className=\"text-center\">Average</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {teamPlayers.map((player) => (\n                                                    <tr key={player.player_id}>\n                                                        <td><a href={'/players/' + player.player_id}>{player.full_name}</a></td>\n                                                        <td className=\"text-center\">{player.games_played}</td>\n                                                        <td className=\"text-center\">{Number(player.avg_score).toFixed(1)}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </Fragment>\n                                    : teamPlayers\n                                        ? <span className=\"empty-result\">There are no players on this team in the selected season!</span>\n                                        : <span className=\"empty-result\">{teamPlayersStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamStatsStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamStats && teamStats.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                        <StatsBlock stats={teamStats} />\n                                    </Fragment>\n                                    : teamStats\n                                        ? <span className=\"empty-result\">There are no team stats for the selected season!</span>\n                                        : <span className=\"empty-result\">{teamStatsStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamScheduleStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamSchedule && teamSchedule.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Schedule</h5>\n                                <table className=\"table table-bordered table-hover\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th className=\"text-center\">WEEK #</th>\n                                            <th>Away Team</th>\n                                            <th>Home Team</th>\n                                            <th className=\"text-center\">Alley</th>\n                                            <th>Start Time</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {teamSchedule.map((schedule) => (\n                                            <tr key={schedule.week_id} className=\"bg-white\">\n                                                <td className=\"text-center\">{schedule.week_id}</td>\n                                                <td><a href={'/teams/' + schedule.away_team_id}>{schedule.away_team_name}</a></td>\n                                                <td><a href={'/teams/' + schedule.home_team_id}>{schedule.home_team_name}</a></td>\n                                                <td className=\"text-center\">{schedule.alley}</td>\n                                                <td>{schedule.start_time}</td>\n                                                <td>{schedule.week_date1}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : teamSchedule\n                                ? <span className=\"empty-result\">There is no schedule for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamScheduleStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamResults && teamResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Weekly Results</h5>\n                                <ResultsDiv results={teamResults} />\n                            </Fragment>\n                            : teamResults\n                                ? <span className=\"empty-result\">There are no results for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Results = () => {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [results, setResults] = useState(null);\n    const [resultsStatus, setResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [resultSeasons, setResultSeasons] = useState(null);\n    const [resultSeasonsStatus, setResultSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setResultSeasons(seasonArray);\n                setResultSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setResultSeasons(null);\n                setResultSeasonsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore(null);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching the store name!', isLoaded: true });\n                });\n            axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setResults(response.data) : setResults(null);\n                    setResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setResults(null);\n                    setResultsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Results\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {resultSeasonsStatus.isLoaded && resultSeasons && resultSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={resultSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!resultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : results && results.length > 0\n                            ? <ResultsDiv results={results} />\n                            : results\n                                ? <span className=\"empty-result\">There are no results for this season!</span>\n                                : <span className=\"empty-result\">{resultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScheduleRow = ({ weekId, matchup }) => {\n    return (\n        <tr key={`${weekId}${matchup.home_team_id}`} className=\"bg-white\">\n            <td><a href={'/teams/' + matchup.away_team_id}>{matchup.away_team}</a></td>\n            <td><a href={'/teams/' + matchup.home_team_id}>{matchup.home_team}</a></td>\n            <td className=\"text-center\">{matchup.alley}</td>\n            <td>{matchup.start_time}</td>\n        </tr>\n    );\n};\n\nScheduleRow.propTypes = {\n    weekId: PropTypes.number,\n    matchup: PropTypes.object,\n};\n\nexport default ScheduleRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ScheduleRow from './subcomponents/scheduleRow/scheduleRow';\n\nconst ScheduleTable = ({ schedules }) => {\n    return (\n        <Fragment>\n            {schedules.map((week) => (\n                <div key={week.week_id} className=\"mb-5\">\n                    <h5 className=\"text-center text-success mb-4\">Week {week.week_id} ({week.week_date1})</h5>\n                    <div className=\"mb-3 table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-2\">\n                            <thead>\n                                <tr className=\"bg-gray6\">\n                                    <th>Away Team</th>\n                                    <th>Home Team</th>\n                                    <th className=\"text-center\">Alley</th>\n                                    <th>Start Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {week.matchups.map((matchup) => (\n                                    <Fragment key={`${week.week_id}${matchup.home_team_id}`}>\n                                        <ScheduleRow weekId={week.week_id} matchup={matchup} />\n                                    </Fragment>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nScheduleTable.propTypes = {\n    schedules: PropTypes.array,\n};\n\nexport default ScheduleTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport ScheduleTable from '../../components/scheduleTable/scheduleTable';\n\nconst Schedule = () => {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [scheduleArray, setScheduleArray] = useState(null);\n    const [scheduleArrayStatus, setScheduleArrayStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [scheduleSeasons, setScheduleSeasons] = useState(null);\n    const [scheduleSeasonsStatus, setScheduleSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/schedules/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setScheduleSeasons(seasonArray);\n                setScheduleSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setScheduleSeasons(null);\n                setScheduleSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this store!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore([]);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching info for this store!', isLoaded: true });\n                });\n\n            axios('/api/schedules/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    setScheduleArray(response.data);\n                    setScheduleArrayStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setScheduleArray(null);\n                    setScheduleArrayStatus({ errorMsg: 'An error occurred fetching the schedule for this store!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Schedule\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {scheduleSeasonsStatus.isLoaded && scheduleSeasons && scheduleSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Schedule From\" listItems={scheduleSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!scheduleArrayStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : scheduleArray && scheduleArray.length > 0\n                            ? <Fragment>\n                                <ScheduleTable schedules={scheduleArray} />\n                            </Fragment>\n                            : scheduleArray\n                                ? <span className=\"empty-result\">There is no schedule available for this season!</span>\n                                : <span className=\"empty-result\">{scheduleArrayStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Schedule;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumLeadersDropdown({ numLeaders, numLeadersArray, setNumLeaders }) {\n    return (\n        <Fragment>\n            {numLeadersArray && numLeadersArray.length > 0 &&\n                <span className=\"small\">Currently showing top:</span>\n            }\n            <select className=\"ml-2\" defaultValue={numLeaders}>\n                {numLeadersArray.map(leaders => (\n                    <Fragment key={leaders}>\n                        {numLeaders === leaders\n                            ? <option>{leaders}</option>\n                            : <option value={leaders} onClick={() => setNumLeaders(leaders)}>{leaders}</option>\n                        }\n                    </Fragment>\n                ))}\n            </select>\n        </Fragment>\n    );\n}\n\nNumLeadersDropdown.propTypes = {\n    numLeaders: PropTypes.number,\n    numLeadersArray: PropTypes.array,\n    setNumLeaders: PropTypes.func,\n};\n\nexport default NumLeadersDropdown;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst AllTime = () => {\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    useEffect(() => {\n\n    }, [numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default AllTime;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LeadersTable = ({ heading, subHeading, columnName, columnData, format, href, leadersObj }) => {\n    return (\n        <Fragment>\n            <div className=\"text-center mb-4\">\n                <h5 className=\"text-success mb-0\">{heading}</h5>\n                {subHeading &&\n                    <span className=\"text-secondary small\">{subHeading}</span>\n                }\n            </div>\n            <table className=\"table table-bordered table-hover mb-5\">\n                <thead>\n                    <tr className=\"bg-gray6\">\n                        <th className=\"text-center\">Rank</th>\n                        <th className=\"text-left\">{columnName}</th>\n                        <th className=\"text-center\">{columnData}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {leadersObj.leaders.map((leader) => (\n                        <tr key={leader.key}>\n                            <td className=\"text-center\">{leader.rank}</td>\n                            <td><a href={`${href}${leader.field_id}`}>{leader.field_name}</a> ({leader.store_city})</td>\n                            <td className=\"text-center\">\n                                {format === 'decimal'\n                                    ? Number(leader.data).toFixed(1)\n                                    : Number(leader.data)\n                                }\n                            </td>\n                        </tr>\n                    ))}\n                    {leadersObj.numAtTieValue > 1 &&\n                        <tr>\n                            <td></td>\n                            <td className=\"text-right text-success\">{leadersObj.numAtTieValue} tied at:</td>\n                            <td className=\"text-center\">{leadersObj.tieValue}</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nLeadersTable.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    columnName: PropTypes.string,\n    columnData: PropTypes.string,\n    format: PropTypes.string,\n    href: PropTypes.string,\n    leadersObj: PropTypes.object,\n};\n\nexport default LeadersTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport LeadersTable from '../../components/leadersTable/leadersTable';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst Leaders = () => {\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    const [indAvgLeaders, setIndAvgLeaders] = useState(null);\n    const [indAvgLeadersStatus, setIndAvgLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [indOneGameLeaders, setIndOneGameLeaders] = useState(null);\n    const [indOneGameLeadersStatus, setIndOneGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [indTenGameLeaders, setIndTenGameLeaders] = useState(null);\n    const [indTenGameLeadersStatus, setIndTenGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamAvgLeaders, setTeamAvgLeaders] = useState(null);\n    const [teamAvgLeadersStatus, setTeamAvgLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamOneGameLeaders, setTeamOneGameLeaders] = useState(null);\n    const [teamOneGameLeadersStatus, setTeamOneGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamTenGameLeaders, setTeamTenGameLeaders] = useState(null);\n    const [teamTenGameLeadersStatus, setTeamTenGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [leadersSeasons, setLeadersSeasons] = useState(null);\n    const [leadersSeasonsStatus, setLeadersSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/leaders/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setLeadersSeasons(seasonArray);\n                setLeadersSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setLeadersSeasons(null);\n                setLeadersSeasonsStatus({ errorMsg: 'An error occurred fetching leaders seasons!', isLoaded: true });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('api/leaders/individual/average/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndAvgLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: response.data[1],\n                    });\n                    setIndAvgLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndAvgLeaders(null);\n                    setIndAvgLeadersStatus({ errorMsg: 'An error occurred fetching player best average leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/individual/one-game/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndOneGameLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: response.data[1],\n                    });\n                    setIndOneGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndOneGameLeaders(null);\n                    setIndOneGameLeadersStatus({ errorMsg: 'An error occurred fetching player 1-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/individual/ten-game/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndTenGameLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: response.data[1],\n                    });\n                    setIndTenGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndTenGameLeaders(null);\n                    setIndTenGameLeadersStatus({ errorMsg: 'An error occurred fetching player 10-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/average/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamAvgLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: response.data[1],\n                    });\n                    setTeamAvgLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamAvgLeaders(null);\n                    setTeamAvgLeadersStatus({ errorMsg: 'An error occurred fetching team best average leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/one-game/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamOneGameLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: response.data[1],\n                    });\n                    setTeamOneGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamOneGameLeaders(null);\n                    setTeamOneGameLeadersStatus({ errorMsg: 'An error occurred fetching team 1-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/ten-game/num-leaders/' + numLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamTenGameLeaders({\n                        numAtTieValue: response.data[0][0].num_at_tie_value,\n                        tieValue: response.data[0][0].tie_value,\n                        leaders: response.data[1],\n                    });\n                    setTeamTenGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamTenGameLeaders(null);\n                    setTeamTenGameLeadersStatus({ errorMsg: 'An error occurred fetching team 10-game leaders!', isLoaded: true });\n                });\n        }\n    }, [querySeasonId, numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n                    Filter by: (Store / Division)\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n                    {leadersSeasonsStatus.isLoaded && leadersSeasons && leadersSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Leaders From\" listItems={leadersSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Individual Leaders</h3>\n                            {!indAvgLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indAvgLeaders.leaders && indAvgLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Player, high season average / game\" subHeading=\"(must play in a minimum of 50% of your team's games to qualify)\" columnName=\"Player\" columnData=\"Average\" format=\"decimal\" href=\"/players/\" leadersObj={indAvgLeaders} />\n                                    : indAvgLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no player average leaders for this season!</span>\n                                        : <span className=\"empty-result\">{indAvgLeadersStatus.errorMsg}</span>\n                            }\n                            {!indOneGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indOneGameLeaders.leaders && indOneGameLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Player, 1-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indOneGameLeaders} />\n                                    : indOneGameLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no player 1-game leaders for this season!</span>\n                                        : <span className=\"empty-result\">{indOneGameLeadersStatus.errorMsg}</span>\n                            }\n                            {!indTenGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indTenGameLeaders.leaders && indTenGameLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Player, 10-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indTenGameLeaders} />\n                                    : indTenGameLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no player 10-game leaders for this season!</span>\n                                        : <span className=\"empty-result\">{indTenGameLeadersStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Team Leaders</h3>\n                            {!teamAvgLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamAvgLeaders.leaders && teamAvgLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Team, 10-game high average\" columnName=\"Team\" columnData=\"Average\" format=\"decimal\" href=\"/teams/\" leadersObj={teamAvgLeaders} />\n                                    : teamAvgLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no team average leaders for this season!</span>\n                                        : <span className=\"empty-result\">{teamAvgLeadersStatus.errorMsg}</span>\n                            }\n                            {!teamOneGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamOneGameLeaders.leaders && teamOneGameLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Team, 1-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamOneGameLeaders} />\n                                    : teamOneGameLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no team 1-game leaders for this season!</span>\n                                        : <span className=\"empty-result\">{teamOneGameLeadersStatus.errorMsg}</span>\n                            }\n                            {!teamTenGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamTenGameLeaders.leaders && teamTenGameLeaders.leaders.length > 0\n                                    ? <LeadersTable heading=\"Team, 10-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamTenGameLeaders} />\n                                    : teamTenGameLeaders.leaders\n                                        ? <span className=\"empty-result\">There are no team 10-game leaders for this season!</span>\n                                        : <span className=\"empty-result\">{teamTenGameLeadersStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Leaders;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Qualifers = () => {\n    const currentSeasonId = useContext(CurrentSeasonContext);\n    const querySeasonId = currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Tournament Qualifiers\" />\n            {seasonName &&\n                <div>\n                    {seasonName.season_name}-{seasonName.season_year}\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Qualifers;\n","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div className=\"m-5 bigger\">\n            <p className=\"text-danger\"><b>Error 404!</b></p>\n            <p>An error has occurred.</p>\n            <p>The page you are looking for does not exist!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/searchbar.css';\n\nfunction SearchBar() {\n    const [searchInput, setSearchInput] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    useEffect(() => {\n        if (submitted) {\n            setSearchInput('');\n            setSubmitted(false);\n        }\n    }, [submitted]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchInput.length > 0 && setSubmitted(true);\n    };\n\n    return (\n        <Fragment>\n            <form className=\"form-searchbar\" onSubmit={handleSubmit}>\n                <input type=\"text\" maxLength=\"20\" placeholder=\"Find Player/Team\" className=\"input-searchbar\" value={searchInput} onChange={event => setSearchInput(event.target.value)} />\n                <button type=\"submit\" name=\"submit\" className=\"search-button\">Go</button>\n            </form>\n            {submitted && <Redirect to={'/search/' + searchInput} />}\n        </Fragment>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './css/headerNav.css';\n\nconst HeaderNav = () => {\n    return (\n        <div className=\"h-nav-container\">\n            <span className=\"h-nav-burger\">&#9776;</span>\n            <ul className=\"h-nav-content\">\n                <a href=\"/champions\"><li className=\"nav-item\">Champions</li></a>\n                <a href=\"/rules\"><li className=\"nav-item\">Rules</li></a>\n                <a href=\"/leaders\"><li className=\"nav-item\">Leaders</li></a>\n                <a href=\"/all-time\"><li className=\"nav-item\">All-Time Records</li></a>\n            </ul>\n        </div>\n    );\n};\n\nexport default HeaderNav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/header.css';\nimport skeeballLogo from './images/skeeball_logo.png';\nimport SearchBar from './subcomponents/searchbar/searchbar';\nimport HeaderNav from './subcomponents/headerNav/headerNav';\n\nfunction Header() {\n    return (\n        <div className=\"header-bg row mb-0\">\n            <div className=\"col-3 p-2 my-auto text-left\">\n                <Link to=\"/\"><img className=\"img-fluid\" src={skeeballLogo} alt=\"Skeeball World Tour\" /></Link>\n            </div>\n            <div className=\"col-6 d-flex justify-content-center align-items-end mb-1 p-0\">\n                <SearchBar />\n            </div>\n            <div className=\"col-3 p-2 my-auto text-right\">\n                <HeaderNav />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './css/navDropdown.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavDropdown(props) {\n    return (\n        <div className=\"navdropdown\" data-toggle=\"dropdown\">\n            <div className=\"navdropbtn\">{props.buttonText}</div>\n            <div className=\"navdropdown-content\">\n                {props.listItems.map(item => (\n                    <div className=\"item\" key={item.id}>\n                        <a href={props.urlPrefix + item.href}>{item.text}</a>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nNavDropdown.propTypes = {\n    buttonText: PropTypes.string,\n    urlPrefix: PropTypes.string,\n    listItems: PropTypes.array,\n};\n","import React from 'react';\nimport './css/navButton.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavButton(props) {\n    return (\n        <div className=\"navbutton\">\n            <a href={props.url}><div className=\"navbtn\">{props.buttonText}</div></a>\n        </div>\n    );\n}\n\nNavButton.propTypes = {\n    buttonText: PropTypes.string,\n    url: PropTypes.string,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport CurrentSeasonContext from '../../context/currentSeasonContext';\nimport NavDropdown from './subcomponents/navDropdown/navDropdown';\nimport NavButton from './subcomponents/navButton/navButton';\n\nfunction NavBar() {\n    const currentSeasonId = useContext(CurrentSeasonContext);\n\n    const [displaySchedule, setDisplaySchedule] = useState(0);\n    const [storeDivisionArr, setStoreDivisionArr] = useState([]);\n\n    useEffect(() => {\n        axios.get('/api/settings/navbar')\n            .then(response => response.data[0] ? setDisplaySchedule(response.data[0].display_schedule) : setDisplaySchedule(0))\n            .catch(error => console.log(error));\n    }, []);\n\n    useEffect(() => {\n        if (currentSeasonId) {\n            axios.get('/api/schedules/navbar/' + currentSeasonId)\n                .then((response) => {\n                    const storeDivArray = response.data.map((storeDiv) => {\n                        return {\n                            id: storeDiv.store_division,\n                            text: storeDiv.store_city + ' (' + storeDiv.day_name + ')',\n                            href: '/' + storeDiv.store_id + '/' + storeDiv.division_id,\n                        };\n                    });\n                    setStoreDivisionArr(storeDivArray);\n                })\n                .catch(error => console.log(error));\n        }\n    }, [currentSeasonId]);\n\n    return (\n        <div className=\"row mb-4\">\n            <div className=\"col-12 justify-content-center text-center\">\n                <NavButton buttonText=\"Standings\" url=\"/standings\" />\n                <NavDropdown buttonText=\"Results +\" urlPrefix=\"/results\" listItems={storeDivisionArr} />\n                {displaySchedule === 1 &&\n                    <NavDropdown buttonText=\"Schedule +\" urlPrefix=\"/schedule\" listItems={storeDivisionArr} />\n                }\n                {/* <NavDropdown buttonText=\"Stores +\" urlPrefix=\"/stores\" listItems={storeDivisionArr} /> */}\n                {/* <NavButton buttonText=\"Champions\" url=\"/champions\" /> */}\n                {/* <NavButton buttonText=\"Rules\" url=\"/rules\" /> */}\n            </div >\n        </div >\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './css/footer.css';\n\nfunction Footer() {\n    return (\n        <div className=\"row mt-3 bg-footer\">\n            <div className=\"col-6 text-center p-3 border-right\">\n                <p className=\"mb-3\"><b>Brought to you by:</b></p>\n                <p className=\"mb-1\"><a href=\"https://www.winkinglizard.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Winking Lizard Tavern</a></p>\n                <p className=\"mb-1 small\">and</p>\n                <p className=\"m-0\"><a href=\"http://www.bellmusicco.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Bell Music Company</a></p>\n            </div>\n            <div className=\"col-6 text-center p-3 small border-left\">\n                <h5 className=\"mb-5\"><a href=\"mailto:ktaylor@bellmusicco.com\">Contact Us</a></h5>\n                <p>&copy; 2010 Skeeball World Tour</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/home';\nimport Rules from './pages/rules/rules';\nimport Standings from './pages/standings/standings';\nimport Search from './pages/search/search';\nimport Champions from './pages/champions/champions';\nimport Players from './pages/players/players';\nimport Teams from './pages/teams/teams';\nimport Results from './pages/results/results';\nimport Schedule from './pages/schedule/schedule';\nimport AllTime from './pages/allTime/allTime';\nimport Leaders from './pages/leaders/leaders';\nimport Qualifiers from './pages/qualifiers/qualifiers';\nimport NoMatch from './pages/noMatch/noMatch';\nimport Header from './components/header/header';\nimport NavBar from './components/navbar/navbar';\nimport Footer from './components/footer/footer';\nimport CurrentSeasonContext from './context/currentSeasonContext';\nimport axios from 'axios';\nimport './css/style.css';\nimport './css/my_style.css';\n\nexport default function App() {\n    const [currentSeasonId, setCurrentSeasonId] = useState(null);\n\n    useEffect(() => {\n        axios.get('/api/settings/current-season')\n            .then((response) => {\n                setCurrentSeasonId(response.data[0].current_season_id);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"container border bg-white\">\n                <Header />\n                <CurrentSeasonContext.Provider value={currentSeasonId}><NavBar /></CurrentSeasonContext.Provider>\n                <Switch>\n                    <Route exact path=\"/\"><CurrentSeasonContext.Provider value={currentSeasonId}><Home /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/rules\" component={Rules} />\n                    <Route exact path=\"/standings\"><CurrentSeasonContext.Provider value={currentSeasonId}><Standings /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/teams/:teamid\"><CurrentSeasonContext.Provider value={currentSeasonId}><Teams /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/players/:playerid\"><CurrentSeasonContext.Provider value={currentSeasonId}><Players /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/results/:storeid/:divisionid/:seasonid?\"><CurrentSeasonContext.Provider value={currentSeasonId}><Results /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/schedule/:storeid/:divisionid/:seasonid?\"><CurrentSeasonContext.Provider value={currentSeasonId}><Schedule /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/leaders\"><CurrentSeasonContext.Provider value={currentSeasonId}><Leaders /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/all-time\" component={AllTime} />\n                    <Route exact path=\"/qualifiers\"><CurrentSeasonContext.Provider value={currentSeasonId}><Qualifiers /></CurrentSeasonContext.Provider></Route>\n                    <Route exact path=\"/champions\" component={Champions} />\n                    <Route path=\"/search/:searchstring\" component={Search} />\n                    <Route component={NoMatch} />\n                </Switch>\n                <Footer />\n            </div>\n        </Router>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/media/skeeball_logo.102ce1b8.png\";"],"sourceRoot":""}