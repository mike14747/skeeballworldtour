{"version":3,"sources":["context/settingsContext.js","components/loading/loading.js","pages/home/home.js","components/pageHeading/pageHeading.js","pages/rules/rules.js","components/seasonDropdown/seasonDropdown.js","components/standingsTables/subcomponents/standingsRow/standingsRow.js","components/standingsTables/standingsTables.js","pages/standings/standings.js","pages/search/search.js","pages/champions/champions.js","components/statsBlock/subcomponents/statsBlockItem/statsBlockItem.js","components/statsBlock/statsBlock.js","pages/players/players.js","components/resultsDiv/subcomponents/resultsThead/resultsThead.js","components/resultsDiv/subcomponents/resultsTbody/resultsTbody.js","components/resultsDiv/subcomponents/resultsTfoot/resultsTfoot.js","components/resultsDiv/resultsDiv.js","pages/teams/teams.js","pages/results/results.js","components/scheduleTable/subcomponents/scheduleRow/scheduleRow.js","components/scheduleTable/scheduleTable.js","pages/schedule/schedule.js","components/numLeadersDropdown/numLeadersDropdown.js","pages/allTime/allTime.js","components/leadersTable/leadersTable.js","pages/leaders/leaders.js","pages/qualifiers/qualifiers.js","pages/noMatch/noMatch.js","components/header/subcomponents/searchBar/searchBar.js","components/header/subcomponents/headerNav/headerNav.js","components/header/subcomponents/joinFun/joinFun.js","components/header/header.js","components/navbar/subcomponents/navDropdown/navDropdown.js","components/navbar/subcomponents/navButton/navButton.js","components/navbar/navbar.js","components/footer/footer.js","App.js","index.js","components/loading/images/loading.gif","components/header/images/skeeball_logo.png"],"names":["SettingsContext","createContext","Loading","className","src","LoadingSwirly","alt","Home","settings","useContext","showRegButton","show_reg_button","regButtonUrl","reg_button_url","regButtonText","reg_button_text","useState","newsArr","setNewsArr","errorMsg","undefined","isLoaded","newsStatus","setNewsStatus","useEffect","axios","get","then","response","data","catch","error","console","log","href","ReactHtmlParser","length","map","news","i","key","page_id","content_heading","text_date1","page_content","PageHeading","props","text","Rules","status","rules","setRules","Dropdown","currentSeason","buttonText","listItems","handleSeasonId","season_name","season_year","item","season_id","onClick","StandingsRow","standingsRowData","standing","standingsId","teamId","teamName","wins","losses","ties","totalPoints","StandingsTables","standingsArr","standings","storeDivision","storeCity","dayName","standingsList","Standings","currentSeasonId","current_season_id","seasonId","setSeasonId","querySeasonId","seasonName","setSeasonName","setStandings","seasons","setSeasons","seasonArray","season","year","Search","searchstring","useParams","playerArray","setPlayerArray","teamArray","setTeamArray","player","player_id","full_name","cities","team","team_id","team_name","Champions","champions","setChampions","champion","tourny_team_id","comments","store_city","StatsBlockItem","stats","stat","index","StatsBlock","Players","playerid","playerNameStores","setPlayerNameStores","playerNameStoresStatus","setPlayerNameStoresStatus","currentViewStores","setCurrentViewStores","currentViewStoresStatus","setCurrentViewStoresStatus","playerSeasons","setPlayerSeasons","playerSeasonsStatus","setPlayerSeasonsStatus","playerStats","setPlayerStats","playerStatsStatus","setPlayerStatsStatus","playerResults","setPlayerResults","playerResultsStatus","setPlayerResultsStatus","stores","formattedPlayerStats","formattedPlayerResults","game","result","id","week_id","scores","score","total","ResultsThead","ResultsTbody","players","name","total_points","ResultsTfoot","gameTotals","gameResults","teamTotal","ResultsDiv","results","date","away_team","game_totals","game_results","team_total","colSpan","home_team","Teams","teamid","teamNameStores","setTeamNameStores","teamStats","setTeamStats","teamSchedule","setTeamSchedule","teamPlayers","setTeamPlayers","teamResults","setTeamResults","one_game_low","Number","one_game_avg","toFixed","one_game_high","ten_game_low","ten_game_avg","ten_game_high","games_played","avg_score","schedule","away_team_id","away_team_name","home_team_id","home_team_name","alley","start_time","week_date1","Results","storeid","divisionid","setResults","resultsStatus","setResultsStatus","store","setStore","storeStatus","setStoreStatus","resultSeasons","setResultSeasons","resultSeasonsStatus","setResultSeasonsStatus","store_id","division_id","store_name","day_name","ScheduleRow","weekId","matchup","ScheduleTable","schedules","week","matchups","Schedule","scheduleArray","setScheduleArray","scheduleArrayStatus","setScheduleArrayStatus","scheduleSeasons","setScheduleSeasons","scheduleSeasonsStatus","setScheduleSeasonsStatus","NumLeadersDropdown","numLeaders","numLeadersArray","setNumLeaders","defaultValue","leaders","value","AllTime","LeadersTable","heading","subHeading","columnName","columnData","format","leadersObj","leader","rank","field_id","field_name","numAtTieValue","tieValue","Leaders","defaultNumLeaders","num_leaders","queryNumLeaders","indAvgLeaders","setIndAvgLeaders","indOneGameLeaders","setIndOneGameLeaders","indTenGameLeaders","setIndTenGameLeaders","teamAvgLeaders","setTeamAvgLeaders","teamOneGameLeaders","setTeamOneGameLeaders","teamTenGameLeaders","setTeamTenGameLeaders","Qualifers","NoMatch","SearchBar","searchInput","setSearchInput","submitted","setSubmitted","onSubmit","e","preventDefault","type","maxLength","placeholder","onChange","event","target","to","HeaderNav","JoinFun","textBoxHeading","text_box_heading","textBoxText","text_box_text","data-toggle","Header","skeeballLogo","NavDropdown","urlPrefix","NavButton","url","NavBar","displaySchedule","display_schedule","storeDivisionArr","setStoreDivisionArr","storeDivArray","storeDiv","store_division","Footer","rel","App","setSettings","Provider","exact","path","component","Qualifiers","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e2f6281d.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst SettingsContext = createContext({});\n\nexport default SettingsContext;\n","import React from 'react';\nimport LoadingSwirly from './images/loading.gif';\nimport './css/loading.css';\n\nconst Loading = () => {\n    return (\n        <div className=\"loading\">\n            <img src={LoadingSwirly} alt={'Loading'} />\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport SettingsContext from '../../context/settingsContext';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport Loading from '../../components/loading/loading';\n\nfunction Home() {\n    const settings = useContext(SettingsContext);\n\n    const showRegButton = settings.show_reg_button;\n    const regButtonUrl = settings.reg_button_url;\n    const regButtonText = settings.reg_button_text;\n\n    const [newsArr, setNewsArr] = useState([]);\n    const [newsStatus, setNewsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n    // const [newsCounter, setNewsCounter] = useState(0);\n\n    useEffect(() => {\n        axios.get('/api/pages/homepage-news')\n            .then((response) => {\n                setNewsArr(response.data);\n                setNewsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setNewsStatus({ errorMsg: 'An error occurred fetching league news!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <div>\n            {showRegButton === 1 && regButtonUrl && regButtonText &&\n                <div>\n                    <div className=\"text-center\">\n                        <a href={regButtonUrl}><img src=\"/images/register_now.jpg\" alt=\"REGISTER NOW!\" /></a>\n                        {ReactHtmlParser(regButtonText)}\n                    </div>\n                </div>\n            }\n\n            {!newsStatus.isLoaded\n                ? <Loading />\n                : newsArr && newsArr.length > 0\n                    ? <Fragment>\n                        {newsArr.map((news, i) => (\n                            <div key={news.page_id}>\n                                {i > 0 && <hr className=\"mt-4 mb-4\" />}\n                                <h5 className=\"text-danger mt-1 mb-0\">{news.content_heading}</h5>\n                                <p><span className=\"small\">{news.text_date1}</span></p>\n                                {ReactHtmlParser(news.page_content)}\n                            </div>\n                        ))}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see league news!</div>\n\n            }\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeading = (props) => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center\">{props.text}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nPageHeading.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageHeading;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Rules = () => {\n    const [rules, setRules] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    useEffect(() => {\n        axios.get('/api/pages/rules')\n            .then((response) => {\n                setRules({\n                    data: response.data[0],\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setRules({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching league rules!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            {!rules.status.isLoaded\n                ? <Loading />\n                : rules.data\n                    ? <Fragment>\n                        <PageHeading text={rules.data.content_heading} />\n                        {ReactHtmlParser(rules.data.page_content)}\n                    </Fragment>\n                    : !rules.status.errorMsg\n                        ? <div className=\"text-center empty-result\">Please check back again soon to see the rules!</div>\n                        : <span className=\"empty-result\">{rules.status.errorMsg}</span>\n\n            }\n        </Fragment>\n    );\n};\n\nexport default Rules;\n","import React, { Fragment } from 'react';\nimport './css/seasonDropdown.css';\nimport PropTypes from 'prop-types';\n\nfunction Dropdown({ currentSeason, buttonText, listItems, handleSeasonId }) {\n    return (\n        <Fragment>\n            {currentSeason &&\n                <Fragment>\n                    <span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentSeason.season_name}, {currentSeason.season_year}</span>\n                </Fragment>\n            }\n            <div className=\"dropdown ml-2\">\n                <button className=\"dropbtn\">{buttonText}<i className=\"down\"></i></button>\n                <ul className=\"dropdown-content\">\n                    {listItems.map(item => (\n                        <Fragment key={item.season_id}>\n                            {currentSeason && (item.season_id === currentSeason.season_id)\n                                ? <li className=\"viewing\">{item.text}</li>\n                                : <li onClick={() => handleSeasonId(item.season_id)}>{item.text}</li>\n                            }\n                        </Fragment>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n}\n\nDropdown.propTypes = {\n    currentSeason: PropTypes.object,\n    buttonText: PropTypes.string,\n    listItems: PropTypes.array,\n    handleSeasonId: PropTypes.func,\n};\n\nexport default Dropdown;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StandingsRow = ({ standingsRowData }) => {\n    return (\n        <Fragment>\n            {standingsRowData.map((standing) => (\n                <tr key={standing.standingsId}>\n                    <td className=\"text-left\"><a href={'/teams/' + standing.teamId}>{standing.teamName}</a></td>\n                    <td>{standing.wins}</td>\n                    <td>{standing.losses}</td>\n                    <td>{standing.ties}</td>\n                    <td>{standing.totalPoints}</td>\n                </tr>\n            ))}\n        </Fragment>\n    );\n};\n\nStandingsRow.propTypes = {\n    standingsRowData: PropTypes.array,\n};\n\nexport default StandingsRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport StandingsRow from './subcomponents/standingsRow/standingsRow';\n\nconst StandingsTables = ({ standingsArr }) => {\n    return (\n        <Fragment>\n            {standingsArr.map(standings => (\n                <div key={standings.storeDivision}>\n                    <h5 className=\"text-center\">{standings.storeCity} - {standings.dayName}</h5>\n                    <div className=\"d-flex justify-content-center mb-4\">\n                        <div className=\"min-w-50 mx-auto table-wrapper\">\n                            <table className=\"table table-bordered mb-4 text-center\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th className=\"text-left\">TEAM</th>\n                                        <th>W</th>\n                                        <th>L</th>\n                                        <th>T</th>\n                                        <th>TOTAL POINTS</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <StandingsRow standingsRowData={standings.standingsList} />\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nStandingsTables.propTypes = {\n    standingsArr: PropTypes.array,\n};\n\nexport default StandingsTables;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport StandingsTables from '../../components/standingsTables/standingsTables';\nimport Loading from '../../components/loading/loading';\n\nexport default function Standings() {\n    const { current_season_id: currentSeasonId } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [standings, setStandings] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/standings/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the standings season list!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    if (response.data[0]) {\n                        setSeasonName({\n                            season_id: querySeasonId,\n                            season_name: response.data[0].season_name,\n                            season_year: response.data[0].year,\n                        });\n                    } else {\n                        setSeasonName(null);\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/standings/seasons/' + querySeasonId)\n                .then((response) => {\n                    setStandings({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStandings({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the standings!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Standings\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-12 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Standings From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            {!standings.status.isLoaded\n                ? <Loading />\n                : standings.data && standings.data.length > 0\n                    ? <StandingsTables standingsArr={standings.data} />\n                    : standings.data\n                        ? <span className=\"empty-result\">There are no standings for this season!</span>\n                        : <span className=\"empty-result\">{standings.status.errorMsg}</span>\n            }\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nexport default function Search() {\n    const { searchstring } = useParams();\n    const [playerArray, setPlayerArray] = useState([]);\n    const [teamArray, setTeamArray] = useState([]);\n    useEffect(() => {\n        axios.get('/api/searches/players/' + searchstring)\n            .then((response) => {\n                setPlayerArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        axios.get('/api/searches/teams/' + searchstring)\n            .then((response) => {\n                setTeamArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [searchstring]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Search Results\" />\n            <p className=\"text-center\"><b>Search Results for:</b> {searchstring}</p>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Player Matches:</b> {playerArray.length}</p>\n                    {playerArray.map(player => (\n                        <p key={player.player_id}><a href={'/players/' + player.player_id}>{player.full_name}</a> ({player.cities})</p>\n                    ))}\n                </div>\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Team Matches:</b> {teamArray.length}</p>\n                    {teamArray.map(team => (\n                        <p key={team.team_id}><a href={'/teams/' + team.team_id}>{team.team_name}</a> ({team.cities})</p>\n                    ))}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Champions = () => {\n    const [champions, setChampions] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    useEffect(() => {\n        axios.get('/api/seasons/champions')\n            .then((response) => {\n                setChampions({\n                    data: response.data,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setChampions({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching champions!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Champions\" />\n            {!champions.status.isLoaded\n                ? <Loading />\n                : champions.data && champions.data.length > 0\n                    ? <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <table className=\"table table-bordered table-hover\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th>Season</th>\n                                        <th>Champion</th>\n                                        <th>Store</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {champions.data.map((champion) => (\n                                        <tr key={champion.season_id}>\n                                            <td>{champion.season_name}-{champion.year}</td>\n                                            <td><a href={'/teams/' + champion.tourny_team_id}>{champion.team_name}</a>{champion.comments.length > 0 && <span className=\"small ml-2\">*({champion.comments})</span>}</td>\n                                            <td>{champion.store_city}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    : champions.data\n                        ? <span className=\"empty-result\">There are no champions to display!</span>\n                        : <span className=\"empty-result\">{champions.status.errorMsg}</span>\n            }\n        </Fragment>\n    );\n};\n\nexport default Champions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './css/statsBlockItem.css';\n\nconst StatsBlockItem = (props) => {\n    return (\n        props.stats.map((stat, index) => (\n            <tr key={index}>\n                <td className=\"bg-stat-heading font-weight-bolder text-right\">{stat.text}</td>\n                <td className=\"text-center px-4\">{stat.data}</td>\n            </tr>\n        ))\n    );\n};\n\nStatsBlockItem.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatsBlockItem from './subcomponents/statsBlockItem/statsBlockItem';\n\nconst StatsBlock = (props) => {\n    return (\n        <table className=\"table table-bordered table-hover\">\n            <tbody>\n                <StatsBlockItem stats={props.stats} />\n            </tbody>\n        </table>\n    );\n};\n\nStatsBlock.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlock;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\nimport Loading from '../../components/loading/loading';\n\nconst Players = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { playerid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [playerNameStores, setPlayerNameStores] = useState(null);\n    const [playerNameStoresStatus, setPlayerNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerSeasons, setPlayerSeasons] = useState(null);\n    const [playerSeasonsStatus, setPlayerSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerStats, setPlayerStats] = useState(null);\n    const [playerStatsStatus, setPlayerStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerResults, setPlayerResults] = useState(null);\n    const [playerResultsStatus, setPlayerResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/players/' + playerid + '/name-store')\n            .then((response) => {\n                response.data[0] ? setPlayerNameStores(response.data[0]) : setPlayerNameStores([]);\n                setPlayerNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerNameStores(null);\n                setPlayerNameStoresStatus({ errorMsg: 'An error occurred fetching info for this Player!', isLoaded: true });\n            });\n        axios.get('/api/players/' + playerid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setPlayerSeasons(seasonArray);\n                setPlayerSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerSeasons(null);\n                setPlayerSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this player!', isLoaded: true });\n            });\n    }, [playerid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/players/' + playerid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/players/' + playerid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data) {\n                        setPlayerStats(response.data.formattedPlayerStats);\n                        setPlayerResults(response.data.formattedPlayerResults);\n                    } else {\n                        setPlayerStats([]);\n                        setPlayerResults([]);\n                    }\n                    setPlayerStatsStatus({ errorMsg: undefined, isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setPlayerStats(null);\n                    setPlayerResults(null);\n                    setPlayerStatsStatus({ errorMsg: 'An error occurred fetching stats for this Player!', isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: 'An error occurred fetching results for this Player!', isLoaded: true });\n                });\n        }\n    }, [playerid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Player Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {playerNameStoresStatus.isLoaded && playerNameStores &&\n                        <div className=\"mb-3\">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Player: </span>{playerNameStores.full_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {playerNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {playerSeasonsStatus.isLoaded && playerSeasons && playerSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={playerSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto\">\n                    {!playerStatsStatus.isLoaded\n                        ? <Loading />\n                        : playerStats && playerStats.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                <StatsBlock stats={playerStats} />\n                            </Fragment>\n                            : playerStats\n                                ? <span className=\"empty-result\">There are no player stats for this season!</span>\n                                : <span className=\"empty-result\">{playerStatsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto table-wrapper\">\n                    {!playerResultsStatus.isLoaded\n                        ? <Loading />\n                        : playerResults && playerResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Week by Week Results</h5>\n                                <table className=\"table table-bordered table-hover mb-0\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th>Week # - Team</th>\n                                            {gamesArray.map((game, i) => (\n                                                <th key={i} className=\"text-center\">{game}</th>\n                                            ))}\n                                            <th className=\"text-center\">Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {playerResults.map((result) => (\n                                            <tr key={result.id}>\n                                                <td>{result.week_id} - <a href={'/teams/' + result.team_id}>{result.team_name}</a></td>\n                                                {result.scores.map((score, index) => (\n                                                    <td key={index} className=\"text-center\">{score}</td>\n                                                ))}\n                                                <td className=\"text-center\">{result.total}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : playerResults\n                                ? <span className=\"empty-result\">There are no player results for this season!</span>\n                                : <span className=\"empty-result\">{playerResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n};\n\nexport default Players;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsThead = ({ teamId, teamName, wins, losses, ties }) => {\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td><a href={'/teams/' + teamId}>{teamName}</a> (<span className={'text-' + (wins > losses ? 'success' : (wins < losses ? 'danger' : 'primary'))}>{wins}-{losses}-{ties}</span>)</td>\n                {gamesArray.map((game, i) => (\n                    <td key={i} className=\"text-center\">{game}</td>\n                ))}\n                <td className=\"text-center\">Total</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsThead.propTypes = {\n    teamId: PropTypes.number,\n    teamName: PropTypes.string,\n    wins: PropTypes.number,\n    losses: PropTypes.number,\n    ties: PropTypes.number,\n};\n\nexport default ResultsThead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTbody = ({ players }) => {\n    return (\n        <tbody>\n            {players.map((player, index) => (\n                <tr key={index} className=\"bg-white\">\n                    <td><a href={'/players/' + player.player_id}>{player.name}</a></td>\n                    {player.scores.map((score, i) => (\n                        <td key={i} className=\"text-center\">{score}</td>\n                    ))}\n                    <td className=\"text-center\">{player.total_points}</td>\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nResultsTbody.propTypes = {\n    players: PropTypes.array,\n};\n\nexport default ResultsTbody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTfoot = ({ gameTotals, gameResults, teamTotal }) => {\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td>Total</td>\n                {gameTotals.map((total, i) => (\n                    <td key={i} className=\"text-center\"><span className={'text-' + (gameResults[i] === 'w' ? 'success' : (gameResults[i] === 'l' ? 'danger' : 'primary'))}>{total}</span></td>\n                ))}\n                <td className=\"text-center\">{teamTotal}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsTfoot.propTypes = {\n    gameTotals: PropTypes.array,\n    gameResults: PropTypes.array,\n    teamTotal: PropTypes.number,\n};\n\nexport default ResultsTfoot;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsThead from './subcomponents/resultsThead/resultsThead';\nimport ResultsTbody from './subcomponents/resultsTbody/resultsTbody';\nimport ResultsTfoot from './subcomponents/resultsTfoot/resultsTfoot';\n\nconst ResultsDiv = ({ results }) => {\n    return (\n        <Fragment>\n            {results.map((result) => (\n                <Fragment key={result.id}>\n                    <h5 className=\"text-center text-success\">Week {result.week_id} ({result.date})</h5>\n                    <div className=\"p-1 mb-4 border border-secondary table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-1\">\n                            <ResultsThead teamId={result.away_team.team_id} teamName={result.away_team.team_name} wins={result.away_team.wins} losses={result.away_team.losses} ties={result.away_team.ties} />\n                            <ResultsTbody players={result.away_team.players} />\n                            <ResultsTfoot gameTotals={result.away_team.game_totals} gameResults={result.away_team.game_results} teamTotal={result.away_team.team_total} />\n                            <tbody><tr><td colSpan=\"12\" className=\"border-0\"></td></tr></tbody>\n                            <ResultsThead teamId={result.home_team.team_id} teamName={result.home_team.team_name} wins={result.home_team.wins} losses={result.home_team.losses} ties={result.home_team.ties} />\n                            <ResultsTbody players={result.home_team.players} />\n                            <ResultsTfoot gameTotals={result.home_team.game_totals} gameResults={result.home_team.game_results} teamTotal={result.home_team.team_total} />\n                        </table>\n                    </div>\n                </Fragment>\n            ))}\n        </Fragment>\n    );\n};\n\nResultsDiv.propTypes = {\n    results: PropTypes.array,\n};\n\nexport default ResultsDiv;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\nimport Loading from '../../components/loading/loading';\n\nexport default function Teams() {\n    const { current_season_id: currentSeasonId } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { teamid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [teamNameStores, setTeamNameStores] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [currentViewStores, setCurrentViewStores] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamStats, setTeamStats] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamSchedule, setTeamSchedule] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamPlayers, setTeamPlayers] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamResults, setTeamResults] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/teams/' + teamid + '/store-name')\n            .then((response) => {\n                const data = response.data[0] || [];\n                setTeamNameStores({\n                    data: data,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamNameStores({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching info for this team!',\n                        isLoaded: true,\n                    },\n                });\n            });\n        axios.get('/api/teams/' + teamid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the season list for this team!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, [teamid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/teams/' + teamid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    const data = response.data[0] ? { stores: response.data[0].stores } : null;\n                    setCurrentViewStores({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the current view store info!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/seasons/' + querySeasonId)\n                .then((response) => {\n                    let data = [];\n                    if (response.data[2][0]) {\n                        data = [\n                            { text: 'Record:', data: response.data[2][0].wins + '-' + response.data[2][0].losses + '-' + response.data[2][0].ties },\n                            { text: 'Total Points:', data: response.data[2][0].total_points },\n                            { text: '1-Game Low:', data: response.data[2][0].one_game_low },\n                            { text: '1-Game Avg:', data: Number(response.data[2][0].one_game_avg).toFixed(1) },\n                            { text: '1-Game High:', data: response.data[2][0].one_game_high },\n                            { text: '10-Game Low:', data: response.data[2][0].ten_game_low },\n                            { text: '10-Game Avg:', data: Number(response.data[2][0].ten_game_avg).toFixed(1) },\n                            { text: '10-Game High:', data: response.data[2][0].ten_game_high },\n                        ];\n                    }\n                    setTeamStats({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamStats({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching stats for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/current-schedule/seasons/' + querySeasonId)\n                .then((response) => {\n                    const data = response.data[2] || [];\n                    setTeamSchedule({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamSchedule({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the schedule for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/players/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamPlayers({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamPlayers({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching players for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamResults({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamResults({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching results for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [teamid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Team Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {teamNameStores.status.isLoaded && teamNameStores.data &&\n                        <div className=\"mb-3 \">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Team: </span>{teamNameStores.data.team_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {teamNameStores.data.cities}</div>\n                            {currentViewStores.status.isLoaded && currentViewStores.data.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.data.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamPlayers.status.isLoaded\n                                ? <Loading />\n                                : teamPlayers.data && teamPlayers.data.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Players</h5>\n                                        <table className=\"table table-bordered table-hover\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th>Player</th>\n                                                    <th className=\"text-center\">Games</th>\n                                                    <th className=\"text-center\">Average</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {teamPlayers.data.map((player) => (\n                                                    <tr key={player.player_id}>\n                                                        <td><a href={'/players/' + player.player_id}>{player.full_name}</a></td>\n                                                        <td className=\"text-center\">{player.games_played}</td>\n                                                        <td className=\"text-center\">{Number(player.avg_score).toFixed(1)}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </Fragment>\n                                    : teamPlayers.data\n                                        ? <span className=\"empty-result\">There are no players on this team in the selected season!</span>\n                                        : <span className=\"empty-result\">{teamPlayers.status.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamStats.status.isLoaded\n                                ? <Loading />\n                                : teamStats.data && teamStats.data.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                        <StatsBlock stats={teamStats.data} />\n                                    </Fragment>\n                                    : teamStats.data\n                                        ? <span className=\"empty-result\">There are no team stats for the selected season!</span>\n                                        : <span className=\"empty-result\">{teamStats.status.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamSchedule.status.isLoaded\n                        ? <Loading />\n                        : teamSchedule.data && teamSchedule.data.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Schedule</h5>\n                                <table className=\"table table-bordered table-hover\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th className=\"text-center\">WEEK #</th>\n                                            <th>Away Team</th>\n                                            <th>Home Team</th>\n                                            <th className=\"text-center\">Alley</th>\n                                            <th>Start Time</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {teamSchedule.data.map((schedule) => (\n                                            <tr key={schedule.week_id} className=\"bg-white\">\n                                                <td className=\"text-center\">{schedule.week_id}</td>\n                                                <td><a href={'/teams/' + schedule.away_team_id}>{schedule.away_team_name}</a></td>\n                                                <td><a href={'/teams/' + schedule.home_team_id}>{schedule.home_team_name}</a></td>\n                                                <td className=\"text-center\">{schedule.alley}</td>\n                                                <td>{schedule.start_time}</td>\n                                                <td>{schedule.week_date1}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : teamSchedule.data\n                                ? <span className=\"empty-result\">There is no schedule for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamSchedule.status.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamResults.status.isLoaded\n                        ? <Loading />\n                        : teamResults.data && teamResults.data.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Weekly Results</h5>\n                                <ResultsDiv results={teamResults.data} />\n                            </Fragment>\n                            : teamResults.data\n                                ? <span className=\"empty-result\">There are no results for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamResults.status.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Results = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [results, setResults] = useState(null);\n    const [resultsStatus, setResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [resultSeasons, setResultSeasons] = useState(null);\n    const [resultSeasonsStatus, setResultSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setResultSeasons(seasonArray);\n                setResultSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setResultSeasons(null);\n                setResultSeasonsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore(null);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching the store name!', isLoaded: true });\n                });\n            axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setResults(response.data) : setResults(null);\n                    setResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setResults(null);\n                    setResultsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Results\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {resultSeasonsStatus.isLoaded && resultSeasons && resultSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={resultSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!resultsStatus.isLoaded\n                        ? <Loading />\n                        : results && results.length > 0\n                            ? <ResultsDiv results={results} />\n                            : results\n                                ? <span className=\"empty-result\">There are no results for this season!</span>\n                                : <span className=\"empty-result\">{resultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScheduleRow = ({ weekId, matchup }) => {\n    return (\n        <tr key={`${weekId}${matchup.home_team_id}`} className=\"bg-white\">\n            <td><a href={'/teams/' + matchup.away_team_id}>{matchup.away_team}</a></td>\n            <td><a href={'/teams/' + matchup.home_team_id}>{matchup.home_team}</a></td>\n            <td className=\"text-center\">{matchup.alley}</td>\n            <td>{matchup.start_time}</td>\n        </tr>\n    );\n};\n\nScheduleRow.propTypes = {\n    weekId: PropTypes.number,\n    matchup: PropTypes.object,\n};\n\nexport default ScheduleRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ScheduleRow from './subcomponents/scheduleRow/scheduleRow';\n\nconst ScheduleTable = ({ schedules }) => {\n    return (\n        <Fragment>\n            {schedules.map((week) => (\n                <div key={week.week_id} className=\"mb-5\">\n                    <h5 className=\"text-center text-success mb-4\">Week {week.week_id} ({week.week_date1})</h5>\n                    <div className=\"mb-3 table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-2\">\n                            <thead>\n                                <tr className=\"bg-gray6\">\n                                    <th>Away Team</th>\n                                    <th>Home Team</th>\n                                    <th className=\"text-center\">Alley</th>\n                                    <th>Start Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {week.matchups.map((matchup) => (\n                                    <Fragment key={`${week.week_id}${matchup.home_team_id}`}>\n                                        <ScheduleRow weekId={week.week_id} matchup={matchup} />\n                                    </Fragment>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nScheduleTable.propTypes = {\n    schedules: PropTypes.array,\n};\n\nexport default ScheduleTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport ScheduleTable from '../../components/scheduleTable/scheduleTable';\nimport Loading from '../../components/loading/loading';\n\nconst Schedule = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [scheduleArray, setScheduleArray] = useState(null);\n    const [scheduleArrayStatus, setScheduleArrayStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [scheduleSeasons, setScheduleSeasons] = useState(null);\n    const [scheduleSeasonsStatus, setScheduleSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/schedules/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setScheduleSeasons(seasonArray);\n                setScheduleSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setScheduleSeasons(null);\n                setScheduleSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this store!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore([]);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching info for this store!', isLoaded: true });\n                });\n\n            axios('/api/schedules/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    setScheduleArray(response.data);\n                    setScheduleArrayStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setScheduleArray(null);\n                    setScheduleArrayStatus({ errorMsg: 'An error occurred fetching the schedule for this store!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Schedule\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {scheduleSeasonsStatus.isLoaded && scheduleSeasons && scheduleSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Schedule From\" listItems={scheduleSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!scheduleArrayStatus.isLoaded\n                        ? <Loading />\n                        : scheduleArray && scheduleArray.length > 0\n                            ? <Fragment>\n                                <ScheduleTable schedules={scheduleArray} />\n                            </Fragment>\n                            : scheduleArray\n                                ? <span className=\"empty-result\">There is no schedule available for this season!</span>\n                                : <span className=\"empty-result\">{scheduleArrayStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Schedule;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumLeadersDropdown({ numLeaders, numLeadersArray, setNumLeaders }) {\n    return (\n        <Fragment>\n            {numLeadersArray && numLeadersArray.length > 0 &&\n                <span className=\"small\">Currently showing top:</span>\n            }\n            <select className=\"ml-2\" defaultValue={numLeaders}>\n                {numLeadersArray.map(leaders => (\n                    <Fragment key={leaders}>\n                        {numLeaders === leaders\n                            ? <option>{leaders}</option>\n                            : <option value={leaders} onClick={() => setNumLeaders(leaders)}>{leaders}</option>\n                        }\n                    </Fragment>\n                ))}\n            </select>\n        </Fragment>\n    );\n}\n\nNumLeadersDropdown.propTypes = {\n    numLeaders: PropTypes.number,\n    numLeadersArray: PropTypes.array,\n    setNumLeaders: PropTypes.func,\n};\n\nexport default NumLeadersDropdown;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst AllTime = () => {\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    useEffect(() => {\n\n    }, [numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default AllTime;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LeadersTable = ({ heading, subHeading, columnName, columnData, format, href, leadersObj }) => {\n    return (\n        <Fragment>\n            <div className=\"text-center mb-4\">\n                <h5 className=\"text-success mb-0\">{heading}</h5>\n                {subHeading &&\n                    <span className=\"text-secondary small\">{subHeading}</span>\n                }\n            </div>\n            <table className=\"table table-bordered table-hover mb-5\">\n                <thead>\n                    <tr className=\"bg-gray6\">\n                        <th className=\"text-center\">Rank</th>\n                        <th className=\"text-left\">{columnName}</th>\n                        <th className=\"text-center\">{columnData}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {leadersObj.leaders.map((leader) => (\n                        <tr key={leader.key}>\n                            <td className=\"text-center\">{leader.rank}</td>\n                            <td><a href={`${href}${leader.field_id}`}>{leader.field_name}</a> ({leader.store_city})</td>\n                            <td className=\"text-center\">\n                                {format === 'decimal'\n                                    ? Number(leader.data).toFixed(1)\n                                    : Number(leader.data)\n                                }\n                            </td>\n                        </tr>\n                    ))}\n                    {leadersObj.numAtTieValue > 1 &&\n                        <tr>\n                            <td></td>\n                            <td className=\"text-right text-success\">{leadersObj.numAtTieValue} tied at:</td>\n                            <td className=\"text-center\">{leadersObj.tieValue}</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nLeadersTable.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    columnName: PropTypes.string,\n    columnData: PropTypes.string,\n    format: PropTypes.string,\n    href: PropTypes.string,\n    leadersObj: PropTypes.object,\n};\n\nexport default LeadersTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport LeadersTable from '../../components/leadersTable/leadersTable';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\nimport Loading from '../../components/loading/loading';\n\nconst Leaders = () => {\n    const { current_season_id: currentSeasonId, num_leaders: defaultNumLeaders } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [numLeaders, setNumLeaders] = useState(null);\n    const queryNumLeaders = numLeaders || defaultNumLeaders;\n    const numLeadersArray = [10, 20, 50, 100];\n\n    const [indAvgLeaders, setIndAvgLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [indOneGameLeaders, setIndOneGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [indTenGameLeaders, setIndTenGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamAvgLeaders, setTeamAvgLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamOneGameLeaders, setTeamOneGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamTenGameLeaders, setTeamTenGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/leaders/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the leaders season list!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/leaders/individual/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndAvgLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndAvgLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player best average leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/individual/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndOneGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndOneGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player 1-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/individual/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndTenGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndTenGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player 10-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamAvgLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamAvgLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team best average leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamOneGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamOneGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team 1-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamTenGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamTenGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team 10-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [querySeasonId, queryNumLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n                    Filter by: (Store / Division)\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    {queryNumLeaders &&\n                        <NumLeadersDropdown numLeaders={queryNumLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                    }\n                </div>\n                <div className=\"col-4 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Leaders From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Individual Leaders</h3>\n                            {!indAvgLeaders.status.isLoaded\n                                ? <Loading />\n                                : indAvgLeaders.data.leaders && indAvgLeaders.data.numAtTieValue && (indAvgLeaders.data.leaders.length > 0 || indAvgLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, high season average / game\" subHeading=\"(must play in a minimum of 50% of your team's games to qualify)\" columnName=\"Player\" columnData=\"Average\" format=\"decimal\" href=\"/players/\" leadersObj={indAvgLeaders.data} />\n                                    : indAvgLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indAvgLeaders.status.errorMsg}</div>\n                            }\n                            {!indOneGameLeaders.status.isLoaded\n                                ? <Loading />\n                                : indOneGameLeaders.data.leaders && indOneGameLeaders.data.numAtTieValue && (indOneGameLeaders.data.leaders.length > 0 || indOneGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 1-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indOneGameLeaders.data} />\n                                    : indOneGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indOneGameLeaders.status.errorMsg}</div>\n                            }\n                            {!indTenGameLeaders.status.isLoaded\n                                ? <Loading />\n                                : indTenGameLeaders.data.leaders && indTenGameLeaders.data.numAtTieValue && (indTenGameLeaders.data.leaders.length > 0 || indTenGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 10-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indTenGameLeaders.data} />\n                                    : indTenGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indTenGameLeaders.status.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Team Leaders</h3>\n                            {!teamAvgLeaders.status.isLoaded\n                                ? <Loading />\n                                : teamAvgLeaders.data.leaders && teamAvgLeaders.data.numAtTieValue && (teamAvgLeaders.data.leaders.length > 0 || teamAvgLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high average\" columnName=\"Team\" columnData=\"Average\" format=\"decimal\" href=\"/teams/\" leadersObj={teamAvgLeaders.data} />\n                                    : teamAvgLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamAvgLeaders.status.errorMsg}</div>\n                            }\n                            {!teamOneGameLeaders.status.isLoaded\n                                ? <Loading />\n                                : teamOneGameLeaders.data.leaders && teamOneGameLeaders.data.numAtTieValue && (teamOneGameLeaders.data.leaders.length > 0 || teamOneGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 1-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamOneGameLeaders.data} />\n                                    : teamOneGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamOneGameLeaders.status.errorMsg}</div>\n                            }\n                            {!teamTenGameLeaders.status.isLoaded\n                                ? <Loading />\n                                : teamTenGameLeaders.data.leaders && teamTenGameLeaders.data.numAtTieValue && (teamTenGameLeaders.data.leaders.length > 0 || teamTenGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamTenGameLeaders.data} />\n                                    : teamTenGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamTenGameLeaders.status.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Leaders;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Qualifers = () => {\n    const settings = useContext(SettingsContext);\n\n    // eslint-disable-next-line\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Tournament Qualifiers\" />\n            {seasonName &&\n                <div>\n                    {seasonName.season_name}-{seasonName.season_year}\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Qualifers;\n","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div className=\"m-5 bigger\">\n            <p className=\"text-danger\"><b>Error 404!</b></p>\n            <p>An error has occurred.</p>\n            <p>The page you are looking for does not exist!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/searchBar.css';\n\nfunction SearchBar() {\n    const [searchInput, setSearchInput] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    useEffect(() => {\n        if (submitted) {\n            setSearchInput('');\n            setSubmitted(false);\n        }\n    }, [submitted]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchInput.length > 0 && setSubmitted(true);\n    };\n\n    return (\n        <div className=\"mt-auto\">\n            <form className=\"form-searchbar\" onSubmit={handleSubmit}>\n                <input type=\"text\" maxLength=\"20\" placeholder=\"Find Player/Team\" className=\"input-searchbar\" value={searchInput} onChange={event => setSearchInput(event.target.value)} />\n                <button type=\"submit\" name=\"submit\" className=\"search-button\">Go</button>\n            </form>\n            {submitted && <Redirect to={'/search/' + searchInput} />}\n        </div>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './css/headerNav.css';\n\nconst HeaderNav = () => {\n    return (\n        <div className=\"h-nav-container\">\n            <span className=\"h-nav-burger\">&#9776;</span>\n            <ul className=\"h-nav-content\">\n                <a href=\"/champions\"><li className=\"nav-item\">Champions</li></a>\n                <a href=\"/rules\"><li className=\"nav-item\">Rules</li></a>\n                <a href=\"/leaders\"><li className=\"nav-item\">Leaders</li></a>\n                <a href=\"/all-time\"><li className=\"nav-item\">All-Time Records</li></a>\n            </ul>\n        </div>\n    );\n};\n\nexport default HeaderNav;\n","import React, { useContext, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport './css/joinFun.css';\nimport SettingsContext from '../../../../context/settingsContext';\n\nconst JoinFun = () => {\n    const { text_box_heading: textBoxHeading, text_box_text: textBoxText } = useContext(SettingsContext);\n\n    return (\n        <div className=\"join-dropdown\" data-toggle=\"dropdown\">\n            <div className=\"join-heading\">\n                {textBoxHeading &&\n                    <Fragment>{textBoxHeading} +</Fragment>\n                }\n            </div>\n            <div className=\"join-dropdown-content\">\n                {textBoxText &&\n                    <Fragment>{ReactHtmlParser(textBoxText)}</Fragment>\n                }\n            </div>\n        </div>\n\n    );\n};\n\nexport default JoinFun;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/header.css';\nimport skeeballLogo from './images/skeeball_logo.png';\nimport SearchBar from './subcomponents/searchBar/searchBar';\nimport HeaderNav from './subcomponents/headerNav/headerNav';\nimport JoinFun from './subcomponents/joinFun/joinFun';\n\nfunction Header() {\n    return (\n        <div className=\"header-bg row mb-0\">\n            <div className=\"col-3 p-2 my-auto text-left\">\n                <Link to=\"/\"><img className=\"img-fluid\" src={skeeballLogo} alt=\"Skeeball World Tour\" /></Link>\n            </div>\n            <div className=\"col-6 d-flex flex-column justify-content-center align-items-center mb-2 p-0\">\n                <JoinFun />\n                <SearchBar />\n            </div>\n            <div className=\"col-3 p-2 my-auto text-right\">\n                <HeaderNav />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './css/navDropdown.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavDropdown(props) {\n    return (\n        <div className=\"navdropdown\">\n            <div className=\"navdropbtn\">{props.buttonText}</div>\n            <div className=\"navdropdown-content\">\n                {props.listItems.map(item => (\n                    <div className=\"item\" key={item.id}>\n                        <a href={props.urlPrefix + item.href}>{item.text}</a>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nNavDropdown.propTypes = {\n    buttonText: PropTypes.string,\n    urlPrefix: PropTypes.string,\n    listItems: PropTypes.array,\n};\n","import React from 'react';\nimport './css/navButton.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavButton(props) {\n    return (\n        <div className=\"navbutton\">\n            <a href={props.url}><div className=\"navbtn\">{props.buttonText}</div></a>\n        </div>\n    );\n}\n\nNavButton.propTypes = {\n    buttonText: PropTypes.string,\n    url: PropTypes.string,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport NavDropdown from './subcomponents/navDropdown/navDropdown';\nimport NavButton from './subcomponents/navButton/navButton';\n\nfunction NavBar() {\n    const settings = useContext(SettingsContext);\n    const currentSeasonId = settings.current_season_id;\n    const displaySchedule = settings.display_schedule;\n\n    const [storeDivisionArr, setStoreDivisionArr] = useState([]);\n\n    useEffect(() => {\n        if (currentSeasonId) {\n            axios.get('/api/schedules/navbar/' + currentSeasonId)\n                .then((response) => {\n                    const storeDivArray = response.data.map(storeDiv => (\n                        {\n                            id: storeDiv.store_division,\n                            text: storeDiv.store_city + ' (' + storeDiv.day_name + ')',\n                            href: '/' + storeDiv.store_id + '/' + storeDiv.division_id,\n                        }\n                    ));\n                    setStoreDivisionArr(storeDivArray);\n                })\n                .catch(error => console.log(error));\n        }\n    }, [currentSeasonId]);\n\n    return (\n        <div className=\"row mt-1 mb-4\">\n            <div className=\"col-12 justify-content-center text-center\">\n                <NavButton buttonText=\"Standings\" url=\"/standings\" />\n                <NavDropdown buttonText=\"Results +\" urlPrefix=\"/results\" listItems={storeDivisionArr} />\n                {displaySchedule === 1 &&\n                    <NavDropdown buttonText=\"Schedule +\" urlPrefix=\"/schedule\" listItems={storeDivisionArr} />\n                }\n            </div >\n        </div >\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './css/footer.css';\n\nfunction Footer() {\n    return (\n        <div className=\"row mt-3 bg-footer\">\n            <div className=\"col-6 text-center p-3 border-right\">\n                <p className=\"mb-3\"><b>Brought to you by:</b></p>\n                <p className=\"mb-1\"><a href=\"https://www.winkinglizard.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Winking Lizard Tavern</a></p>\n                <p className=\"mb-1 small\">and</p>\n                <p className=\"m-0\"><a href=\"http://www.bellmusicco.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Bell Music Company</a></p>\n            </div>\n            <div className=\"col-6 text-center p-3 small border-left\">\n                <h5 className=\"mb-5\"><a href=\"mailto:ktaylor@bellmusicco.com\">Contact Us</a></h5>\n                <p>&copy; 2010 Skeeball World Tour</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/home';\nimport Rules from './pages/rules/rules';\nimport Standings from './pages/standings/standings';\nimport Search from './pages/search/search';\nimport Champions from './pages/champions/champions';\nimport Players from './pages/players/players';\nimport Teams from './pages/teams/teams';\nimport Results from './pages/results/results';\nimport Schedule from './pages/schedule/schedule';\nimport AllTime from './pages/allTime/allTime';\nimport Leaders from './pages/leaders/leaders';\nimport Qualifiers from './pages/qualifiers/qualifiers';\nimport NoMatch from './pages/noMatch/noMatch';\nimport Header from './components/header/header';\nimport NavBar from './components/navbar/navbar';\nimport Footer from './components/footer/footer';\nimport SettingsContext from './context/settingsContext';\nimport axios from 'axios';\nimport './css/style.css';\nimport './css/my_style.css';\n\nexport default function App() {\n    const [settings, setSettings] = useState({});\n\n    useEffect(() => {\n        axios.get('/api/settings')\n            .then((response) => {\n                response.data[0] ? setSettings(response.data[0]) : setSettings({});\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"container border bg-white\">\n                <SettingsContext.Provider value={settings}>\n                    <Header />\n                    <NavBar />\n                    <Switch>\n                        <Route exact path=\"/\"><Home /></Route>\n                        <Route exact path=\"/rules\" component={Rules} />\n                        <Route exact path=\"/standings\" component={Standings} />\n                        <Route exact path=\"/teams/:teamid\" component={Teams} />\n                        <Route exact path=\"/players/:playerid\" component={Players} />\n                        <Route exact path=\"/results/:storeid/:divisionid/:seasonid?\" component={Results} />\n                        <Route exact path=\"/schedule/:storeid/:divisionid/:seasonid?\" component={Schedule} />\n                        <Route exact path=\"/leaders\" component={Leaders} />\n                        <Route exact path=\"/all-time\" component={AllTime} />\n                        <Route exact path=\"/qualifiers\" component={Qualifiers} />\n                        <Route exact path=\"/champions\" component={Champions} />\n                        <Route path=\"/search/:searchstring\" component={Search} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                    <Footer />\n                </SettingsContext.Provider>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/loading.22c1253b.gif\";","module.exports = __webpack_public_path__ + \"static/media/skeeball_logo.102ce1b8.png\";"],"sourceRoot":""}