{"version":3,"sources":["context/settingsContext.js","pages/home/home.js","components/pageHeading/pageHeading.js","components/loading/loading.js","pages/rules/rules.js","components/seasonDropdown/seasonDropdown.js","components/standingsTables/subcomponents/standingsRow/standingsRow.js","components/standingsTables/standingsTables.js","pages/standings/standings.js","pages/search/search.js","pages/champions/champions.js","components/statsBlock/subcomponents/statsBlockItem/statsBlockItem.js","components/statsBlock/statsBlock.js","pages/players/players.js","components/resultsDiv/subcomponents/resultsThead/resultsThead.js","components/resultsDiv/subcomponents/resultsTbody/resultsTbody.js","components/resultsDiv/subcomponents/resultsTfoot/resultsTfoot.js","components/resultsDiv/resultsDiv.js","pages/teams/teams.js","pages/results/results.js","components/scheduleTable/subcomponents/scheduleRow/scheduleRow.js","components/scheduleTable/scheduleTable.js","pages/schedule/schedule.js","components/numLeadersDropdown/numLeadersDropdown.js","pages/allTime/allTime.js","components/leadersTable/leadersTable.js","pages/leaders/leaders.js","pages/qualifiers/qualifiers.js","pages/noMatch/noMatch.js","components/header/subcomponents/searchBar/searchBar.js","components/header/subcomponents/headerNav/headerNav.js","components/header/subcomponents/joinFun/joinFun.js","components/header/header.js","components/navbar/subcomponents/navDropdown/navDropdown.js","components/navbar/subcomponents/navButton/navButton.js","components/navbar/navbar.js","components/footer/footer.js","App.js","index.js","components/header/images/skeeball_logo.png"],"names":["SettingsContext","createContext","Home","settings","useContext","showRegButton","show_reg_button","regButtonUrl","reg_button_url","regButtonText","reg_button_text","useState","newsArr","setNewsArr","errorMsg","undefined","isLoaded","newsStatus","setNewsStatus","useEffect","axios","get","then","response","data","catch","error","console","log","className","href","src","alt","ReactHtmlParser","length","map","news","i","key","page_id","content_heading","text_date1","page_content","PageHeading","props","text","Loading","Rules","status","rules","setRules","Dropdown","currentSeason","buttonText","listItems","handleSeasonId","season_name","season_year","item","season_id","onClick","StandingsRow","standingsRowData","standing","standingsId","teamId","teamName","wins","losses","ties","totalPoints","StandingsTables","standingsArr","standings","storeDivision","storeCity","dayName","standingsList","Standings","currentSeasonId","current_season_id","seasonId","setSeasonId","querySeasonId","seasonName","setSeasonName","setStandings","seasons","setSeasons","seasonArray","season","year","Search","searchstring","useParams","playerArray","setPlayerArray","teamArray","setTeamArray","player","player_id","full_name","cities","team","team_id","team_name","Champions","champions","setChampions","champion","tourny_team_id","comments","store_city","StatsBlockItem","stats","stat","index","StatsBlock","Players","playerid","playerNameStores","setPlayerNameStores","playerNameStoresStatus","setPlayerNameStoresStatus","currentViewStores","setCurrentViewStores","currentViewStoresStatus","setCurrentViewStoresStatus","playerSeasons","setPlayerSeasons","playerSeasonsStatus","setPlayerSeasonsStatus","playerStats","setPlayerStats","playerStatsStatus","setPlayerStatsStatus","playerResults","setPlayerResults","playerResultsStatus","setPlayerResultsStatus","stores","formattedPlayerStats","formattedPlayerResults","game","result","id","week_id","scores","score","total","ResultsThead","ResultsTbody","players","name","total_points","ResultsTfoot","gameTotals","gameResults","teamTotal","ResultsDiv","results","date","away_team","game_totals","game_results","team_total","colSpan","home_team","Teams","teamid","teamNameStores","setTeamNameStores","teamNameStoresStatus","setTeamNameStoresStatus","teamSeasons","setTeamSeasons","teamSeasonsStatus","setTeamSeasonsStatus","teamStats","setTeamStats","teamStatsStatus","setTeamStatsStatus","teamSchedule","setTeamSchedule","teamScheduleStatus","setTeamScheduleStatus","teamPlayers","setTeamPlayers","teamPlayersStatus","setTeamPlayersStatus","teamResults","setTeamResults","teamResultsStatus","setTeamResultsStatus","one_game_low","Number","one_game_avg","toFixed","one_game_high","ten_game_low","ten_game_avg","ten_game_high","games_played","avg_score","schedule","away_team_id","away_team_name","home_team_id","home_team_name","alley","start_time","week_date1","Results","storeid","divisionid","setResults","resultsStatus","setResultsStatus","store","setStore","storeStatus","setStoreStatus","resultSeasons","setResultSeasons","resultSeasonsStatus","setResultSeasonsStatus","store_id","division_id","store_name","day_name","ScheduleRow","weekId","matchup","ScheduleTable","schedules","week","matchups","Schedule","scheduleArray","setScheduleArray","scheduleArrayStatus","setScheduleArrayStatus","scheduleSeasons","setScheduleSeasons","scheduleSeasonsStatus","setScheduleSeasonsStatus","NumLeadersDropdown","numLeaders","numLeadersArray","setNumLeaders","defaultValue","leaders","value","AllTime","LeadersTable","heading","subHeading","columnName","columnData","format","leadersObj","leader","rank","field_id","field_name","numAtTieValue","tieValue","Leaders","defaultNumLeaders","num_leaders","queryNumLeaders","indAvgLeaders","setIndAvgLeaders","indAvgLeadersStatus","setIndAvgLeadersStatus","indOneGameLeaders","setIndOneGameLeaders","indOneGameLeadersStatus","setIndOneGameLeadersStatus","indTenGameLeaders","setIndTenGameLeaders","indTenGameLeadersStatus","setIndTenGameLeadersStatus","teamAvgLeaders","setTeamAvgLeaders","teamAvgLeadersStatus","setTeamAvgLeadersStatus","teamOneGameLeaders","setTeamOneGameLeaders","teamOneGameLeadersStatus","setTeamOneGameLeadersStatus","teamTenGameLeaders","setTeamTenGameLeaders","teamTenGameLeadersStatus","setTeamTenGameLeadersStatus","leadersSeasons","setLeadersSeasons","leadersSeasonsStatus","setLeadersSeasonsStatus","Qualifers","NoMatch","SearchBar","searchInput","setSearchInput","submitted","setSubmitted","onSubmit","e","preventDefault","type","maxLength","placeholder","onChange","event","target","to","HeaderNav","JoinFun","text_box_heading","text_box_text","Header","skeeballLogo","NavDropdown","data-toggle","urlPrefix","NavButton","url","NavBar","displaySchedule","display_schedule","storeDivisionArr","setStoreDivisionArr","storeDivArray","storeDiv","store_division","Footer","rel","App","setSettings","Provider","exact","path","component","Qualifiers","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6eaea903.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst SettingsContext = createContext({});\n\nexport default SettingsContext;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport SettingsContext from '../../context/settingsContext';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\n\nfunction Home() {\n    const settings = useContext(SettingsContext);\n\n    const showRegButton = settings.show_reg_button;\n    const regButtonUrl = settings.reg_button_url;\n    const regButtonText = settings.reg_button_text;\n\n    const [newsArr, setNewsArr] = useState([]);\n    const [newsStatus, setNewsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n    const [newsCounter, setNewsCounter] = useState(0);\n\n    useEffect(() => {\n        axios.get('/api/pages/homepage-news')\n            .then((response) => {\n                setNewsArr(response.data);\n                setNewsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setNewsStatus({ errorMsg: 'An error occurred fetching league news!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <div>\n            {showRegButton === 1 && regButtonUrl && regButtonText &&\n                <div>\n                    <div className=\"text-center\">\n                        <a href={regButtonUrl}><img src=\"/images/register_now.jpg\" alt=\"REGISTER NOW!\" /></a>\n                        {ReactHtmlParser(regButtonText)}\n                    </div>\n                </div>\n            }\n\n            {!newsStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : newsArr && newsArr.length > 0\n                    ? <Fragment>\n                        {newsArr.map((news, i) => (\n                            <div key={news.page_id}>\n                                {i > 0 && <hr className=\"mt-4 mb-4\" />}\n                                <h5 className=\"text-danger mt-1 mb-0\">{news.content_heading}</h5>\n                                <p><span className=\"small\">{news.text_date1}</span></p>\n                                {ReactHtmlParser(news.page_content)}\n                            </div>\n                        ))}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see league news!</div>\n\n            }\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeading = (props) => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center\">{props.text}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nPageHeading.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageHeading;\n","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className=\"text-center\">\n            <img src={'/images/loading.gif'} alt={'Loading'} />\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Rules = () => {\n    const [rules, setRules] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    useEffect(() => {\n        axios.get('/api/pages/rules')\n            .then((response) => {\n                setRules({\n                    data: response.data[0],\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setRules({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching league rules!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            {!rules.status.isLoaded\n                ? <Loading />\n                : rules.data\n                    ? <Fragment>\n                        <PageHeading text={rules.data.content_heading} />\n                        {ReactHtmlParser(rules.data.page_content)}\n                    </Fragment>\n                    : !rules.status.errorMsg\n                        ? <div className=\"text-center empty-result\">Please check back again soon to see the rules!</div>\n                        : <span className=\"empty-result\">{rules.status.errorMsg}</span>\n\n            }\n        </Fragment>\n    );\n};\n\nexport default Rules;\n","import React, { Fragment } from 'react';\nimport './css/seasonDropdown.css';\nimport PropTypes from 'prop-types';\n\nfunction Dropdown({ currentSeason, buttonText, listItems, handleSeasonId }) {\n    return (\n        <Fragment>\n            {currentSeason &&\n                <Fragment>\n                    <span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentSeason.season_name}, {currentSeason.season_year}</span>\n                </Fragment>\n            }\n            <div className=\"dropdown ml-2\">\n                <button className=\"dropbtn\">{buttonText}<i className=\"down\"></i></button>\n                <ul className=\"dropdown-content\">\n                    {listItems.map(item => (\n                        <Fragment key={item.season_id}>\n                            {currentSeason && (item.season_id === currentSeason.season_id)\n                                ? <li className=\"viewing\">{item.text}</li>\n                                : <li onClick={() => handleSeasonId(item.season_id)}>{item.text}</li>\n                            }\n                        </Fragment>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n}\n\nDropdown.propTypes = {\n    currentSeason: PropTypes.object,\n    buttonText: PropTypes.string,\n    listItems: PropTypes.array,\n    handleSeasonId: PropTypes.func,\n};\n\nexport default Dropdown;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StandingsRow = ({ standingsRowData }) => {\n    return (\n        <Fragment>\n            {standingsRowData.map((standing) => (\n                <tr key={standing.standingsId}>\n                    <td className=\"text-left\"><a href={'/teams/' + standing.teamId}>{standing.teamName}</a></td>\n                    <td>{standing.wins}</td>\n                    <td>{standing.losses}</td>\n                    <td>{standing.ties}</td>\n                    <td>{standing.totalPoints}</td>\n                </tr>\n            ))}\n        </Fragment>\n    );\n};\n\nStandingsRow.propTypes = {\n    standingsRowData: PropTypes.array,\n};\n\nexport default StandingsRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport StandingsRow from './subcomponents/standingsRow/standingsRow';\n\nconst StandingsTables = ({ standingsArr }) => {\n    return (\n        <Fragment>\n            {standingsArr.map(standings => (\n                <div key={standings.storeDivision}>\n                    <h5 className=\"text-center\">{standings.storeCity} - {standings.dayName}</h5>\n                    <div className=\"d-flex justify-content-center mb-4\">\n                        <div className=\"min-w-50 mx-auto table-wrapper\">\n                            <table className=\"table table-bordered mb-4 text-center\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th className=\"text-left\">TEAM</th>\n                                        <th>W</th>\n                                        <th>L</th>\n                                        <th>T</th>\n                                        <th>TOTAL POINTS</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <StandingsRow standingsRowData={standings.standingsList} />\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nStandingsTables.propTypes = {\n    standingsArr: PropTypes.array,\n};\n\nexport default StandingsTables;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport StandingsTables from '../../components/standingsTables/standingsTables';\nimport Loading from '../../components/loading/loading';\n\nexport default function Standings() {\n    const { current_season_id: currentSeasonId } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [standings, setStandings] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/standings/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the standings!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    if (response.data[0]) {\n                        setSeasonName({\n                            season_id: querySeasonId,\n                            season_name: response.data[0].season_name,\n                            season_year: response.data[0].year,\n                        });\n                    } else {\n                        setSeasonName(null);\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/standings/seasons/' + querySeasonId)\n                .then((response) => {\n                    setStandings({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStandings({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the standings!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Standings\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-12 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Standings From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            {!standings.status.isLoaded\n                ? <Loading />\n                : standings.data && standings.data.length > 0\n                    ? <StandingsTables standingsArr={standings.data} />\n                    : standings.data\n                        ? <span className=\"empty-result\">There are no standings for this season!</span>\n                        : <span className=\"empty-result\">{standings.status.errorMsg}</span>\n            }\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nexport default function Search() {\n    const { searchstring } = useParams();\n    const [playerArray, setPlayerArray] = useState([]);\n    const [teamArray, setTeamArray] = useState([]);\n    useEffect(() => {\n        axios.get('/api/searches/players/' + searchstring)\n            .then((response) => {\n                setPlayerArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        axios.get('/api/searches/teams/' + searchstring)\n            .then((response) => {\n                setTeamArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [searchstring]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Search Results\" />\n            <p className=\"text-center\"><b>Search Results for:</b> {searchstring}</p>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Player Matches:</b> {playerArray.length}</p>\n                    {playerArray.map(player => (\n                        <p key={player.player_id}><a href={'/players/' + player.player_id}>{player.full_name}</a> ({player.cities})</p>\n                    ))}\n                </div>\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Team Matches:</b> {teamArray.length}</p>\n                    {teamArray.map(team => (\n                        <p key={team.team_id}><a href={'/teams/' + team.team_id}>{team.team_name}</a> ({team.cities})</p>\n                    ))}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Champions = () => {\n    const [champions, setChampions] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    useEffect(() => {\n        axios.get('/api/seasons/champions')\n            .then((response) => {\n                setChampions({\n                    data: response.data,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setChampions({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching champions!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Champions\" />\n            {!champions.status.isLoaded\n                ? <Loading />\n                : champions.data && champions.data.length > 0\n                    ? <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <table className=\"table table-bordered table-hover\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th>Season</th>\n                                        <th>Champion</th>\n                                        <th>Store</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {champions.data.map((champion) => (\n                                        <tr key={champion.season_id}>\n                                            <td>{champion.season_name}-{champion.year}</td>\n                                            <td><a href={'/teams/' + champion.tourny_team_id}>{champion.team_name}</a>{champion.comments.length > 0 && <span className=\"small ml-2\">*({champion.comments})</span>}</td>\n                                            <td>{champion.store_city}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    : champions.data\n                        ? <span className=\"empty-result\">There are no champions to display!</span>\n                        : <span className=\"empty-result\">{champions.status.errorMsg}</span>\n            }\n        </Fragment>\n    );\n};\n\nexport default Champions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './css/statsBlockItem.css';\n\nconst StatsBlockItem = (props) => {\n    return (\n        props.stats.map((stat, index) => (\n            <tr key={index}>\n                <td className=\"bg-stat-heading font-weight-bolder text-right\">{stat.text}</td>\n                <td className=\"text-center px-4\">{stat.data}</td>\n            </tr>\n        ))\n    );\n};\n\nStatsBlockItem.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatsBlockItem from './subcomponents/statsBlockItem/statsBlockItem';\n\nconst StatsBlock = (props) => {\n    return (\n        <table className=\"table table-bordered table-hover\">\n            <tbody>\n                <StatsBlockItem stats={props.stats} />\n            </tbody>\n        </table>\n    );\n};\n\nStatsBlock.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlock;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nconst Players = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { playerid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [playerNameStores, setPlayerNameStores] = useState(null);\n    const [playerNameStoresStatus, setPlayerNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerSeasons, setPlayerSeasons] = useState(null);\n    const [playerSeasonsStatus, setPlayerSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerStats, setPlayerStats] = useState(null);\n    const [playerStatsStatus, setPlayerStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerResults, setPlayerResults] = useState(null);\n    const [playerResultsStatus, setPlayerResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/players/' + playerid + '/name-store')\n            .then((response) => {\n                response.data[0] ? setPlayerNameStores(response.data[0]) : setPlayerNameStores([]);\n                setPlayerNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerNameStores(null);\n                setPlayerNameStoresStatus({ errorMsg: 'An error occurred fetching info for this Player!', isLoaded: true });\n            });\n        axios.get('/api/players/' + playerid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setPlayerSeasons(seasonArray);\n                setPlayerSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerSeasons(null);\n                setPlayerSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this player!', isLoaded: true });\n            });\n    }, [playerid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/players/' + playerid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/players/' + playerid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data) {\n                        setPlayerStats(response.data.formattedPlayerStats);\n                        setPlayerResults(response.data.formattedPlayerResults);\n                    } else {\n                        setPlayerStats([]);\n                        setPlayerResults([]);\n                    }\n                    setPlayerStatsStatus({ errorMsg: undefined, isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setPlayerStats(null);\n                    setPlayerResults(null);\n                    setPlayerStatsStatus({ errorMsg: 'An error occurred fetching stats for this Player!', isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: 'An error occurred fetching results for this Player!', isLoaded: true });\n                });\n        }\n    }, [playerid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Player Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {playerNameStoresStatus.isLoaded && playerNameStores &&\n                        <div className=\"mb-3\">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Player: </span>{playerNameStores.full_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {playerNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {playerSeasonsStatus.isLoaded && playerSeasons && playerSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={playerSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto\">\n                    {!playerStatsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerStats && playerStats.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                <StatsBlock stats={playerStats} />\n                            </Fragment>\n                            : playerStats\n                                ? <span className=\"empty-result\">There are no player stats for this season!</span>\n                                : <span className=\"empty-result\">{playerStatsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto table-wrapper\">\n                    {!playerResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerResults && playerResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Week by Week Results</h5>\n                                <table className=\"table table-bordered table-hover mb-0\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th>Week # - Team</th>\n                                            {gamesArray.map((game, i) => (\n                                                <th key={i} className=\"text-center\">{game}</th>\n                                            ))}\n                                            <th className=\"text-center\">Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {playerResults.map((result) => (\n                                            <tr key={result.id}>\n                                                <td>{result.week_id} - <a href={'/teams/' + result.team_id}>{result.team_name}</a></td>\n                                                {result.scores.map((score, index) => (\n                                                    <td key={index} className=\"text-center\">{score}</td>\n                                                ))}\n                                                <td className=\"text-center\">{result.total}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : playerResults\n                                ? <span className=\"empty-result\">There are no player results for this season!</span>\n                                : <span className=\"empty-result\">{playerResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n};\n\nexport default Players;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsThead = ({ teamId, teamName, wins, losses, ties }) => {\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td><a href={'/teams/' + teamId}>{teamName}</a> (<span className={'text-' + (wins > losses ? 'success' : (wins < losses ? 'danger' : 'primary'))}>{wins}-{losses}-{ties}</span>)</td>\n                {gamesArray.map((game, i) => (\n                    <td key={i} className=\"text-center\">{game}</td>\n                ))}\n                <td className=\"text-center\">Total</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsThead.propTypes = {\n    teamId: PropTypes.number,\n    teamName: PropTypes.string,\n    wins: PropTypes.number,\n    losses: PropTypes.number,\n    ties: PropTypes.number,\n};\n\nexport default ResultsThead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTbody = ({ players }) => {\n    return (\n        <tbody>\n            {players.map((player, index) => (\n                <tr key={index} className=\"bg-white\">\n                    <td><a href={'/players/' + player.player_id}>{player.name}</a></td>\n                    {player.scores.map((score, i) => (\n                        <td key={i} className=\"text-center\">{score}</td>\n                    ))}\n                    <td className=\"text-center\">{player.total_points}</td>\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nResultsTbody.propTypes = {\n    players: PropTypes.array,\n};\n\nexport default ResultsTbody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTfoot = ({ gameTotals, gameResults, teamTotal }) => {\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td>Total</td>\n                {gameTotals.map((total, i) => (\n                    <td key={i} className=\"text-center\"><span className={'text-' + (gameResults[i] === 'w' ? 'success' : (gameResults[i] === 'l' ? 'danger' : 'primary'))}>{total}</span></td>\n                ))}\n                <td className=\"text-center\">{teamTotal}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsTfoot.propTypes = {\n    gameTotals: PropTypes.array,\n    gameResults: PropTypes.array,\n    teamTotal: PropTypes.number,\n};\n\nexport default ResultsTfoot;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsThead from './subcomponents/resultsThead/resultsThead';\nimport ResultsTbody from './subcomponents/resultsTbody/resultsTbody';\nimport ResultsTfoot from './subcomponents/resultsTfoot/resultsTfoot';\n\nconst ResultsDiv = ({ results }) => {\n    return (\n        <Fragment>\n            {results.map((result) => (\n                <Fragment key={result.id}>\n                    <h5 className=\"text-center text-success\">Week {result.week_id} ({result.date})</h5>\n                    <div className=\"p-1 mb-4 border border-secondary table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-1\">\n                            <ResultsThead teamId={result.away_team.team_id} teamName={result.away_team.team_name} wins={result.away_team.wins} losses={result.away_team.losses} ties={result.away_team.ties} />\n                            <ResultsTbody players={result.away_team.players} />\n                            <ResultsTfoot gameTotals={result.away_team.game_totals} gameResults={result.away_team.game_results} teamTotal={result.away_team.team_total} />\n                            <tbody><tr><td colSpan=\"12\" className=\"border-0\"></td></tr></tbody>\n                            <ResultsThead teamId={result.home_team.team_id} teamName={result.home_team.team_name} wins={result.home_team.wins} losses={result.home_team.losses} ties={result.home_team.ties} />\n                            <ResultsTbody players={result.home_team.players} />\n                            <ResultsTfoot gameTotals={result.home_team.game_totals} gameResults={result.home_team.game_results} teamTotal={result.home_team.team_total} />\n                        </table>\n                    </div>\n                </Fragment>\n            ))}\n        </Fragment>\n    );\n};\n\nResultsDiv.propTypes = {\n    results: PropTypes.array,\n};\n\nexport default ResultsDiv;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nexport default function Teams() {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { teamid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [teamNameStores, setTeamNameStores] = useState(null);\n    const [teamNameStoresStatus, setTeamNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamSeasons, setTeamSeasons] = useState(null);\n    const [teamSeasonsStatus, setTeamSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamStats, setTeamStats] = useState(null);\n    const [teamStatsStatus, setTeamStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamSchedule, setTeamSchedule] = useState(null);\n    const [teamScheduleStatus, setTeamScheduleStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamPlayers, setTeamPlayers] = useState(null);\n    const [teamPlayersStatus, setTeamPlayersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamResults, setTeamResults] = useState(null);\n    const [teamResultsStatus, setTeamResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/teams/' + teamid + '/store-name')\n            .then((response) => {\n                response.data[0] ? setTeamNameStores(response.data[0]) : setTeamNameStores([]);\n                setTeamNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamNameStores(null);\n                setTeamNameStoresStatus({ errorMsg: 'An error occurred fetching info for this team!', isLoaded: true });\n            });\n        axios.get('/api/teams/' + teamid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setTeamSeasons(seasonArray);\n                setTeamSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamSeasons(null);\n                setTeamSeasonsStatus({ errorMsg: 'An error occurred fetching stats for this team!', isLoaded: true });\n            });\n    }, [teamid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/teams/' + teamid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data[2][0]) {\n                        setTeamStats([\n                            { text: 'Record:', data: response.data[2][0].wins + '-' + response.data[2][0].losses + '-' + response.data[2][0].ties },\n                            { text: 'Total Points:', data: response.data[2][0].total_points },\n                            { text: '1-Game Low:', data: response.data[2][0].one_game_low },\n                            { text: '1-Game Avg:', data: Number(response.data[2][0].one_game_avg).toFixed(1) },\n                            { text: '1-Game High:', data: response.data[2][0].one_game_high },\n                            { text: '10-Game Low:', data: response.data[2][0].ten_game_low },\n                            { text: '10-Game Avg:', data: Number(response.data[2][0].ten_game_avg).toFixed(1) },\n                            { text: '10-Game High:', data: response.data[2][0].ten_game_high },\n                        ]);\n                    } else {\n                        setTeamStats([]);\n                    }\n                    setTeamStatsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamStats(null);\n                    setTeamStatsStatus({ errorMsg: 'An error occurred fetching stats for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/current-schedule/seasons/' + querySeasonId)\n                .then((response) => {\n                    response.data[2] ? setTeamSchedule(response.data[2]) : setTeamSchedule([]);\n                    setTeamScheduleStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamSchedule(null);\n                    setTeamScheduleStatus({ errorMsg: 'An error occurred fetching the schedule for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/players/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamPlayers(response.data);\n                    setTeamPlayersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamPlayers(null);\n                    setTeamPlayersStatus({ errorMsg: 'An error occurred fetching players for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setTeamResults(response.data) : setTeamResults([]);\n                    setTeamResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamResults(null);\n                    setTeamResultsStatus({ errorMsg: 'An error occurred fetching the schedule for this team!', isLoaded: true });\n                });\n        }\n    }, [teamid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Team Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {teamNameStoresStatus.isLoaded && teamNameStores &&\n                        <div className=\"mb-3 \">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Team: </span>{teamNameStores.team_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {teamNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {teamSeasonsStatus.isLoaded && teamSeasons && teamSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={teamSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamPlayersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamPlayers && teamPlayers.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Players</h5>\n                                        <table className=\"table table-bordered table-hover\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th>Player</th>\n                                                    <th className=\"text-center\">Games</th>\n                                                    <th className=\"text-center\">Average</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {teamPlayers.map((player) => (\n                                                    <tr key={player.player_id}>\n                                                        <td><a href={'/players/' + player.player_id}>{player.full_name}</a></td>\n                                                        <td className=\"text-center\">{player.games_played}</td>\n                                                        <td className=\"text-center\">{Number(player.avg_score).toFixed(1)}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </Fragment>\n                                    : teamPlayers\n                                        ? <span className=\"empty-result\">There are no players on this team in the selected season!</span>\n                                        : <span className=\"empty-result\">{teamPlayersStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamStatsStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamStats && teamStats.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                        <StatsBlock stats={teamStats} />\n                                    </Fragment>\n                                    : teamStats\n                                        ? <span className=\"empty-result\">There are no team stats for the selected season!</span>\n                                        : <span className=\"empty-result\">{teamStatsStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamScheduleStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamSchedule && teamSchedule.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Schedule</h5>\n                                <table className=\"table table-bordered table-hover\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th className=\"text-center\">WEEK #</th>\n                                            <th>Away Team</th>\n                                            <th>Home Team</th>\n                                            <th className=\"text-center\">Alley</th>\n                                            <th>Start Time</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {teamSchedule.map((schedule) => (\n                                            <tr key={schedule.week_id} className=\"bg-white\">\n                                                <td className=\"text-center\">{schedule.week_id}</td>\n                                                <td><a href={'/teams/' + schedule.away_team_id}>{schedule.away_team_name}</a></td>\n                                                <td><a href={'/teams/' + schedule.home_team_id}>{schedule.home_team_name}</a></td>\n                                                <td className=\"text-center\">{schedule.alley}</td>\n                                                <td>{schedule.start_time}</td>\n                                                <td>{schedule.week_date1}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : teamSchedule\n                                ? <span className=\"empty-result\">There is no schedule for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamScheduleStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamResults && teamResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Weekly Results</h5>\n                                <ResultsDiv results={teamResults} />\n                            </Fragment>\n                            : teamResults\n                                ? <span className=\"empty-result\">There are no results for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Results = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [results, setResults] = useState(null);\n    const [resultsStatus, setResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [resultSeasons, setResultSeasons] = useState(null);\n    const [resultSeasonsStatus, setResultSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setResultSeasons(seasonArray);\n                setResultSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setResultSeasons(null);\n                setResultSeasonsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore(null);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching the store name!', isLoaded: true });\n                });\n            axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setResults(response.data) : setResults(null);\n                    setResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setResults(null);\n                    setResultsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Results\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {resultSeasonsStatus.isLoaded && resultSeasons && resultSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={resultSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!resultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : results && results.length > 0\n                            ? <ResultsDiv results={results} />\n                            : results\n                                ? <span className=\"empty-result\">There are no results for this season!</span>\n                                : <span className=\"empty-result\">{resultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScheduleRow = ({ weekId, matchup }) => {\n    return (\n        <tr key={`${weekId}${matchup.home_team_id}`} className=\"bg-white\">\n            <td><a href={'/teams/' + matchup.away_team_id}>{matchup.away_team}</a></td>\n            <td><a href={'/teams/' + matchup.home_team_id}>{matchup.home_team}</a></td>\n            <td className=\"text-center\">{matchup.alley}</td>\n            <td>{matchup.start_time}</td>\n        </tr>\n    );\n};\n\nScheduleRow.propTypes = {\n    weekId: PropTypes.number,\n    matchup: PropTypes.object,\n};\n\nexport default ScheduleRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ScheduleRow from './subcomponents/scheduleRow/scheduleRow';\n\nconst ScheduleTable = ({ schedules }) => {\n    return (\n        <Fragment>\n            {schedules.map((week) => (\n                <div key={week.week_id} className=\"mb-5\">\n                    <h5 className=\"text-center text-success mb-4\">Week {week.week_id} ({week.week_date1})</h5>\n                    <div className=\"mb-3 table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-2\">\n                            <thead>\n                                <tr className=\"bg-gray6\">\n                                    <th>Away Team</th>\n                                    <th>Home Team</th>\n                                    <th className=\"text-center\">Alley</th>\n                                    <th>Start Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {week.matchups.map((matchup) => (\n                                    <Fragment key={`${week.week_id}${matchup.home_team_id}`}>\n                                        <ScheduleRow weekId={week.week_id} matchup={matchup} />\n                                    </Fragment>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nScheduleTable.propTypes = {\n    schedules: PropTypes.array,\n};\n\nexport default ScheduleTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport ScheduleTable from '../../components/scheduleTable/scheduleTable';\n\nconst Schedule = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [scheduleArray, setScheduleArray] = useState(null);\n    const [scheduleArrayStatus, setScheduleArrayStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [scheduleSeasons, setScheduleSeasons] = useState(null);\n    const [scheduleSeasonsStatus, setScheduleSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/schedules/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setScheduleSeasons(seasonArray);\n                setScheduleSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setScheduleSeasons(null);\n                setScheduleSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this store!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore([]);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching info for this store!', isLoaded: true });\n                });\n\n            axios('/api/schedules/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    setScheduleArray(response.data);\n                    setScheduleArrayStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setScheduleArray(null);\n                    setScheduleArrayStatus({ errorMsg: 'An error occurred fetching the schedule for this store!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Schedule\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {scheduleSeasonsStatus.isLoaded && scheduleSeasons && scheduleSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Schedule From\" listItems={scheduleSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!scheduleArrayStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : scheduleArray && scheduleArray.length > 0\n                            ? <Fragment>\n                                <ScheduleTable schedules={scheduleArray} />\n                            </Fragment>\n                            : scheduleArray\n                                ? <span className=\"empty-result\">There is no schedule available for this season!</span>\n                                : <span className=\"empty-result\">{scheduleArrayStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Schedule;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumLeadersDropdown({ numLeaders, numLeadersArray, setNumLeaders }) {\n    return (\n        <Fragment>\n            {numLeadersArray && numLeadersArray.length > 0 &&\n                <span className=\"small\">Currently showing top:</span>\n            }\n            <select className=\"ml-2\" defaultValue={numLeaders}>\n                {numLeadersArray.map(leaders => (\n                    <Fragment key={leaders}>\n                        {numLeaders === leaders\n                            ? <option>{leaders}</option>\n                            : <option value={leaders} onClick={() => setNumLeaders(leaders)}>{leaders}</option>\n                        }\n                    </Fragment>\n                ))}\n            </select>\n        </Fragment>\n    );\n}\n\nNumLeadersDropdown.propTypes = {\n    numLeaders: PropTypes.number,\n    numLeadersArray: PropTypes.array,\n    setNumLeaders: PropTypes.func,\n};\n\nexport default NumLeadersDropdown;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst AllTime = () => {\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    useEffect(() => {\n\n    }, [numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default AllTime;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LeadersTable = ({ heading, subHeading, columnName, columnData, format, href, leadersObj }) => {\n    return (\n        <Fragment>\n            <div className=\"text-center mb-4\">\n                <h5 className=\"text-success mb-0\">{heading}</h5>\n                {subHeading &&\n                    <span className=\"text-secondary small\">{subHeading}</span>\n                }\n            </div>\n            <table className=\"table table-bordered table-hover mb-5\">\n                <thead>\n                    <tr className=\"bg-gray6\">\n                        <th className=\"text-center\">Rank</th>\n                        <th className=\"text-left\">{columnName}</th>\n                        <th className=\"text-center\">{columnData}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {leadersObj.leaders.map((leader) => (\n                        <tr key={leader.key}>\n                            <td className=\"text-center\">{leader.rank}</td>\n                            <td><a href={`${href}${leader.field_id}`}>{leader.field_name}</a> ({leader.store_city})</td>\n                            <td className=\"text-center\">\n                                {format === 'decimal'\n                                    ? Number(leader.data).toFixed(1)\n                                    : Number(leader.data)\n                                }\n                            </td>\n                        </tr>\n                    ))}\n                    {leadersObj.numAtTieValue > 1 &&\n                        <tr>\n                            <td></td>\n                            <td className=\"text-right text-success\">{leadersObj.numAtTieValue} tied at:</td>\n                            <td className=\"text-center\">{leadersObj.tieValue}</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nLeadersTable.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    columnName: PropTypes.string,\n    columnData: PropTypes.string,\n    format: PropTypes.string,\n    href: PropTypes.string,\n    leadersObj: PropTypes.object,\n};\n\nexport default LeadersTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport LeadersTable from '../../components/leadersTable/leadersTable';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst Leaders = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [numLeaders, setNumLeaders] = useState(null);\n    const defaultNumLeaders = settings.num_leaders;\n    const queryNumLeaders = numLeaders || defaultNumLeaders;\n    const numLeadersArray = [10, 20, 50, 100];\n\n    const [indAvgLeaders, setIndAvgLeaders] = useState(null);\n    const [indAvgLeadersStatus, setIndAvgLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [indOneGameLeaders, setIndOneGameLeaders] = useState(null);\n    const [indOneGameLeadersStatus, setIndOneGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [indTenGameLeaders, setIndTenGameLeaders] = useState(null);\n    const [indTenGameLeadersStatus, setIndTenGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamAvgLeaders, setTeamAvgLeaders] = useState(null);\n    const [teamAvgLeadersStatus, setTeamAvgLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamOneGameLeaders, setTeamOneGameLeaders] = useState(null);\n    const [teamOneGameLeadersStatus, setTeamOneGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamTenGameLeaders, setTeamTenGameLeaders] = useState(null);\n    const [teamTenGameLeadersStatus, setTeamTenGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [leadersSeasons, setLeadersSeasons] = useState(null);\n    const [leadersSeasonsStatus, setLeadersSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('//api/leaders/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setLeadersSeasons(seasonArray);\n                setLeadersSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setLeadersSeasons(null);\n                setLeadersSeasonsStatus({ errorMsg: 'An error occurred fetching leaders seasons!', isLoaded: true });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/leaders/individual/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndAvgLeaders(response.data);\n                    setIndAvgLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndAvgLeaders(null);\n                    setIndAvgLeadersStatus({ errorMsg: 'An error occurred fetching player best average leaders!', isLoaded: true });\n                });\n            axios.get('/api/leaders/individual/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndOneGameLeaders(response.data);\n                    setIndOneGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndOneGameLeaders(null);\n                    setIndOneGameLeadersStatus({ errorMsg: 'An error occurred fetching player 1-game leaders!', isLoaded: true });\n                });\n            axios.get('/api/leaders/individual/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndTenGameLeaders(response.data);\n                    setIndTenGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndTenGameLeaders(null);\n                    setIndTenGameLeadersStatus({ errorMsg: 'An error occurred fetching player 10-game leaders!', isLoaded: true });\n                });\n            axios.get('/api/leaders/team/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamAvgLeaders(response.data);\n                    setTeamAvgLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamAvgLeaders(null);\n                    setTeamAvgLeadersStatus({ errorMsg: 'An error occurred fetching team best average leaders!', isLoaded: true });\n                });\n            axios.get('/api/leaders/team/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamOneGameLeaders(response.data);\n                    setTeamOneGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamOneGameLeaders(null);\n                    setTeamOneGameLeadersStatus({ errorMsg: 'An error occurred fetching team 1-game leaders!', isLoaded: true });\n                });\n            axios.get('/api/leaders/team/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamTenGameLeaders(response.data);\n                    setTeamTenGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamTenGameLeaders(null);\n                    setTeamTenGameLeadersStatus({ errorMsg: 'An error occurred fetching team 10-game leaders!', isLoaded: true });\n                });\n        }\n    }, [querySeasonId, queryNumLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n                    Filter by: (Store / Division)\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    {queryNumLeaders &&\n                        <NumLeadersDropdown numLeaders={queryNumLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                    }\n                </div>\n                <div className=\"col-4 text-right p-2\">\n                    {leadersSeasonsStatus.isLoaded && leadersSeasons && leadersSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Leaders From\" listItems={leadersSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Individual Leaders</h3>\n                            {!indAvgLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indAvgLeaders.leaders && indAvgLeaders.numAtTieValue && (indAvgLeaders.leaders.length > 0 || indAvgLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, high season average / game\" subHeading=\"(must play in a minimum of 50% of your team's games to qualify)\" columnName=\"Player\" columnData=\"Average\" format=\"decimal\" href=\"/players/\" leadersObj={indAvgLeaders} />\n                                    : indAvgLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no player average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indAvgLeadersStatus.errorMsg}</div>\n                            }\n                            {!indOneGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indOneGameLeaders.leaders && indOneGameLeaders.numAtTieValue && (indOneGameLeaders.leaders.length > 0 || indOneGameLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 1-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indOneGameLeaders} />\n                                    : indOneGameLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no player 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indOneGameLeadersStatus.errorMsg}</div>\n                            }\n                            {!indTenGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indTenGameLeaders.leaders && indTenGameLeaders.numAtTieValue && (indTenGameLeaders.leaders.length > 0 || indTenGameLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 10-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indTenGameLeaders} />\n                                    : indTenGameLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no player 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indTenGameLeadersStatus.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Team Leaders</h3>\n                            {!teamAvgLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamAvgLeaders.leaders && teamAvgLeaders.numAtTieValue && (teamAvgLeaders.leaders.length > 0 || teamAvgLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high average\" columnName=\"Team\" columnData=\"Average\" format=\"decimal\" href=\"/teams/\" leadersObj={teamAvgLeaders} />\n                                    : teamAvgLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no team average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamAvgLeadersStatus.errorMsg}</div>\n                            }\n                            {!teamOneGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamOneGameLeaders.leaders && teamOneGameLeaders.numAtTieValue && (teamOneGameLeaders.leaders.length > 0 || teamOneGameLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 1-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamOneGameLeaders} />\n                                    : teamOneGameLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no team 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamOneGameLeadersStatus.errorMsg}</div>\n                            }\n                            {!teamTenGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamTenGameLeaders.leaders && teamTenGameLeaders.numAtTieValue && (teamTenGameLeaders.leaders.length > 0 || teamTenGameLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamTenGameLeaders} />\n                                    : teamTenGameLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no team 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamTenGameLeadersStatus.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Leaders;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Qualifers = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Tournament Qualifiers\" />\n            {seasonName &&\n                <div>\n                    {seasonName.season_name}-{seasonName.season_year}\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Qualifers;\n","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div className=\"m-5 bigger\">\n            <p className=\"text-danger\"><b>Error 404!</b></p>\n            <p>An error has occurred.</p>\n            <p>The page you are looking for does not exist!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/searchBar.css';\n\nfunction SearchBar() {\n    const [searchInput, setSearchInput] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    useEffect(() => {\n        if (submitted) {\n            setSearchInput('');\n            setSubmitted(false);\n        }\n    }, [submitted]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchInput.length > 0 && setSubmitted(true);\n    };\n\n    return (\n        <div className=\"mt-auto\">\n            <form className=\"form-searchbar\" onSubmit={handleSubmit}>\n                <input type=\"text\" maxLength=\"20\" placeholder=\"Find Player/Team\" className=\"input-searchbar\" value={searchInput} onChange={event => setSearchInput(event.target.value)} />\n                <button type=\"submit\" name=\"submit\" className=\"search-button\">Go</button>\n            </form>\n            {submitted && <Redirect to={'/search/' + searchInput} />}\n        </div>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './css/headerNav.css';\n\nconst HeaderNav = () => {\n    return (\n        <div className=\"h-nav-container\">\n            <span className=\"h-nav-burger\">&#9776;</span>\n            <ul className=\"h-nav-content\">\n                <a href=\"/champions\"><li className=\"nav-item\">Champions</li></a>\n                <a href=\"/rules\"><li className=\"nav-item\">Rules</li></a>\n                <a href=\"/leaders\"><li className=\"nav-item\">Leaders</li></a>\n                <a href=\"/all-time\"><li className=\"nav-item\">All-Time Records</li></a>\n            </ul>\n        </div>\n    );\n};\n\nexport default HeaderNav;\n","import React, { useContext } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport './css/joinFun.css';\nimport SettingsContext from '../../../../context/settingsContext';\n\nconst JoinFun = () => {\n    const settings = useContext(SettingsContext);\n\n    return (\n        <div className=\"join\">\n            {settings.text_box_heading &&\n                <div className=\"join-heading\">{settings.text_box_heading}</div>\n            }\n            {settings.text_box_text &&\n                <div>{ReactHtmlParser(settings.text_box_text)}</div>\n            }\n        </div>\n    );\n};\n\nexport default JoinFun;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/header.css';\nimport skeeballLogo from './images/skeeball_logo.png';\nimport SearchBar from './subcomponents/searchBar/searchBar';\nimport HeaderNav from './subcomponents/headerNav/headerNav';\nimport JoinFun from './subcomponents/joinFun/joinFun';\n\nfunction Header() {\n    return (\n        <div className=\"header-bg row mb-0\">\n            <div className=\"col-3 p-2 my-auto text-left\">\n                <Link to=\"/\"><img className=\"img-fluid\" src={skeeballLogo} alt=\"Skeeball World Tour\" /></Link>\n            </div>\n            <div className=\"col-6 d-flex flex-column justify-content-center align-items-center mb-2 p-0\">\n                <JoinFun />\n                <SearchBar />\n            </div>\n            <div className=\"col-3 p-2 my-auto text-right\">\n                <HeaderNav />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './css/navDropdown.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavDropdown(props) {\n    return (\n        <div className=\"navdropdown\" data-toggle=\"dropdown\">\n            <div className=\"navdropbtn\">{props.buttonText}</div>\n            <div className=\"navdropdown-content\">\n                {props.listItems.map(item => (\n                    <div className=\"item\" key={item.id}>\n                        <a href={props.urlPrefix + item.href}>{item.text}</a>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nNavDropdown.propTypes = {\n    buttonText: PropTypes.string,\n    urlPrefix: PropTypes.string,\n    listItems: PropTypes.array,\n};\n","import React from 'react';\nimport './css/navButton.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavButton(props) {\n    return (\n        <div className=\"navbutton\">\n            <a href={props.url}><div className=\"navbtn\">{props.buttonText}</div></a>\n        </div>\n    );\n}\n\nNavButton.propTypes = {\n    buttonText: PropTypes.string,\n    url: PropTypes.string,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport NavDropdown from './subcomponents/navDropdown/navDropdown';\nimport NavButton from './subcomponents/navButton/navButton';\n\nfunction NavBar() {\n    const settings = useContext(SettingsContext);\n    const currentSeasonId = settings.current_season_id;\n    const displaySchedule = settings.display_schedule;\n\n    const [storeDivisionArr, setStoreDivisionArr] = useState([]);\n\n    useEffect(() => {\n        if (currentSeasonId) {\n            axios.get('/api/schedules/navbar/' + currentSeasonId)\n                .then((response) => {\n                    const storeDivArray = response.data.map((storeDiv) => {\n                        return {\n                            id: storeDiv.store_division,\n                            text: storeDiv.store_city + ' (' + storeDiv.day_name + ')',\n                            href: '/' + storeDiv.store_id + '/' + storeDiv.division_id,\n                        };\n                    });\n                    setStoreDivisionArr(storeDivArray);\n                })\n                .catch(error => console.log(error));\n        }\n    }, [currentSeasonId]);\n\n    return (\n        <div className=\"row mt-1 mb-4\">\n            <div className=\"col-12 justify-content-center text-center\">\n                <NavButton buttonText=\"Standings\" url=\"/standings\" />\n                <NavDropdown buttonText=\"Results +\" urlPrefix=\"/results\" listItems={storeDivisionArr} />\n                {displaySchedule === 1 &&\n                    <NavDropdown buttonText=\"Schedule +\" urlPrefix=\"/schedule\" listItems={storeDivisionArr} />\n                }\n            </div >\n        </div >\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './css/footer.css';\n\nfunction Footer() {\n    return (\n        <div className=\"row mt-3 bg-footer\">\n            <div className=\"col-6 text-center p-3 border-right\">\n                <p className=\"mb-3\"><b>Brought to you by:</b></p>\n                <p className=\"mb-1\"><a href=\"https://www.winkinglizard.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Winking Lizard Tavern</a></p>\n                <p className=\"mb-1 small\">and</p>\n                <p className=\"m-0\"><a href=\"http://www.bellmusicco.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Bell Music Company</a></p>\n            </div>\n            <div className=\"col-6 text-center p-3 small border-left\">\n                <h5 className=\"mb-5\"><a href=\"mailto:ktaylor@bellmusicco.com\">Contact Us</a></h5>\n                <p>&copy; 2010 Skeeball World Tour</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/home';\nimport Rules from './pages/rules/rules';\nimport Standings from './pages/standings/standings';\nimport Search from './pages/search/search';\nimport Champions from './pages/champions/champions';\nimport Players from './pages/players/players';\nimport Teams from './pages/teams/teams';\nimport Results from './pages/results/results';\nimport Schedule from './pages/schedule/schedule';\nimport AllTime from './pages/allTime/allTime';\nimport Leaders from './pages/leaders/leaders';\nimport Qualifiers from './pages/qualifiers/qualifiers';\nimport NoMatch from './pages/noMatch/noMatch';\nimport Header from './components/header/header';\nimport NavBar from './components/navbar/navbar';\nimport Footer from './components/footer/footer';\nimport SettingsContext from './context/settingsContext';\nimport axios from 'axios';\nimport './css/style.css';\nimport './css/my_style.css';\n\nexport default function App() {\n    const [settings, setSettings] = useState({});\n\n    useEffect(() => {\n        axios.get('/api/settings')\n            .then((response) => {\n                response.data[0] ? setSettings(response.data[0]) : setSettings({});\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"container border bg-white\">\n                <SettingsContext.Provider value={settings}>\n                    <Header />\n                    <NavBar />\n                    <Switch>\n                        <Route exact path=\"/\"><Home /></Route>\n                        <Route exact path=\"/rules\" component={Rules} />\n                        <Route exact path=\"/standings\" component={Standings} />\n                        <Route exact path=\"/teams/:teamid\" component={Teams} />\n                        <Route exact path=\"/players/:playerid\" component={Players} />\n                        <Route exact path=\"/results/:storeid/:divisionid/:seasonid?\" component={Results} />\n                        <Route exact path=\"/schedule/:storeid/:divisionid/:seasonid?\" component={Schedule} />\n                        <Route exact path=\"/leaders\" component={Leaders} />\n                        <Route exact path=\"/all-time\" component={AllTime} />\n                        <Route exact path=\"/qualifiers\" component={Qualifiers} />\n                        <Route exact path=\"/champions\" component={Champions} />\n                        <Route path=\"/search/:searchstring\" component={Search} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                    <Footer />\n                </SettingsContext.Provider>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/skeeball_logo.102ce1b8.png\";"],"sourceRoot":""}