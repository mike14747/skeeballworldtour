{"version":3,"sources":["context/settingsContext.js","components/loading/images/loading.gif","components/loading/loading.js","pages/home/home.js","components/pageHeading/pageHeading.js","pages/rules/rules.js","components/seasonDropdown/seasonDropdown.js","components/standingsTables/subcomponents/standingsRow/standingsRow.js","components/standingsTables/standingsTables.js","pages/standings/standings.js","pages/search/search.js","pages/champions/champions.js","components/statsBlock/subcomponents/statsBlockItem/statsBlockItem.js","components/statsBlock/statsBlock.js","pages/players/players.js","components/resultsDiv/subcomponents/resultsThead/resultsThead.js","components/resultsDiv/subcomponents/resultsTbody/resultsTbody.js","components/resultsDiv/subcomponents/resultsTfoot/resultsTfoot.js","components/resultsDiv/resultsDiv.js","pages/teams/teams.js","pages/results/results.js","components/scheduleTable/subcomponents/scheduleRow/scheduleRow.js","components/scheduleTable/scheduleTable.js","pages/schedule/schedule.js","components/numLeadersDropdown/numLeadersDropdown.js","pages/allTime/allTime.js","components/leadersTable/leadersTable.js","pages/leaders/leaders.js","pages/qualifiers/qualifiers.js","pages/noMatch/noMatch.js","components/header/images/skeeball_logo.png","components/header/subcomponents/searchBar/searchBar.js","components/header/subcomponents/headerNav/headerNav.js","components/header/subcomponents/joinFun/joinFun.js","components/header/header.js","components/navbar/subcomponents/navDropdown/navDropdown.js","components/navbar/subcomponents/navButton/navButton.js","components/navbar/navbar.js","components/footer/footer.js","App.js","index.js"],"names":["SettingsContext","createContext","Loading","className","src","LoadingSwirly","alt","Home","settings","useContext","showRegButton","show_reg_button","regButtonUrl","reg_button_url","regButtonText","reg_button_text","useState","newsArr","setNewsArr","errorMsg","undefined","isLoaded","newsStatus","setNewsStatus","useEffect","axios","get","then","response","data","catch","error","console","log","href","ReactHtmlParser","length","map","news","i","content_heading","text_date1","page_content","page_id","PageHeading","props","text","Rules","status","rules","setRules","Dropdown","currentSeason","buttonText","listItems","handleSeasonId","season_name","season_year","item","season_id","onClick","StandingsRow","standingsRowData","standing","teamId","teamName","wins","losses","ties","totalPoints","standingsId","StandingsTables","standingsArr","standings","storeCity","dayName","standingsList","storeDivision","Standings","currentSeasonId","current_season_id","seasonId","setSeasonId","querySeasonId","seasonName","setSeasonName","setStandings","seasons","setSeasons","seasonArray","season","year","Search","searchstring","useParams","playerArray","setPlayerArray","teamArray","setTeamArray","player","player_id","full_name","cities","team","team_id","team_name","Champions","champions","setChampions","champion","tourny_team_id","comments","store_city","StatsBlockItem","stats","stat","index","StatsBlock","Players","playerid","playerNameStores","setPlayerNameStores","playerNameStoresStatus","setPlayerNameStoresStatus","currentViewStores","setCurrentViewStores","currentViewStoresStatus","setCurrentViewStoresStatus","playerSeasons","setPlayerSeasons","playerSeasonsStatus","setPlayerSeasonsStatus","playerStats","setPlayerStats","playerStatsStatus","setPlayerStatsStatus","playerResults","setPlayerResults","playerResultsStatus","setPlayerResultsStatus","stores","formattedPlayerStats","formattedPlayerResults","game","result","week_id","scores","score","total","id","ResultsThead","ResultsTbody","players","name","total_points","ResultsTfoot","gameTotals","gameResults","teamTotal","ResultsDiv","results","date","away_team","game_totals","game_results","team_total","colSpan","home_team","Teams","teamid","teamNameStores","setTeamNameStores","teamStats","setTeamStats","teamSchedule","setTeamSchedule","teamPlayers","setTeamPlayers","teamResults","setTeamResults","one_game_low","Number","one_game_avg","toFixed","one_game_high","ten_game_low","ten_game_avg","ten_game_high","games_played","avg_score","schedule","away_team_id","away_team_name","home_team_id","home_team_name","alley","start_time","week_date1","Results","storeid","divisionid","setResults","resultsStatus","setResultsStatus","store","setStore","storeStatus","setStoreStatus","resultSeasons","setResultSeasons","resultSeasonsStatus","setResultSeasonsStatus","store_id","division_id","store_name","day_name","ScheduleRow","weekId","matchup","ScheduleTable","schedules","week","matchups","Schedule","scheduleArray","setScheduleArray","scheduleArrayStatus","setScheduleArrayStatus","scheduleSeasons","setScheduleSeasons","scheduleSeasonsStatus","setScheduleSeasonsStatus","NumLeadersDropdown","numLeaders","numLeadersArray","setNumLeaders","defaultValue","leaders","value","AllTime","LeadersTable","heading","subHeading","columnName","columnData","format","leadersObj","leader","rank","field_id","field_name","key","numAtTieValue","tieValue","Leaders","defaultNumLeaders","num_leaders","queryNumLeaders","indAvgLeaders","setIndAvgLeaders","indOneGameLeaders","setIndOneGameLeaders","indTenGameLeaders","setIndTenGameLeaders","teamAvgLeaders","setTeamAvgLeaders","teamOneGameLeaders","setTeamOneGameLeaders","teamTenGameLeaders","setTeamTenGameLeaders","Qualifers","NoMatch","SearchBar","searchInput","setSearchInput","submitted","setSubmitted","onSubmit","e","preventDefault","type","maxLength","placeholder","onChange","event","target","to","HeaderNav","JoinFun","textBoxHeading","text_box_heading","textBoxText","text_box_text","data-toggle","Header","skeeballLogo","NavDropdown","urlPrefix","NavButton","url","NavBar","displaySchedule","display_schedule","storeDivisionArr","setStoreDivisionArr","storeDivArray","storeDiv","store_division","Footer","rel","App","setSettings","Provider","exact","path","component","Qualifiers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f23a837.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst SettingsContext = createContext({});\n\nexport default SettingsContext;\n","export default __webpack_public_path__ + \"static/media/loading.a688974d.gif\";","import React from 'react';\nimport LoadingSwirly from './images/loading.gif';\nimport './css/loading.css';\n\nconst Loading = () => {\n    return (\n        <div className=\"loading\">\n            <img src={LoadingSwirly} alt={'Loading'} />\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport SettingsContext from '../../context/settingsContext';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport Loading from '../../components/loading/loading';\n\nfunction Home() {\n    const settings = useContext(SettingsContext);\n\n    const showRegButton = settings.show_reg_button;\n    const regButtonUrl = settings.reg_button_url;\n    const regButtonText = settings.reg_button_text;\n\n    const [newsArr, setNewsArr] = useState([]);\n    const [newsStatus, setNewsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n    // const [newsCounter, setNewsCounter] = useState(0);\n\n    useEffect(() => {\n        axios.get('/api/pages/homepage-news')\n            .then((response) => {\n                setNewsArr(response.data);\n                setNewsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setNewsStatus({ errorMsg: 'An error occurred fetching league news!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <div>\n            {showRegButton === 1 && regButtonUrl && regButtonText &&\n                <div>\n                    <div className=\"text-center\">\n                        <a href={regButtonUrl}><img src=\"/images/register_now.jpg\" alt=\"REGISTER NOW!\" /></a>\n                        {ReactHtmlParser(regButtonText)}\n                    </div>\n                </div>\n            }\n\n            {!newsStatus.isLoaded\n                ? <Loading />\n                : newsArr && newsArr.length > 0\n                    ? <Fragment>\n                        {newsArr.map((news, i) => (\n                            <div key={news.page_id}>\n                                {i > 0 && <hr className=\"mt-4 mb-4\" />}\n                                <h5 className=\"text-danger mt-1 mb-0\">{news.content_heading}</h5>\n                                <p><span className=\"small\">{news.text_date1}</span></p>\n                                {ReactHtmlParser(news.page_content)}\n                            </div>\n                        ))}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see league news!</div>\n\n            }\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeading = (props) => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center\">{props.text}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nPageHeading.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageHeading;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Rules = () => {\n    const [rules, setRules] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    useEffect(() => {\n        axios.get('/api/pages/rules')\n            .then((response) => {\n                setRules({\n                    data: response.data[0],\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setRules({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching league rules!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            {!rules.status.isLoaded\n                ? <Loading />\n                : rules.data\n                    ? <Fragment>\n                        <PageHeading text={rules.data.content_heading} />\n                        {ReactHtmlParser(rules.data.page_content)}\n                    </Fragment>\n                    : !rules.status.errorMsg\n                        ? <div className=\"text-center empty-result\">Please check back again soon to see the rules!</div>\n                        : <span className=\"empty-result\">{rules.status.errorMsg}</span>\n\n            }\n        </Fragment>\n    );\n};\n\nexport default Rules;\n","import React, { Fragment } from 'react';\nimport './css/seasonDropdown.css';\nimport PropTypes from 'prop-types';\n\nfunction Dropdown({ currentSeason, buttonText, listItems, handleSeasonId }) {\n    return (\n        <Fragment>\n            {currentSeason &&\n                <Fragment>\n                    <span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentSeason.season_name}, {currentSeason.season_year}</span>\n                </Fragment>\n            }\n            <div className=\"dropdown ml-2\">\n                <button className=\"dropbtn\">{buttonText}<i className=\"down\"></i></button>\n                <ul className=\"dropdown-content\">\n                    {listItems.map(item => (\n                        <Fragment key={item.season_id}>\n                            {currentSeason && (item.season_id === currentSeason.season_id)\n                                ? <li className=\"viewing\">{item.text}</li>\n                                : <li onClick={() => handleSeasonId(item.season_id)}>{item.text}</li>\n                            }\n                        </Fragment>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n}\n\nDropdown.propTypes = {\n    currentSeason: PropTypes.object,\n    buttonText: PropTypes.string,\n    listItems: PropTypes.array,\n    handleSeasonId: PropTypes.func,\n};\n\nexport default Dropdown;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StandingsRow = ({ standingsRowData }) => {\n    return (\n        <Fragment>\n            {standingsRowData.map((standing) => (\n                <tr key={standing.standingsId}>\n                    <td className=\"text-left\"><a href={'/teams/' + standing.teamId}>{standing.teamName}</a></td>\n                    <td>{standing.wins}</td>\n                    <td>{standing.losses}</td>\n                    <td>{standing.ties}</td>\n                    <td>{standing.totalPoints}</td>\n                </tr>\n            ))}\n        </Fragment>\n    );\n};\n\nStandingsRow.propTypes = {\n    standingsRowData: PropTypes.array,\n};\n\nexport default StandingsRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport StandingsRow from './subcomponents/standingsRow/standingsRow';\n\nconst StandingsTables = ({ standingsArr }) => {\n    return (\n        <Fragment>\n            {standingsArr.map(standings => (\n                <div key={standings.storeDivision}>\n                    <h5 className=\"text-center\">{standings.storeCity} - {standings.dayName}</h5>\n                    <div className=\"d-flex justify-content-center mb-4\">\n                        <div className=\"min-w-50 mx-auto table-wrapper\">\n                            <table className=\"table table-bordered mb-4 text-center\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th className=\"text-left\">TEAM</th>\n                                        <th>W</th>\n                                        <th>L</th>\n                                        <th>T</th>\n                                        <th>TOTAL POINTS</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <StandingsRow standingsRowData={standings.standingsList} />\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nStandingsTables.propTypes = {\n    standingsArr: PropTypes.array,\n};\n\nexport default StandingsTables;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport StandingsTables from '../../components/standingsTables/standingsTables';\nimport Loading from '../../components/loading/loading';\n\nexport default function Standings() {\n    const { current_season_id: currentSeasonId } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [standings, setStandings] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/standings/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the standings season list!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    if (response.data[0]) {\n                        setSeasonName({\n                            season_id: querySeasonId,\n                            season_name: response.data[0].season_name,\n                            season_year: response.data[0].year,\n                        });\n                    } else {\n                        setSeasonName(null);\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/standings/seasons/' + querySeasonId)\n                .then((response) => {\n                    setStandings({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStandings({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the standings!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Standings\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-12 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Standings From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            {!standings.status.isLoaded\n                ? <Loading />\n                : standings.data && standings.data.length > 0\n                    ? <StandingsTables standingsArr={standings.data} />\n                    : standings.data\n                        ? <span className=\"empty-result\">There are no standings for this season!</span>\n                        : <span className=\"empty-result\">{standings.status.errorMsg}</span>\n            }\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nexport default function Search() {\n    const { searchstring } = useParams();\n    const [playerArray, setPlayerArray] = useState([]);\n    const [teamArray, setTeamArray] = useState([]);\n    useEffect(() => {\n        axios.get('/api/searches/players/' + searchstring)\n            .then((response) => {\n                setPlayerArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        axios.get('/api/searches/teams/' + searchstring)\n            .then((response) => {\n                setTeamArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [searchstring]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Search Results\" />\n            <p className=\"text-center\"><b>Search Results for:</b> {searchstring}</p>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Player Matches:</b> {playerArray.length}</p>\n                    {playerArray.map(player => (\n                        <p key={player.player_id}><a href={'/players/' + player.player_id}>{player.full_name}</a> ({player.cities})</p>\n                    ))}\n                </div>\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Team Matches:</b> {teamArray.length}</p>\n                    {teamArray.map(team => (\n                        <p key={team.team_id}><a href={'/teams/' + team.team_id}>{team.team_name}</a> ({team.cities})</p>\n                    ))}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Champions = () => {\n    const [champions, setChampions] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    useEffect(() => {\n        axios.get('/api/seasons/champions')\n            .then((response) => {\n                setChampions({\n                    data: response.data,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setChampions({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching champions!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Champions\" />\n            {!champions.status.isLoaded\n                ? <Loading />\n                : champions.data && champions.data.length > 0\n                    ? <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <table className=\"table table-bordered table-hover\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th>Season</th>\n                                        <th>Champion</th>\n                                        <th>Store</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {champions.data.map((champion) => (\n                                        <tr key={champion.season_id}>\n                                            <td>{champion.season_name}-{champion.year}</td>\n                                            <td><a href={'/teams/' + champion.tourny_team_id}>{champion.team_name}</a>{champion.comments.length > 0 && <span className=\"small ml-2\">*({champion.comments})</span>}</td>\n                                            <td>{champion.store_city}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    : champions.data\n                        ? <span className=\"empty-result\">There are no champions to display!</span>\n                        : <span className=\"empty-result\">{champions.status.errorMsg}</span>\n            }\n        </Fragment>\n    );\n};\n\nexport default Champions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './css/statsBlockItem.css';\n\nconst StatsBlockItem = (props) => {\n    return (\n        props.stats.map((stat, index) => (\n            <tr key={index}>\n                <td className=\"bg-stat-heading font-weight-bolder text-right\">{stat.text}</td>\n                <td className=\"text-center px-4\">{stat.data}</td>\n            </tr>\n        ))\n    );\n};\n\nStatsBlockItem.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatsBlockItem from './subcomponents/statsBlockItem/statsBlockItem';\n\nconst StatsBlock = (props) => {\n    return (\n        <table className=\"table table-bordered table-hover\">\n            <tbody>\n                <StatsBlockItem stats={props.stats} />\n            </tbody>\n        </table>\n    );\n};\n\nStatsBlock.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlock;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\nimport Loading from '../../components/loading/loading';\n\nconst Players = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { playerid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [playerNameStores, setPlayerNameStores] = useState(null);\n    const [playerNameStoresStatus, setPlayerNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerSeasons, setPlayerSeasons] = useState(null);\n    const [playerSeasonsStatus, setPlayerSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerStats, setPlayerStats] = useState(null);\n    const [playerStatsStatus, setPlayerStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerResults, setPlayerResults] = useState(null);\n    const [playerResultsStatus, setPlayerResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/players/' + playerid + '/name-store')\n            .then((response) => {\n                response.data[0] ? setPlayerNameStores(response.data[0]) : setPlayerNameStores([]);\n                setPlayerNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerNameStores(null);\n                setPlayerNameStoresStatus({ errorMsg: 'An error occurred fetching info for this Player!', isLoaded: true });\n            });\n        axios.get('/api/players/' + playerid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setPlayerSeasons(seasonArray);\n                setPlayerSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerSeasons(null);\n                setPlayerSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this player!', isLoaded: true });\n            });\n    }, [playerid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/players/' + playerid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/players/' + playerid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data) {\n                        setPlayerStats(response.data.formattedPlayerStats);\n                        setPlayerResults(response.data.formattedPlayerResults);\n                    } else {\n                        setPlayerStats([]);\n                        setPlayerResults([]);\n                    }\n                    setPlayerStatsStatus({ errorMsg: undefined, isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setPlayerStats(null);\n                    setPlayerResults(null);\n                    setPlayerStatsStatus({ errorMsg: 'An error occurred fetching stats for this Player!', isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: 'An error occurred fetching results for this Player!', isLoaded: true });\n                });\n        }\n    }, [playerid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Player Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {playerNameStoresStatus.isLoaded && playerNameStores &&\n                        <div className=\"mb-3\">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Player: </span>{playerNameStores.full_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {playerNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {playerSeasonsStatus.isLoaded && playerSeasons && playerSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={playerSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto\">\n                    {!playerStatsStatus.isLoaded\n                        ? <Loading />\n                        : playerStats && playerStats.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                <StatsBlock stats={playerStats} />\n                            </Fragment>\n                            : playerStats\n                                ? <span className=\"empty-result\">There are no player stats for this season!</span>\n                                : <span className=\"empty-result\">{playerStatsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto table-wrapper\">\n                    {!playerResultsStatus.isLoaded\n                        ? <Loading />\n                        : playerResults && playerResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Week by Week Results</h5>\n                                <table className=\"table table-bordered table-hover mb-0\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th>Week # - Team</th>\n                                            {gamesArray.map((game, i) => (\n                                                <th key={i} className=\"text-center\">{game}</th>\n                                            ))}\n                                            <th className=\"text-center\">Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {playerResults.map((result) => (\n                                            <tr key={result.id}>\n                                                <td>{result.week_id} - <a href={'/teams/' + result.team_id}>{result.team_name}</a></td>\n                                                {result.scores.map((score, index) => (\n                                                    <td key={index} className=\"text-center\">{score}</td>\n                                                ))}\n                                                <td className=\"text-center\">{result.total}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : playerResults\n                                ? <span className=\"empty-result\">There are no player results for this season!</span>\n                                : <span className=\"empty-result\">{playerResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n};\n\nexport default Players;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsThead = ({ teamId, teamName, wins, losses, ties }) => {\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td><a href={'/teams/' + teamId}>{teamName}</a> (<span className={'text-' + (wins > losses ? 'success' : (wins < losses ? 'danger' : 'primary'))}>{wins}-{losses}-{ties}</span>)</td>\n                {gamesArray.map((game, i) => (\n                    <td key={i} className=\"text-center\">{game}</td>\n                ))}\n                <td className=\"text-center\">Total</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsThead.propTypes = {\n    teamId: PropTypes.number,\n    teamName: PropTypes.string,\n    wins: PropTypes.number,\n    losses: PropTypes.number,\n    ties: PropTypes.number,\n};\n\nexport default ResultsThead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTbody = ({ players }) => {\n    return (\n        <tbody>\n            {players.map((player, index) => (\n                <tr key={index} className=\"bg-white\">\n                    <td><a href={'/players/' + player.player_id}>{player.name}</a></td>\n                    {player.scores.map((score, i) => (\n                        <td key={i} className=\"text-center\">{score}</td>\n                    ))}\n                    <td className=\"text-center\">{player.total_points}</td>\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nResultsTbody.propTypes = {\n    players: PropTypes.array,\n};\n\nexport default ResultsTbody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTfoot = ({ gameTotals, gameResults, teamTotal }) => {\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td>Total</td>\n                {gameTotals.map((total, i) => (\n                    <td key={i} className=\"text-center\"><span className={'text-' + (gameResults[i] === 'w' ? 'success' : (gameResults[i] === 'l' ? 'danger' : 'primary'))}>{total}</span></td>\n                ))}\n                <td className=\"text-center\">{teamTotal}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsTfoot.propTypes = {\n    gameTotals: PropTypes.array,\n    gameResults: PropTypes.array,\n    teamTotal: PropTypes.number,\n};\n\nexport default ResultsTfoot;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsThead from './subcomponents/resultsThead/resultsThead';\nimport ResultsTbody from './subcomponents/resultsTbody/resultsTbody';\nimport ResultsTfoot from './subcomponents/resultsTfoot/resultsTfoot';\n\nconst ResultsDiv = ({ results }) => {\n    return (\n        <Fragment>\n            {results.map((result) => (\n                <Fragment key={result.id}>\n                    <h5 className=\"text-center text-success\">Week {result.week_id} ({result.date})</h5>\n                    <div className=\"p-1 mb-4 border border-secondary table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-1\">\n                            <ResultsThead teamId={result.away_team.team_id} teamName={result.away_team.team_name} wins={result.away_team.wins} losses={result.away_team.losses} ties={result.away_team.ties} />\n                            <ResultsTbody players={result.away_team.players} />\n                            <ResultsTfoot gameTotals={result.away_team.game_totals} gameResults={result.away_team.game_results} teamTotal={result.away_team.team_total} />\n                            <tbody><tr><td colSpan=\"12\" className=\"border-0\"></td></tr></tbody>\n                            <ResultsThead teamId={result.home_team.team_id} teamName={result.home_team.team_name} wins={result.home_team.wins} losses={result.home_team.losses} ties={result.home_team.ties} />\n                            <ResultsTbody players={result.home_team.players} />\n                            <ResultsTfoot gameTotals={result.home_team.game_totals} gameResults={result.home_team.game_results} teamTotal={result.home_team.team_total} />\n                        </table>\n                    </div>\n                </Fragment>\n            ))}\n        </Fragment>\n    );\n};\n\nResultsDiv.propTypes = {\n    results: PropTypes.array,\n};\n\nexport default ResultsDiv;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\nimport Loading from '../../components/loading/loading';\n\nexport default function Teams() {\n    const { current_season_id: currentSeasonId } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { teamid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [teamNameStores, setTeamNameStores] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [currentViewStores, setCurrentViewStores] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamStats, setTeamStats] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamSchedule, setTeamSchedule] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamPlayers, setTeamPlayers] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamResults, setTeamResults] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/teams/' + teamid + '/store-name')\n            .then((response) => {\n                const data = response.data[0] || [];\n                setTeamNameStores({\n                    data: data,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamNameStores({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching info for this team!',\n                        isLoaded: true,\n                    },\n                });\n            });\n        axios.get('/api/teams/' + teamid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the season list for this team!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, [teamid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/teams/' + teamid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    const data = response.data[0] ? { stores: response.data[0].stores } : null;\n                    setCurrentViewStores({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the current view store info!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/seasons/' + querySeasonId)\n                .then((response) => {\n                    let data = [];\n                    if (response.data[2][0]) {\n                        data = [\n                            { text: 'Record:', data: response.data[2][0].wins + '-' + response.data[2][0].losses + '-' + response.data[2][0].ties },\n                            { text: 'Total Points:', data: response.data[2][0].total_points },\n                            { text: '1-Game Low:', data: response.data[2][0].one_game_low },\n                            { text: '1-Game Avg:', data: Number(response.data[2][0].one_game_avg).toFixed(1) },\n                            { text: '1-Game High:', data: response.data[2][0].one_game_high },\n                            { text: '10-Game Low:', data: response.data[2][0].ten_game_low },\n                            { text: '10-Game Avg:', data: Number(response.data[2][0].ten_game_avg).toFixed(1) },\n                            { text: '10-Game High:', data: response.data[2][0].ten_game_high },\n                        ];\n                    }\n                    setTeamStats({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamStats({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching stats for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/current-schedule/seasons/' + querySeasonId)\n                .then((response) => {\n                    const data = response.data[2] || [];\n                    setTeamSchedule({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamSchedule({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the schedule for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/players/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamPlayers({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamPlayers({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching players for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamResults({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamResults({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching results for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [teamid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Team Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {teamNameStores.status.isLoaded && teamNameStores.data &&\n                        <div className=\"mb-3 \">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Team: </span>{teamNameStores.data.team_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {teamNameStores.data.cities}</div>\n                            {currentViewStores.status.isLoaded && currentViewStores.data.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.data.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamPlayers.status.isLoaded\n                                ? <Loading />\n                                : teamPlayers.data && teamPlayers.data.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Players</h5>\n                                        <table className=\"table table-bordered table-hover\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th>Player</th>\n                                                    <th className=\"text-center\">Games</th>\n                                                    <th className=\"text-center\">Average</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {teamPlayers.data.map((player) => (\n                                                    <tr key={player.player_id}>\n                                                        <td><a href={'/players/' + player.player_id}>{player.full_name}</a></td>\n                                                        <td className=\"text-center\">{player.games_played}</td>\n                                                        <td className=\"text-center\">{Number(player.avg_score).toFixed(1)}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </Fragment>\n                                    : teamPlayers.data\n                                        ? <span className=\"empty-result\">There are no players on this team in the selected season!</span>\n                                        : <span className=\"empty-result\">{teamPlayers.status.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamStats.status.isLoaded\n                                ? <Loading />\n                                : teamStats.data && teamStats.data.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                        <StatsBlock stats={teamStats.data} />\n                                    </Fragment>\n                                    : teamStats.data\n                                        ? <span className=\"empty-result\">There are no team stats for the selected season!</span>\n                                        : <span className=\"empty-result\">{teamStats.status.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamSchedule.status.isLoaded\n                        ? <Loading />\n                        : teamSchedule.data && teamSchedule.data.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Schedule</h5>\n                                <table className=\"table table-bordered table-hover\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th className=\"text-center\">WEEK #</th>\n                                            <th>Away Team</th>\n                                            <th>Home Team</th>\n                                            <th className=\"text-center\">Alley</th>\n                                            <th>Start Time</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {teamSchedule.data.map((schedule) => (\n                                            <tr key={schedule.week_id} className=\"bg-white\">\n                                                <td className=\"text-center\">{schedule.week_id}</td>\n                                                <td><a href={'/teams/' + schedule.away_team_id}>{schedule.away_team_name}</a></td>\n                                                <td><a href={'/teams/' + schedule.home_team_id}>{schedule.home_team_name}</a></td>\n                                                <td className=\"text-center\">{schedule.alley}</td>\n                                                <td>{schedule.start_time}</td>\n                                                <td>{schedule.week_date1}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : teamSchedule.data\n                                ? <span className=\"empty-result\">There is no schedule for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamSchedule.status.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamResults.status.isLoaded\n                        ? <Loading />\n                        : teamResults.data && teamResults.data.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Weekly Results</h5>\n                                <ResultsDiv results={teamResults.data} />\n                            </Fragment>\n                            : teamResults.data\n                                ? <span className=\"empty-result\">There are no results for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamResults.status.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Results = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [results, setResults] = useState(null);\n    const [resultsStatus, setResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [resultSeasons, setResultSeasons] = useState(null);\n    const [resultSeasonsStatus, setResultSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setResultSeasons(seasonArray);\n                setResultSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setResultSeasons(null);\n                setResultSeasonsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore(null);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching the store name!', isLoaded: true });\n                });\n            axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setResults(response.data) : setResults(null);\n                    setResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setResults(null);\n                    setResultsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Results\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {resultSeasonsStatus.isLoaded && resultSeasons && resultSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={resultSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!resultsStatus.isLoaded\n                        ? <Loading />\n                        : results && results.length > 0\n                            ? <ResultsDiv results={results} />\n                            : results\n                                ? <span className=\"empty-result\">There are no results for this season!</span>\n                                : <span className=\"empty-result\">{resultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScheduleRow = ({ weekId, matchup }) => {\n    return (\n        <tr key={`${weekId}${matchup.home_team_id}`} className=\"bg-white\">\n            <td><a href={'/teams/' + matchup.away_team_id}>{matchup.away_team}</a></td>\n            <td><a href={'/teams/' + matchup.home_team_id}>{matchup.home_team}</a></td>\n            <td className=\"text-center\">{matchup.alley}</td>\n            <td>{matchup.start_time}</td>\n        </tr>\n    );\n};\n\nScheduleRow.propTypes = {\n    weekId: PropTypes.number,\n    matchup: PropTypes.object,\n};\n\nexport default ScheduleRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ScheduleRow from './subcomponents/scheduleRow/scheduleRow';\n\nconst ScheduleTable = ({ schedules }) => {\n    return (\n        <Fragment>\n            {schedules.map((week) => (\n                <div key={week.week_id} className=\"mb-5\">\n                    <h5 className=\"text-center text-success mb-4\">Week {week.week_id} ({week.week_date1})</h5>\n                    <div className=\"mb-3 table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-2\">\n                            <thead>\n                                <tr className=\"bg-gray6\">\n                                    <th>Away Team</th>\n                                    <th>Home Team</th>\n                                    <th className=\"text-center\">Alley</th>\n                                    <th>Start Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {week.matchups.map((matchup) => (\n                                    <Fragment key={`${week.week_id}${matchup.home_team_id}`}>\n                                        <ScheduleRow weekId={week.week_id} matchup={matchup} />\n                                    </Fragment>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nScheduleTable.propTypes = {\n    schedules: PropTypes.array,\n};\n\nexport default ScheduleTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport ScheduleTable from '../../components/scheduleTable/scheduleTable';\nimport Loading from '../../components/loading/loading';\n\nconst Schedule = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [scheduleArray, setScheduleArray] = useState(null);\n    const [scheduleArrayStatus, setScheduleArrayStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [scheduleSeasons, setScheduleSeasons] = useState(null);\n    const [scheduleSeasonsStatus, setScheduleSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/schedules/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setScheduleSeasons(seasonArray);\n                setScheduleSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setScheduleSeasons(null);\n                setScheduleSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this store!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore([]);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching info for this store!', isLoaded: true });\n                });\n\n            axios('/api/schedules/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    setScheduleArray(response.data);\n                    setScheduleArrayStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setScheduleArray(null);\n                    setScheduleArrayStatus({ errorMsg: 'An error occurred fetching the schedule for this store!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Schedule\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {scheduleSeasonsStatus.isLoaded && scheduleSeasons && scheduleSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Schedule From\" listItems={scheduleSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!scheduleArrayStatus.isLoaded\n                        ? <Loading />\n                        : scheduleArray && scheduleArray.length > 0\n                            ? <Fragment>\n                                <ScheduleTable schedules={scheduleArray} />\n                            </Fragment>\n                            : scheduleArray\n                                ? <span className=\"empty-result\">There is no schedule available for this season!</span>\n                                : <span className=\"empty-result\">{scheduleArrayStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Schedule;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumLeadersDropdown({ numLeaders, numLeadersArray, setNumLeaders }) {\n    return (\n        <Fragment>\n            {numLeadersArray && numLeadersArray.length > 0 &&\n                <span className=\"small\">Currently showing top:</span>\n            }\n            <select className=\"ml-2\" defaultValue={numLeaders}>\n                {numLeadersArray.map(leaders => (\n                    <Fragment key={leaders}>\n                        {numLeaders === leaders\n                            ? <option>{leaders}</option>\n                            : <option value={leaders} onClick={() => setNumLeaders(leaders)}>{leaders}</option>\n                        }\n                    </Fragment>\n                ))}\n            </select>\n        </Fragment>\n    );\n}\n\nNumLeadersDropdown.propTypes = {\n    numLeaders: PropTypes.number,\n    numLeadersArray: PropTypes.array,\n    setNumLeaders: PropTypes.func,\n};\n\nexport default NumLeadersDropdown;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst AllTime = () => {\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    useEffect(() => {\n\n    }, [numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default AllTime;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LeadersTable = ({ heading, subHeading, columnName, columnData, format, href, leadersObj }) => {\n    return (\n        <Fragment>\n            <div className=\"text-center mb-4\">\n                <h5 className=\"text-success mb-0\">{heading}</h5>\n                {subHeading &&\n                    <span className=\"text-secondary small\">{subHeading}</span>\n                }\n            </div>\n            <table className=\"table table-bordered table-hover mb-5\">\n                <thead>\n                    <tr className=\"bg-gray6\">\n                        <th className=\"text-center\">Rank</th>\n                        <th className=\"text-left\">{columnName}</th>\n                        <th className=\"text-center\">{columnData}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {leadersObj.leaders.map((leader) => (\n                        <tr key={leader.key}>\n                            <td className=\"text-center\">{leader.rank}</td>\n                            <td><a href={`${href}${leader.field_id}`}>{leader.field_name}</a> ({leader.store_city})</td>\n                            <td className=\"text-center\">\n                                {format === 'decimal'\n                                    ? Number(leader.data).toFixed(1)\n                                    : Number(leader.data)\n                                }\n                            </td>\n                        </tr>\n                    ))}\n                    {leadersObj.numAtTieValue > 1 &&\n                        <tr>\n                            <td></td>\n                            <td className=\"text-right text-success\">{leadersObj.numAtTieValue} tied at:</td>\n                            <td className=\"text-center\">{leadersObj.tieValue}</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nLeadersTable.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    columnName: PropTypes.string,\n    columnData: PropTypes.string,\n    format: PropTypes.string,\n    href: PropTypes.string,\n    leadersObj: PropTypes.object,\n};\n\nexport default LeadersTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport LeadersTable from '../../components/leadersTable/leadersTable';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\nimport Loading from '../../components/loading/loading';\n\nconst Leaders = () => {\n    const { current_season_id: currentSeasonId, num_leaders: defaultNumLeaders } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [numLeaders, setNumLeaders] = useState(null);\n    const queryNumLeaders = numLeaders || defaultNumLeaders;\n    const numLeadersArray = [10, 20, 50, 100];\n\n    const [indAvgLeaders, setIndAvgLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [indOneGameLeaders, setIndOneGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [indTenGameLeaders, setIndTenGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamAvgLeaders, setTeamAvgLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamOneGameLeaders, setTeamOneGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamTenGameLeaders, setTeamTenGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/leaders/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the leaders season list!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/leaders/individual/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndAvgLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndAvgLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player best average leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/individual/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndOneGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndOneGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player 1-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/individual/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndTenGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndTenGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player 10-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamAvgLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamAvgLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team best average leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamOneGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamOneGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team 1-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamTenGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamTenGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team 10-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [querySeasonId, queryNumLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n                    Filter by: (Store / Division)\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    {queryNumLeaders &&\n                        <NumLeadersDropdown numLeaders={queryNumLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                    }\n                </div>\n                <div className=\"col-4 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Leaders From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Individual Leaders</h3>\n                            {!indAvgLeaders.status.isLoaded\n                                ? <Loading />\n                                : indAvgLeaders.data.leaders && indAvgLeaders.data.numAtTieValue && (indAvgLeaders.data.leaders.length > 0 || indAvgLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, high season average / game\" subHeading=\"(must play in a minimum of 50% of your team's games to qualify)\" columnName=\"Player\" columnData=\"Average\" format=\"decimal\" href=\"/players/\" leadersObj={indAvgLeaders.data} />\n                                    : indAvgLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indAvgLeaders.status.errorMsg}</div>\n                            }\n                            {!indOneGameLeaders.status.isLoaded\n                                ? <Loading />\n                                : indOneGameLeaders.data.leaders && indOneGameLeaders.data.numAtTieValue && (indOneGameLeaders.data.leaders.length > 0 || indOneGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 1-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indOneGameLeaders.data} />\n                                    : indOneGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indOneGameLeaders.status.errorMsg}</div>\n                            }\n                            {!indTenGameLeaders.status.isLoaded\n                                ? <Loading />\n                                : indTenGameLeaders.data.leaders && indTenGameLeaders.data.numAtTieValue && (indTenGameLeaders.data.leaders.length > 0 || indTenGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 10-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indTenGameLeaders.data} />\n                                    : indTenGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indTenGameLeaders.status.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Team Leaders</h3>\n                            {!teamAvgLeaders.status.isLoaded\n                                ? <Loading />\n                                : teamAvgLeaders.data.leaders && teamAvgLeaders.data.numAtTieValue && (teamAvgLeaders.data.leaders.length > 0 || teamAvgLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high average\" columnName=\"Team\" columnData=\"Average\" format=\"decimal\" href=\"/teams/\" leadersObj={teamAvgLeaders.data} />\n                                    : teamAvgLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamAvgLeaders.status.errorMsg}</div>\n                            }\n                            {!teamOneGameLeaders.status.isLoaded\n                                ? <Loading />\n                                : teamOneGameLeaders.data.leaders && teamOneGameLeaders.data.numAtTieValue && (teamOneGameLeaders.data.leaders.length > 0 || teamOneGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 1-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamOneGameLeaders.data} />\n                                    : teamOneGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamOneGameLeaders.status.errorMsg}</div>\n                            }\n                            {!teamTenGameLeaders.status.isLoaded\n                                ? <Loading />\n                                : teamTenGameLeaders.data.leaders && teamTenGameLeaders.data.numAtTieValue && (teamTenGameLeaders.data.leaders.length > 0 || teamTenGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamTenGameLeaders.data} />\n                                    : teamTenGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamTenGameLeaders.status.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Leaders;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Qualifers = () => {\n    const settings = useContext(SettingsContext);\n\n    // eslint-disable-next-line\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Tournament Qualifiers\" />\n            {seasonName &&\n                <div>\n                    {seasonName.season_name}-{seasonName.season_year}\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Qualifers;\n","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div className=\"m-5 bigger\">\n            <p className=\"text-danger\"><b>Error 404!</b></p>\n            <p>An error has occurred.</p>\n            <p>The page you are looking for does not exist!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;\n","export default __webpack_public_path__ + \"static/media/skeeball_logo.4403d9ad.png\";","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/searchBar.css';\n\nfunction SearchBar() {\n    const [searchInput, setSearchInput] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    useEffect(() => {\n        if (submitted) {\n            setSearchInput('');\n            setSubmitted(false);\n        }\n    }, [submitted]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchInput.length > 0 && setSubmitted(true);\n    };\n\n    return (\n        <div className=\"mt-auto\">\n            <form className=\"form-searchbar\" onSubmit={handleSubmit}>\n                <input type=\"text\" maxLength=\"20\" placeholder=\"Find Player/Team\" className=\"input-searchbar\" value={searchInput} onChange={event => setSearchInput(event.target.value)} />\n                <button type=\"submit\" name=\"submit\" className=\"search-button\">Go</button>\n            </form>\n            {submitted && <Redirect to={'/search/' + searchInput} />}\n        </div>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './css/headerNav.css';\n\nconst HeaderNav = () => {\n    return (\n        <div className=\"h-nav-container\">\n            <span className=\"h-nav-burger\">&#9776;</span>\n            <ul className=\"h-nav-content\">\n                <a href=\"/champions\"><li className=\"nav-item\">Champions</li></a>\n                <a href=\"/rules\"><li className=\"nav-item\">Rules</li></a>\n                <a href=\"/leaders\"><li className=\"nav-item\">Leaders</li></a>\n                <a href=\"/all-time\"><li className=\"nav-item\">All-Time Records</li></a>\n            </ul>\n        </div>\n    );\n};\n\nexport default HeaderNav;\n","import React, { useContext, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport './css/joinFun.css';\nimport SettingsContext from '../../../../context/settingsContext';\n\nconst JoinFun = () => {\n    const { text_box_heading: textBoxHeading, text_box_text: textBoxText } = useContext(SettingsContext);\n\n    return (\n        <div className=\"join-dropdown\" data-toggle=\"dropdown\">\n            <div className=\"join-heading\">\n                {textBoxHeading &&\n                    <Fragment>{textBoxHeading} +</Fragment>\n                }\n            </div>\n            <div className=\"join-dropdown-content\">\n                {textBoxText &&\n                    <Fragment>{ReactHtmlParser(textBoxText)}</Fragment>\n                }\n            </div>\n        </div>\n\n    );\n};\n\nexport default JoinFun;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/header.css';\nimport skeeballLogo from './images/skeeball_logo.png';\nimport SearchBar from './subcomponents/searchBar/searchBar';\nimport HeaderNav from './subcomponents/headerNav/headerNav';\nimport JoinFun from './subcomponents/joinFun/joinFun';\n\nfunction Header() {\n    return (\n        <div className=\"header-bg row mb-0\">\n            <div className=\"col-3 p-2 my-auto text-left\">\n                <Link to=\"/\"><img className=\"img-fluid\" src={skeeballLogo} alt=\"Skeeball World Tour\" /></Link>\n            </div>\n            <div className=\"col-6 d-flex flex-column justify-content-center align-items-center mb-2 p-0\">\n                <JoinFun />\n                <SearchBar />\n            </div>\n            <div className=\"col-3 p-2 my-auto text-right\">\n                <HeaderNav />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './css/navDropdown.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavDropdown(props) {\n    return (\n        <div className=\"navdropdown\">\n            <div className=\"navdropbtn\">{props.buttonText}</div>\n            <div className=\"navdropdown-content\">\n                {props.listItems.map(item => (\n                    <div className=\"item\" key={item.id}>\n                        <a href={props.urlPrefix + item.href}>{item.text}</a>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nNavDropdown.propTypes = {\n    buttonText: PropTypes.string,\n    urlPrefix: PropTypes.string,\n    listItems: PropTypes.array,\n};\n","import React from 'react';\nimport './css/navButton.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavButton(props) {\n    return (\n        <div className=\"navbutton\">\n            <a href={props.url}><div className=\"navbtn\">{props.buttonText}</div></a>\n        </div>\n    );\n}\n\nNavButton.propTypes = {\n    buttonText: PropTypes.string,\n    url: PropTypes.string,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport NavDropdown from './subcomponents/navDropdown/navDropdown';\nimport NavButton from './subcomponents/navButton/navButton';\n\nfunction NavBar() {\n    const settings = useContext(SettingsContext);\n    const currentSeasonId = settings.current_season_id;\n    const displaySchedule = settings.display_schedule;\n\n    const [storeDivisionArr, setStoreDivisionArr] = useState([]);\n\n    useEffect(() => {\n        if (currentSeasonId) {\n            axios.get('/api/schedules/navbar/' + currentSeasonId)\n                .then((response) => {\n                    const storeDivArray = response.data.map(storeDiv => (\n                        {\n                            id: storeDiv.store_division,\n                            text: storeDiv.store_city + ' (' + storeDiv.day_name + ')',\n                            href: '/' + storeDiv.store_id + '/' + storeDiv.division_id,\n                        }\n                    ));\n                    setStoreDivisionArr(storeDivArray);\n                })\n                .catch(error => console.log(error));\n        }\n    }, [currentSeasonId]);\n\n    return (\n        <div className=\"row mt-1 mb-4\">\n            <div className=\"col-12 justify-content-center text-center\">\n                <NavButton buttonText=\"Standings\" url=\"/standings\" />\n                <NavDropdown buttonText=\"Results +\" urlPrefix=\"/results\" listItems={storeDivisionArr} />\n                {displaySchedule === 1 &&\n                    <NavDropdown buttonText=\"Schedule +\" urlPrefix=\"/schedule\" listItems={storeDivisionArr} />\n                }\n            </div >\n        </div >\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './css/footer.css';\n\nfunction Footer() {\n    return (\n        <div className=\"row mt-3 bg-footer\">\n            <div className=\"col-6 text-center p-3 border-right\">\n                <p className=\"mb-3\"><b>Brought to you by:</b></p>\n                <p className=\"mb-1\"><a href=\"https://www.winkinglizard.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Winking Lizard Tavern</a></p>\n                <p className=\"mb-1 small\">and</p>\n                <p className=\"m-0\"><a href=\"http://www.bellmusicco.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Bell Music Company</a></p>\n            </div>\n            <div className=\"col-6 text-center p-3 small border-left\">\n                <h5 className=\"mb-5\"><a href=\"mailto:ktaylor@bellmusicco.com\">Contact Us</a></h5>\n                <p>&copy; 2010 Skeeball World Tour</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/home';\nimport Rules from './pages/rules/rules';\nimport Standings from './pages/standings/standings';\nimport Search from './pages/search/search';\nimport Champions from './pages/champions/champions';\nimport Players from './pages/players/players';\nimport Teams from './pages/teams/teams';\nimport Results from './pages/results/results';\nimport Schedule from './pages/schedule/schedule';\nimport AllTime from './pages/allTime/allTime';\nimport Leaders from './pages/leaders/leaders';\nimport Qualifiers from './pages/qualifiers/qualifiers';\nimport NoMatch from './pages/noMatch/noMatch';\nimport Header from './components/header/header';\nimport NavBar from './components/navbar/navbar';\nimport Footer from './components/footer/footer';\nimport SettingsContext from './context/settingsContext';\nimport axios from 'axios';\nimport './css/style.css';\nimport './css/my_style.css';\n\nexport default function App() {\n    const [settings, setSettings] = useState({});\n\n    useEffect(() => {\n        axios.get('/api/settings')\n            .then((response) => {\n                response.data[0] ? setSettings(response.data[0]) : setSettings({});\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"container border bg-white\">\n                <SettingsContext.Provider value={settings}>\n                    <Header />\n                    <NavBar />\n                    <Switch>\n                        <Route exact path=\"/\"><Home /></Route>\n                        <Route exact path=\"/rules\" component={Rules} />\n                        <Route exact path=\"/standings\" component={Standings} />\n                        <Route exact path=\"/teams/:teamid\" component={Teams} />\n                        <Route exact path=\"/players/:playerid\" component={Players} />\n                        <Route exact path=\"/results/:storeid/:divisionid/:seasonid?\" component={Results} />\n                        <Route exact path=\"/schedule/:storeid/:divisionid/:seasonid?\" component={Schedule} />\n                        <Route exact path=\"/leaders\" component={Leaders} />\n                        <Route exact path=\"/all-time\" component={AllTime} />\n                        <Route exact path=\"/qualifiers\" component={Qualifiers} />\n                        <Route exact path=\"/champions\" component={Champions} />\n                        <Route path=\"/search/:searchstring\" component={Search} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                    <Footer />\n                </SettingsContext.Provider>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}