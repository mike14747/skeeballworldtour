{"version":3,"sources":["context/settingsContext.js","pages/home/home.js","components/pageHeading/pageHeading.js","components/loading/loading.js","pages/rules/rules.js","components/seasonDropdown/seasonDropdown.js","components/standingsTables/subcomponents/standingsRow/standingsRow.js","components/standingsTables/standingsTables.js","pages/standings/standings.js","pages/search/search.js","pages/champions/champions.js","components/statsBlock/subcomponents/statsBlockItem/statsBlockItem.js","components/statsBlock/statsBlock.js","pages/players/players.js","components/resultsDiv/subcomponents/resultsThead/resultsThead.js","components/resultsDiv/subcomponents/resultsTbody/resultsTbody.js","components/resultsDiv/subcomponents/resultsTfoot/resultsTfoot.js","components/resultsDiv/resultsDiv.js","pages/teams/teams.js","pages/results/results.js","components/scheduleTable/subcomponents/scheduleRow/scheduleRow.js","components/scheduleTable/scheduleTable.js","pages/schedule/schedule.js","components/numLeadersDropdown/numLeadersDropdown.js","pages/allTime/allTime.js","components/leadersTable/leadersTable.js","pages/leaders/leaders.js","pages/qualifiers/qualifiers.js","pages/noMatch/noMatch.js","components/header/subcomponents/searchBar/searchBar.js","components/header/subcomponents/headerNav/headerNav.js","components/header/subcomponents/joinFun/joinFun.js","components/header/header.js","components/navbar/subcomponents/navDropdown/navDropdown.js","components/navbar/subcomponents/navButton/navButton.js","components/navbar/navbar.js","components/footer/footer.js","App.js","index.js","components/header/images/skeeball_logo.png"],"names":["SettingsContext","createContext","Home","settings","useContext","showRegButton","show_reg_button","regButtonUrl","reg_button_url","regButtonText","reg_button_text","useState","newsArr","setNewsArr","errorMsg","undefined","isLoaded","newsStatus","setNewsStatus","useEffect","axios","get","then","response","data","catch","error","console","log","className","href","src","alt","ReactHtmlParser","length","map","news","i","key","page_id","content_heading","text_date1","page_content","PageHeading","props","text","Loading","Rules","status","rules","setRules","Dropdown","currentSeason","buttonText","listItems","handleSeasonId","season_name","season_year","item","season_id","onClick","StandingsRow","standingsRowData","standing","standingsId","teamId","teamName","wins","losses","ties","totalPoints","StandingsTables","standingsArr","standings","storeDivision","storeCity","dayName","standingsList","Standings","currentSeasonId","current_season_id","seasonId","setSeasonId","querySeasonId","seasonName","setSeasonName","setStandings","seasons","setSeasons","seasonArray","season","year","Search","searchstring","useParams","playerArray","setPlayerArray","teamArray","setTeamArray","player","player_id","full_name","cities","team","team_id","team_name","Champions","champions","setChampions","champion","tourny_team_id","comments","store_city","StatsBlockItem","stats","stat","index","StatsBlock","Players","playerid","playerNameStores","setPlayerNameStores","playerNameStoresStatus","setPlayerNameStoresStatus","currentViewStores","setCurrentViewStores","currentViewStoresStatus","setCurrentViewStoresStatus","playerSeasons","setPlayerSeasons","playerSeasonsStatus","setPlayerSeasonsStatus","playerStats","setPlayerStats","playerStatsStatus","setPlayerStatsStatus","playerResults","setPlayerResults","playerResultsStatus","setPlayerResultsStatus","stores","formattedPlayerStats","formattedPlayerResults","game","result","id","week_id","scores","score","total","ResultsThead","ResultsTbody","players","name","total_points","ResultsTfoot","gameTotals","gameResults","teamTotal","ResultsDiv","results","date","away_team","game_totals","game_results","team_total","colSpan","home_team","Teams","teamid","teamNameStores","setTeamNameStores","teamStats","setTeamStats","teamSchedule","setTeamSchedule","teamPlayers","setTeamPlayers","teamResults","setTeamResults","one_game_low","Number","one_game_avg","toFixed","one_game_high","ten_game_low","ten_game_avg","ten_game_high","games_played","avg_score","schedule","away_team_id","away_team_name","home_team_id","home_team_name","alley","start_time","week_date1","Results","storeid","divisionid","setResults","resultsStatus","setResultsStatus","store","setStore","storeStatus","setStoreStatus","resultSeasons","setResultSeasons","resultSeasonsStatus","setResultSeasonsStatus","store_id","division_id","store_name","day_name","ScheduleRow","weekId","matchup","ScheduleTable","schedules","week","matchups","Schedule","scheduleArray","setScheduleArray","scheduleArrayStatus","setScheduleArrayStatus","scheduleSeasons","setScheduleSeasons","scheduleSeasonsStatus","setScheduleSeasonsStatus","NumLeadersDropdown","numLeaders","numLeadersArray","setNumLeaders","defaultValue","leaders","value","AllTime","LeadersTable","heading","subHeading","columnName","columnData","format","leadersObj","leader","rank","field_id","field_name","numAtTieValue","tieValue","Leaders","defaultNumLeaders","num_leaders","queryNumLeaders","indAvgLeaders","setIndAvgLeaders","indOneGameLeaders","setIndOneGameLeaders","indTenGameLeaders","setIndTenGameLeaders","teamAvgLeaders","setTeamAvgLeaders","teamOneGameLeaders","setTeamOneGameLeaders","teamTenGameLeaders","setTeamTenGameLeaders","Qualifers","NoMatch","SearchBar","searchInput","setSearchInput","submitted","setSubmitted","onSubmit","e","preventDefault","type","maxLength","placeholder","onChange","event","target","to","HeaderNav","JoinFun","textBoxHeading","text_box_heading","textBoxText","text_box_text","data-toggle","Header","skeeballLogo","NavDropdown","urlPrefix","NavButton","url","NavBar","displaySchedule","display_schedule","storeDivisionArr","setStoreDivisionArr","storeDivArray","storeDiv","store_division","Footer","rel","App","setSettings","Provider","exact","path","component","Qualifiers","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ae99917e.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst SettingsContext = createContext({});\n\nexport default SettingsContext;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport SettingsContext from '../../context/settingsContext';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\n\nfunction Home() {\n    const settings = useContext(SettingsContext);\n\n    const showRegButton = settings.show_reg_button;\n    const regButtonUrl = settings.reg_button_url;\n    const regButtonText = settings.reg_button_text;\n\n    const [newsArr, setNewsArr] = useState([]);\n    const [newsStatus, setNewsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n    const [newsCounter, setNewsCounter] = useState(0);\n\n    useEffect(() => {\n        axios.get('/api/pages/homepage-news')\n            .then((response) => {\n                setNewsArr(response.data);\n                setNewsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setNewsStatus({ errorMsg: 'An error occurred fetching league news!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <div>\n            {showRegButton === 1 && regButtonUrl && regButtonText &&\n                <div>\n                    <div className=\"text-center\">\n                        <a href={regButtonUrl}><img src=\"/images/register_now.jpg\" alt=\"REGISTER NOW!\" /></a>\n                        {ReactHtmlParser(regButtonText)}\n                    </div>\n                </div>\n            }\n\n            {!newsStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : newsArr && newsArr.length > 0\n                    ? <Fragment>\n                        {newsArr.map((news, i) => (\n                            <div key={news.page_id}>\n                                {i > 0 && <hr className=\"mt-4 mb-4\" />}\n                                <h5 className=\"text-danger mt-1 mb-0\">{news.content_heading}</h5>\n                                <p><span className=\"small\">{news.text_date1}</span></p>\n                                {ReactHtmlParser(news.page_content)}\n                            </div>\n                        ))}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see league news!</div>\n\n            }\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeading = (props) => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center\">{props.text}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nPageHeading.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageHeading;\n","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className=\"text-center\">\n            <img src={'/images/loading.gif'} alt={'Loading'} />\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Rules = () => {\n    const [rules, setRules] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    useEffect(() => {\n        axios.get('/api/pages/rules')\n            .then((response) => {\n                setRules({\n                    data: response.data[0],\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setRules({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching league rules!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            {!rules.status.isLoaded\n                ? <Loading />\n                : rules.data\n                    ? <Fragment>\n                        <PageHeading text={rules.data.content_heading} />\n                        {ReactHtmlParser(rules.data.page_content)}\n                    </Fragment>\n                    : !rules.status.errorMsg\n                        ? <div className=\"text-center empty-result\">Please check back again soon to see the rules!</div>\n                        : <span className=\"empty-result\">{rules.status.errorMsg}</span>\n\n            }\n        </Fragment>\n    );\n};\n\nexport default Rules;\n","import React, { Fragment } from 'react';\nimport './css/seasonDropdown.css';\nimport PropTypes from 'prop-types';\n\nfunction Dropdown({ currentSeason, buttonText, listItems, handleSeasonId }) {\n    return (\n        <Fragment>\n            {currentSeason &&\n                <Fragment>\n                    <span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentSeason.season_name}, {currentSeason.season_year}</span>\n                </Fragment>\n            }\n            <div className=\"dropdown ml-2\">\n                <button className=\"dropbtn\">{buttonText}<i className=\"down\"></i></button>\n                <ul className=\"dropdown-content\">\n                    {listItems.map(item => (\n                        <Fragment key={item.season_id}>\n                            {currentSeason && (item.season_id === currentSeason.season_id)\n                                ? <li className=\"viewing\">{item.text}</li>\n                                : <li onClick={() => handleSeasonId(item.season_id)}>{item.text}</li>\n                            }\n                        </Fragment>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n}\n\nDropdown.propTypes = {\n    currentSeason: PropTypes.object,\n    buttonText: PropTypes.string,\n    listItems: PropTypes.array,\n    handleSeasonId: PropTypes.func,\n};\n\nexport default Dropdown;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StandingsRow = ({ standingsRowData }) => {\n    return (\n        <Fragment>\n            {standingsRowData.map((standing) => (\n                <tr key={standing.standingsId}>\n                    <td className=\"text-left\"><a href={'/teams/' + standing.teamId}>{standing.teamName}</a></td>\n                    <td>{standing.wins}</td>\n                    <td>{standing.losses}</td>\n                    <td>{standing.ties}</td>\n                    <td>{standing.totalPoints}</td>\n                </tr>\n            ))}\n        </Fragment>\n    );\n};\n\nStandingsRow.propTypes = {\n    standingsRowData: PropTypes.array,\n};\n\nexport default StandingsRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport StandingsRow from './subcomponents/standingsRow/standingsRow';\n\nconst StandingsTables = ({ standingsArr }) => {\n    return (\n        <Fragment>\n            {standingsArr.map(standings => (\n                <div key={standings.storeDivision}>\n                    <h5 className=\"text-center\">{standings.storeCity} - {standings.dayName}</h5>\n                    <div className=\"d-flex justify-content-center mb-4\">\n                        <div className=\"min-w-50 mx-auto table-wrapper\">\n                            <table className=\"table table-bordered mb-4 text-center\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th className=\"text-left\">TEAM</th>\n                                        <th>W</th>\n                                        <th>L</th>\n                                        <th>T</th>\n                                        <th>TOTAL POINTS</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <StandingsRow standingsRowData={standings.standingsList} />\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nStandingsTables.propTypes = {\n    standingsArr: PropTypes.array,\n};\n\nexport default StandingsTables;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport StandingsTables from '../../components/standingsTables/standingsTables';\nimport Loading from '../../components/loading/loading';\n\nexport default function Standings() {\n    const { current_season_id: currentSeasonId } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [standings, setStandings] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/standings/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the standings season list!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    if (response.data[0]) {\n                        setSeasonName({\n                            season_id: querySeasonId,\n                            season_name: response.data[0].season_name,\n                            season_year: response.data[0].year,\n                        });\n                    } else {\n                        setSeasonName(null);\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/standings/seasons/' + querySeasonId)\n                .then((response) => {\n                    setStandings({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStandings({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the standings!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Standings\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-12 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Standings From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            {!standings.status.isLoaded\n                ? <Loading />\n                : standings.data && standings.data.length > 0\n                    ? <StandingsTables standingsArr={standings.data} />\n                    : standings.data\n                        ? <span className=\"empty-result\">There are no standings for this season!</span>\n                        : <span className=\"empty-result\">{standings.status.errorMsg}</span>\n            }\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nexport default function Search() {\n    const { searchstring } = useParams();\n    const [playerArray, setPlayerArray] = useState([]);\n    const [teamArray, setTeamArray] = useState([]);\n    useEffect(() => {\n        axios.get('/api/searches/players/' + searchstring)\n            .then((response) => {\n                setPlayerArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        axios.get('/api/searches/teams/' + searchstring)\n            .then((response) => {\n                setTeamArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [searchstring]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Search Results\" />\n            <p className=\"text-center\"><b>Search Results for:</b> {searchstring}</p>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Player Matches:</b> {playerArray.length}</p>\n                    {playerArray.map(player => (\n                        <p key={player.player_id}><a href={'/players/' + player.player_id}>{player.full_name}</a> ({player.cities})</p>\n                    ))}\n                </div>\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Team Matches:</b> {teamArray.length}</p>\n                    {teamArray.map(team => (\n                        <p key={team.team_id}><a href={'/teams/' + team.team_id}>{team.team_name}</a> ({team.cities})</p>\n                    ))}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport Loading from '../../components/loading/loading';\n\nconst Champions = () => {\n    const [champions, setChampions] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    useEffect(() => {\n        axios.get('/api/seasons/champions')\n            .then((response) => {\n                setChampions({\n                    data: response.data,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setChampions({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching champions!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Champions\" />\n            {!champions.status.isLoaded\n                ? <Loading />\n                : champions.data && champions.data.length > 0\n                    ? <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <table className=\"table table-bordered table-hover\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th>Season</th>\n                                        <th>Champion</th>\n                                        <th>Store</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {champions.data.map((champion) => (\n                                        <tr key={champion.season_id}>\n                                            <td>{champion.season_name}-{champion.year}</td>\n                                            <td><a href={'/teams/' + champion.tourny_team_id}>{champion.team_name}</a>{champion.comments.length > 0 && <span className=\"small ml-2\">*({champion.comments})</span>}</td>\n                                            <td>{champion.store_city}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    : champions.data\n                        ? <span className=\"empty-result\">There are no champions to display!</span>\n                        : <span className=\"empty-result\">{champions.status.errorMsg}</span>\n            }\n        </Fragment>\n    );\n};\n\nexport default Champions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './css/statsBlockItem.css';\n\nconst StatsBlockItem = (props) => {\n    return (\n        props.stats.map((stat, index) => (\n            <tr key={index}>\n                <td className=\"bg-stat-heading font-weight-bolder text-right\">{stat.text}</td>\n                <td className=\"text-center px-4\">{stat.data}</td>\n            </tr>\n        ))\n    );\n};\n\nStatsBlockItem.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatsBlockItem from './subcomponents/statsBlockItem/statsBlockItem';\n\nconst StatsBlock = (props) => {\n    return (\n        <table className=\"table table-bordered table-hover\">\n            <tbody>\n                <StatsBlockItem stats={props.stats} />\n            </tbody>\n        </table>\n    );\n};\n\nStatsBlock.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlock;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nconst Players = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { playerid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [playerNameStores, setPlayerNameStores] = useState(null);\n    const [playerNameStoresStatus, setPlayerNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerSeasons, setPlayerSeasons] = useState(null);\n    const [playerSeasonsStatus, setPlayerSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerStats, setPlayerStats] = useState(null);\n    const [playerStatsStatus, setPlayerStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerResults, setPlayerResults] = useState(null);\n    const [playerResultsStatus, setPlayerResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/players/' + playerid + '/name-store')\n            .then((response) => {\n                response.data[0] ? setPlayerNameStores(response.data[0]) : setPlayerNameStores([]);\n                setPlayerNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerNameStores(null);\n                setPlayerNameStoresStatus({ errorMsg: 'An error occurred fetching info for this Player!', isLoaded: true });\n            });\n        axios.get('/api/players/' + playerid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setPlayerSeasons(seasonArray);\n                setPlayerSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerSeasons(null);\n                setPlayerSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this player!', isLoaded: true });\n            });\n    }, [playerid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/players/' + playerid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/players/' + playerid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data) {\n                        setPlayerStats(response.data.formattedPlayerStats);\n                        setPlayerResults(response.data.formattedPlayerResults);\n                    } else {\n                        setPlayerStats([]);\n                        setPlayerResults([]);\n                    }\n                    setPlayerStatsStatus({ errorMsg: undefined, isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setPlayerStats(null);\n                    setPlayerResults(null);\n                    setPlayerStatsStatus({ errorMsg: 'An error occurred fetching stats for this Player!', isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: 'An error occurred fetching results for this Player!', isLoaded: true });\n                });\n        }\n    }, [playerid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Player Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {playerNameStoresStatus.isLoaded && playerNameStores &&\n                        <div className=\"mb-3\">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Player: </span>{playerNameStores.full_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {playerNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {playerSeasonsStatus.isLoaded && playerSeasons && playerSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={playerSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto\">\n                    {!playerStatsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerStats && playerStats.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                <StatsBlock stats={playerStats} />\n                            </Fragment>\n                            : playerStats\n                                ? <span className=\"empty-result\">There are no player stats for this season!</span>\n                                : <span className=\"empty-result\">{playerStatsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto table-wrapper\">\n                    {!playerResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerResults && playerResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Week by Week Results</h5>\n                                <table className=\"table table-bordered table-hover mb-0\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th>Week # - Team</th>\n                                            {gamesArray.map((game, i) => (\n                                                <th key={i} className=\"text-center\">{game}</th>\n                                            ))}\n                                            <th className=\"text-center\">Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {playerResults.map((result) => (\n                                            <tr key={result.id}>\n                                                <td>{result.week_id} - <a href={'/teams/' + result.team_id}>{result.team_name}</a></td>\n                                                {result.scores.map((score, index) => (\n                                                    <td key={index} className=\"text-center\">{score}</td>\n                                                ))}\n                                                <td className=\"text-center\">{result.total}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : playerResults\n                                ? <span className=\"empty-result\">There are no player results for this season!</span>\n                                : <span className=\"empty-result\">{playerResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n};\n\nexport default Players;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsThead = ({ teamId, teamName, wins, losses, ties }) => {\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td><a href={'/teams/' + teamId}>{teamName}</a> (<span className={'text-' + (wins > losses ? 'success' : (wins < losses ? 'danger' : 'primary'))}>{wins}-{losses}-{ties}</span>)</td>\n                {gamesArray.map((game, i) => (\n                    <td key={i} className=\"text-center\">{game}</td>\n                ))}\n                <td className=\"text-center\">Total</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsThead.propTypes = {\n    teamId: PropTypes.number,\n    teamName: PropTypes.string,\n    wins: PropTypes.number,\n    losses: PropTypes.number,\n    ties: PropTypes.number,\n};\n\nexport default ResultsThead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTbody = ({ players }) => {\n    return (\n        <tbody>\n            {players.map((player, index) => (\n                <tr key={index} className=\"bg-white\">\n                    <td><a href={'/players/' + player.player_id}>{player.name}</a></td>\n                    {player.scores.map((score, i) => (\n                        <td key={i} className=\"text-center\">{score}</td>\n                    ))}\n                    <td className=\"text-center\">{player.total_points}</td>\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nResultsTbody.propTypes = {\n    players: PropTypes.array,\n};\n\nexport default ResultsTbody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTfoot = ({ gameTotals, gameResults, teamTotal }) => {\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td>Total</td>\n                {gameTotals.map((total, i) => (\n                    <td key={i} className=\"text-center\"><span className={'text-' + (gameResults[i] === 'w' ? 'success' : (gameResults[i] === 'l' ? 'danger' : 'primary'))}>{total}</span></td>\n                ))}\n                <td className=\"text-center\">{teamTotal}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsTfoot.propTypes = {\n    gameTotals: PropTypes.array,\n    gameResults: PropTypes.array,\n    teamTotal: PropTypes.number,\n};\n\nexport default ResultsTfoot;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsThead from './subcomponents/resultsThead/resultsThead';\nimport ResultsTbody from './subcomponents/resultsTbody/resultsTbody';\nimport ResultsTfoot from './subcomponents/resultsTfoot/resultsTfoot';\n\nconst ResultsDiv = ({ results }) => {\n    return (\n        <Fragment>\n            {results.map((result) => (\n                <Fragment key={result.id}>\n                    <h5 className=\"text-center text-success\">Week {result.week_id} ({result.date})</h5>\n                    <div className=\"p-1 mb-4 border border-secondary table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-1\">\n                            <ResultsThead teamId={result.away_team.team_id} teamName={result.away_team.team_name} wins={result.away_team.wins} losses={result.away_team.losses} ties={result.away_team.ties} />\n                            <ResultsTbody players={result.away_team.players} />\n                            <ResultsTfoot gameTotals={result.away_team.game_totals} gameResults={result.away_team.game_results} teamTotal={result.away_team.team_total} />\n                            <tbody><tr><td colSpan=\"12\" className=\"border-0\"></td></tr></tbody>\n                            <ResultsThead teamId={result.home_team.team_id} teamName={result.home_team.team_name} wins={result.home_team.wins} losses={result.home_team.losses} ties={result.home_team.ties} />\n                            <ResultsTbody players={result.home_team.players} />\n                            <ResultsTfoot gameTotals={result.home_team.game_totals} gameResults={result.home_team.game_results} teamTotal={result.home_team.team_total} />\n                        </table>\n                    </div>\n                </Fragment>\n            ))}\n        </Fragment>\n    );\n};\n\nResultsDiv.propTypes = {\n    results: PropTypes.array,\n};\n\nexport default ResultsDiv;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nexport default function Teams() {\n    const { current_season_id: currentSeasonId } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { teamid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [teamNameStores, setTeamNameStores] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [currentViewStores, setCurrentViewStores] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamStats, setTeamStats] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamSchedule, setTeamSchedule] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamPlayers, setTeamPlayers] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamResults, setTeamResults] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/teams/' + teamid + '/store-name')\n            .then((response) => {\n                const data = response.data[0] || [];\n                setTeamNameStores({\n                    data: data,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamNameStores({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching info for this team!',\n                        isLoaded: true,\n                    },\n                });\n            });\n        axios.get('/api/teams/' + teamid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the season list for this team!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, [teamid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/teams/' + teamid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    const data = response.data[0] ? { stores: response.data[0].stores } : null;\n                    setCurrentViewStores({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the current view store info!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/seasons/' + querySeasonId)\n                .then((response) => {\n                    let data = [];\n                    if (response.data[2][0]) {\n                        data = [\n                            { text: 'Record:', data: response.data[2][0].wins + '-' + response.data[2][0].losses + '-' + response.data[2][0].ties },\n                            { text: 'Total Points:', data: response.data[2][0].total_points },\n                            { text: '1-Game Low:', data: response.data[2][0].one_game_low },\n                            { text: '1-Game Avg:', data: Number(response.data[2][0].one_game_avg).toFixed(1) },\n                            { text: '1-Game High:', data: response.data[2][0].one_game_high },\n                            { text: '10-Game Low:', data: response.data[2][0].ten_game_low },\n                            { text: '10-Game Avg:', data: Number(response.data[2][0].ten_game_avg).toFixed(1) },\n                            { text: '10-Game High:', data: response.data[2][0].ten_game_high },\n                        ];\n                    }\n                    setTeamStats({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamStats({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching stats for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/current-schedule/seasons/' + querySeasonId)\n                .then((response) => {\n                    const data = response.data[2] || [];\n                    setTeamSchedule({\n                        data: data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamSchedule({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching the schedule for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/players/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamPlayers({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamPlayers({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching players for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/teams/' + teamid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamResults({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamResults({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching results for this team!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [teamid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Team Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {teamNameStores.status.isLoaded && teamNameStores.data &&\n                        <div className=\"mb-3 \">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Team: </span>{teamNameStores.data.team_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {teamNameStores.data.cities}</div>\n                            {currentViewStores.status.isLoaded && currentViewStores.data.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.data.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamPlayers.status.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamPlayers.data && teamPlayers.data.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Players</h5>\n                                        <table className=\"table table-bordered table-hover\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th>Player</th>\n                                                    <th className=\"text-center\">Games</th>\n                                                    <th className=\"text-center\">Average</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {teamPlayers.data.map((player) => (\n                                                    <tr key={player.player_id}>\n                                                        <td><a href={'/players/' + player.player_id}>{player.full_name}</a></td>\n                                                        <td className=\"text-center\">{player.games_played}</td>\n                                                        <td className=\"text-center\">{Number(player.avg_score).toFixed(1)}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </Fragment>\n                                    : teamPlayers.data\n                                        ? <span className=\"empty-result\">There are no players on this team in the selected season!</span>\n                                        : <span className=\"empty-result\">{teamPlayers.status.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamStats.status.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamStats.data && teamStats.data.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                        <StatsBlock stats={teamStats.data} />\n                                    </Fragment>\n                                    : teamStats.data\n                                        ? <span className=\"empty-result\">There are no team stats for the selected season!</span>\n                                        : <span className=\"empty-result\">{teamStats.status.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamSchedule.status.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamSchedule.data && teamSchedule.data.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Schedule</h5>\n                                <table className=\"table table-bordered table-hover\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th className=\"text-center\">WEEK #</th>\n                                            <th>Away Team</th>\n                                            <th>Home Team</th>\n                                            <th className=\"text-center\">Alley</th>\n                                            <th>Start Time</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {teamSchedule.data.map((schedule) => (\n                                            <tr key={schedule.week_id} className=\"bg-white\">\n                                                <td className=\"text-center\">{schedule.week_id}</td>\n                                                <td><a href={'/teams/' + schedule.away_team_id}>{schedule.away_team_name}</a></td>\n                                                <td><a href={'/teams/' + schedule.home_team_id}>{schedule.home_team_name}</a></td>\n                                                <td className=\"text-center\">{schedule.alley}</td>\n                                                <td>{schedule.start_time}</td>\n                                                <td>{schedule.week_date1}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : teamSchedule.data\n                                ? <span className=\"empty-result\">There is no schedule for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamSchedule.status.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamResults.status.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamResults.data && teamResults.data.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Weekly Results</h5>\n                                <ResultsDiv results={teamResults.data} />\n                            </Fragment>\n                            : teamResults.data\n                                ? <span className=\"empty-result\">There are no results for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamResults.status.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Results = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [results, setResults] = useState(null);\n    const [resultsStatus, setResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [resultSeasons, setResultSeasons] = useState(null);\n    const [resultSeasonsStatus, setResultSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setResultSeasons(seasonArray);\n                setResultSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setResultSeasons(null);\n                setResultSeasonsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore(null);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching the store name!', isLoaded: true });\n                });\n            axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setResults(response.data) : setResults(null);\n                    setResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setResults(null);\n                    setResultsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Results\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {resultSeasonsStatus.isLoaded && resultSeasons && resultSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={resultSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!resultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : results && results.length > 0\n                            ? <ResultsDiv results={results} />\n                            : results\n                                ? <span className=\"empty-result\">There are no results for this season!</span>\n                                : <span className=\"empty-result\">{resultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScheduleRow = ({ weekId, matchup }) => {\n    return (\n        <tr key={`${weekId}${matchup.home_team_id}`} className=\"bg-white\">\n            <td><a href={'/teams/' + matchup.away_team_id}>{matchup.away_team}</a></td>\n            <td><a href={'/teams/' + matchup.home_team_id}>{matchup.home_team}</a></td>\n            <td className=\"text-center\">{matchup.alley}</td>\n            <td>{matchup.start_time}</td>\n        </tr>\n    );\n};\n\nScheduleRow.propTypes = {\n    weekId: PropTypes.number,\n    matchup: PropTypes.object,\n};\n\nexport default ScheduleRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ScheduleRow from './subcomponents/scheduleRow/scheduleRow';\n\nconst ScheduleTable = ({ schedules }) => {\n    return (\n        <Fragment>\n            {schedules.map((week) => (\n                <div key={week.week_id} className=\"mb-5\">\n                    <h5 className=\"text-center text-success mb-4\">Week {week.week_id} ({week.week_date1})</h5>\n                    <div className=\"mb-3 table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-2\">\n                            <thead>\n                                <tr className=\"bg-gray6\">\n                                    <th>Away Team</th>\n                                    <th>Home Team</th>\n                                    <th className=\"text-center\">Alley</th>\n                                    <th>Start Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {week.matchups.map((matchup) => (\n                                    <Fragment key={`${week.week_id}${matchup.home_team_id}`}>\n                                        <ScheduleRow weekId={week.week_id} matchup={matchup} />\n                                    </Fragment>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nScheduleTable.propTypes = {\n    schedules: PropTypes.array,\n};\n\nexport default ScheduleTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport ScheduleTable from '../../components/scheduleTable/scheduleTable';\n\nconst Schedule = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [scheduleArray, setScheduleArray] = useState(null);\n    const [scheduleArrayStatus, setScheduleArrayStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [scheduleSeasons, setScheduleSeasons] = useState(null);\n    const [scheduleSeasonsStatus, setScheduleSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/schedules/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setScheduleSeasons(seasonArray);\n                setScheduleSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setScheduleSeasons(null);\n                setScheduleSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this store!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore([]);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching info for this store!', isLoaded: true });\n                });\n\n            axios('/api/schedules/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    setScheduleArray(response.data);\n                    setScheduleArrayStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setScheduleArray(null);\n                    setScheduleArrayStatus({ errorMsg: 'An error occurred fetching the schedule for this store!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Schedule\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {scheduleSeasonsStatus.isLoaded && scheduleSeasons && scheduleSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Schedule From\" listItems={scheduleSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!scheduleArrayStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : scheduleArray && scheduleArray.length > 0\n                            ? <Fragment>\n                                <ScheduleTable schedules={scheduleArray} />\n                            </Fragment>\n                            : scheduleArray\n                                ? <span className=\"empty-result\">There is no schedule available for this season!</span>\n                                : <span className=\"empty-result\">{scheduleArrayStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Schedule;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumLeadersDropdown({ numLeaders, numLeadersArray, setNumLeaders }) {\n    return (\n        <Fragment>\n            {numLeadersArray && numLeadersArray.length > 0 &&\n                <span className=\"small\">Currently showing top:</span>\n            }\n            <select className=\"ml-2\" defaultValue={numLeaders}>\n                {numLeadersArray.map(leaders => (\n                    <Fragment key={leaders}>\n                        {numLeaders === leaders\n                            ? <option>{leaders}</option>\n                            : <option value={leaders} onClick={() => setNumLeaders(leaders)}>{leaders}</option>\n                        }\n                    </Fragment>\n                ))}\n            </select>\n        </Fragment>\n    );\n}\n\nNumLeadersDropdown.propTypes = {\n    numLeaders: PropTypes.number,\n    numLeadersArray: PropTypes.array,\n    setNumLeaders: PropTypes.func,\n};\n\nexport default NumLeadersDropdown;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst AllTime = () => {\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    useEffect(() => {\n\n    }, [numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default AllTime;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LeadersTable = ({ heading, subHeading, columnName, columnData, format, href, leadersObj }) => {\n    return (\n        <Fragment>\n            <div className=\"text-center mb-4\">\n                <h5 className=\"text-success mb-0\">{heading}</h5>\n                {subHeading &&\n                    <span className=\"text-secondary small\">{subHeading}</span>\n                }\n            </div>\n            <table className=\"table table-bordered table-hover mb-5\">\n                <thead>\n                    <tr className=\"bg-gray6\">\n                        <th className=\"text-center\">Rank</th>\n                        <th className=\"text-left\">{columnName}</th>\n                        <th className=\"text-center\">{columnData}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {leadersObj.leaders.map((leader) => (\n                        <tr key={leader.key}>\n                            <td className=\"text-center\">{leader.rank}</td>\n                            <td><a href={`${href}${leader.field_id}`}>{leader.field_name}</a> ({leader.store_city})</td>\n                            <td className=\"text-center\">\n                                {format === 'decimal'\n                                    ? Number(leader.data).toFixed(1)\n                                    : Number(leader.data)\n                                }\n                            </td>\n                        </tr>\n                    ))}\n                    {leadersObj.numAtTieValue > 1 &&\n                        <tr>\n                            <td></td>\n                            <td className=\"text-right text-success\">{leadersObj.numAtTieValue} tied at:</td>\n                            <td className=\"text-center\">{leadersObj.tieValue}</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nLeadersTable.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    columnName: PropTypes.string,\n    columnData: PropTypes.string,\n    format: PropTypes.string,\n    href: PropTypes.string,\n    leadersObj: PropTypes.object,\n};\n\nexport default LeadersTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport LeadersTable from '../../components/leadersTable/leadersTable';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst Leaders = () => {\n    const { current_season_id: currentSeasonId, num_leaders: defaultNumLeaders } = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [numLeaders, setNumLeaders] = useState(null);\n    const queryNumLeaders = numLeaders || defaultNumLeaders;\n    const numLeadersArray = [10, 20, 50, 100];\n\n    const [indAvgLeaders, setIndAvgLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [indOneGameLeaders, setIndOneGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [indTenGameLeaders, setIndTenGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamAvgLeaders, setTeamAvgLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamOneGameLeaders, setTeamOneGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [teamTenGameLeaders, setTeamTenGameLeaders] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const [seasons, setSeasons] = useState({\n        data: null,\n        status: {\n            errorMsg: undefined,\n            isLoaded: false,\n        },\n    });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/leaders/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setSeasons({\n                    data: seasonArray,\n                    status: {\n                        errorMsg: undefined,\n                        isLoaded: true,\n                    },\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setSeasons({\n                    data: null,\n                    status: {\n                        errorMsg: 'An error occurred fetching the leaders season list!',\n                        isLoaded: true,\n                    },\n                });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/leaders/individual/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndAvgLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndAvgLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player best average leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/individual/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndOneGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndOneGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player 1-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/individual/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndTenGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndTenGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching player 10-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamAvgLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamAvgLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team best average leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamOneGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamOneGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team 1-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n            axios.get('/api/leaders/team/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamTenGameLeaders({\n                        data: response.data,\n                        status: {\n                            errorMsg: undefined,\n                            isLoaded: true,\n                        },\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamTenGameLeaders({\n                        data: null,\n                        status: {\n                            errorMsg: 'An error occurred fetching team 10-game leaders!',\n                            isLoaded: true,\n                        },\n                    });\n                });\n        }\n    }, [querySeasonId, queryNumLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n                    Filter by: (Store / Division)\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    {queryNumLeaders &&\n                        <NumLeadersDropdown numLeaders={queryNumLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                    }\n                </div>\n                <div className=\"col-4 text-right p-2\">\n                    {seasons.status.isLoaded && seasons.data && seasons.data.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Leaders From\" listItems={seasons.data} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Individual Leaders</h3>\n                            {!indAvgLeaders.status.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indAvgLeaders.data.leaders && indAvgLeaders.data.numAtTieValue && (indAvgLeaders.data.leaders.length > 0 || indAvgLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, high season average / game\" subHeading=\"(must play in a minimum of 50% of your team's games to qualify)\" columnName=\"Player\" columnData=\"Average\" format=\"decimal\" href=\"/players/\" leadersObj={indAvgLeaders.data} />\n                                    : indAvgLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indAvgLeaders.status.errorMsg}</div>\n                            }\n                            {!indOneGameLeaders.status.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indOneGameLeaders.data.leaders && indOneGameLeaders.data.numAtTieValue && (indOneGameLeaders.data.leaders.length > 0 || indOneGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 1-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indOneGameLeaders.data} />\n                                    : indOneGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indOneGameLeaders.status.errorMsg}</div>\n                            }\n                            {!indTenGameLeaders.status.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indTenGameLeaders.data.leaders && indTenGameLeaders.data.numAtTieValue && (indTenGameLeaders.data.leaders.length > 0 || indTenGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 10-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indTenGameLeaders.data} />\n                                    : indTenGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no player 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indTenGameLeaders.status.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Team Leaders</h3>\n                            {!teamAvgLeaders.status.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamAvgLeaders.data.leaders && teamAvgLeaders.data.numAtTieValue && (teamAvgLeaders.data.leaders.length > 0 || teamAvgLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high average\" columnName=\"Team\" columnData=\"Average\" format=\"decimal\" href=\"/teams/\" leadersObj={teamAvgLeaders.data} />\n                                    : teamAvgLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamAvgLeaders.status.errorMsg}</div>\n                            }\n                            {!teamOneGameLeaders.status.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamOneGameLeaders.data.leaders && teamOneGameLeaders.data.numAtTieValue && (teamOneGameLeaders.data.leaders.length > 0 || teamOneGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 1-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamOneGameLeaders.data} />\n                                    : teamOneGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamOneGameLeaders.status.errorMsg}</div>\n                            }\n                            {!teamTenGameLeaders.status.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamTenGameLeaders.data.leaders && teamTenGameLeaders.data.numAtTieValue && (teamTenGameLeaders.data.leaders.length > 0 || teamTenGameLeaders.data.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamTenGameLeaders.data} />\n                                    : teamTenGameLeaders.data.leaders\n                                        ? <div className=\"empty-result\">There are no team 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamTenGameLeaders.status.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Leaders;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Qualifers = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Tournament Qualifiers\" />\n            {seasonName &&\n                <div>\n                    {seasonName.season_name}-{seasonName.season_year}\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Qualifers;\n","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div className=\"m-5 bigger\">\n            <p className=\"text-danger\"><b>Error 404!</b></p>\n            <p>An error has occurred.</p>\n            <p>The page you are looking for does not exist!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/searchBar.css';\n\nfunction SearchBar() {\n    const [searchInput, setSearchInput] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    useEffect(() => {\n        if (submitted) {\n            setSearchInput('');\n            setSubmitted(false);\n        }\n    }, [submitted]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchInput.length > 0 && setSubmitted(true);\n    };\n\n    return (\n        <div className=\"mt-auto\">\n            <form className=\"form-searchbar\" onSubmit={handleSubmit}>\n                <input type=\"text\" maxLength=\"20\" placeholder=\"Find Player/Team\" className=\"input-searchbar\" value={searchInput} onChange={event => setSearchInput(event.target.value)} />\n                <button type=\"submit\" name=\"submit\" className=\"search-button\">Go</button>\n            </form>\n            {submitted && <Redirect to={'/search/' + searchInput} />}\n        </div>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './css/headerNav.css';\n\nconst HeaderNav = () => {\n    return (\n        <div className=\"h-nav-container\">\n            <span className=\"h-nav-burger\">&#9776;</span>\n            <ul className=\"h-nav-content\">\n                <a href=\"/champions\"><li className=\"nav-item\">Champions</li></a>\n                <a href=\"/rules\"><li className=\"nav-item\">Rules</li></a>\n                <a href=\"/leaders\"><li className=\"nav-item\">Leaders</li></a>\n                <a href=\"/all-time\"><li className=\"nav-item\">All-Time Records</li></a>\n            </ul>\n        </div>\n    );\n};\n\nexport default HeaderNav;\n","import React, { useContext, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport './css/joinFun.css';\nimport SettingsContext from '../../../../context/settingsContext';\n\nconst JoinFun = () => {\n    const { text_box_heading: textBoxHeading, text_box_text: textBoxText } = useContext(SettingsContext);\n\n    return (\n        <div className=\"join-dropdown\" data-toggle=\"dropdown\">\n            <div className=\"join-heading\">\n                {textBoxHeading &&\n                    <Fragment>{textBoxHeading} +</Fragment>\n                }\n            </div>\n            <div className=\"join-dropdown-content\">\n                {textBoxText &&\n                    <Fragment>{ReactHtmlParser(textBoxText)}</Fragment>\n                }\n            </div>\n        </div>\n\n    );\n};\n\nexport default JoinFun;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/header.css';\nimport skeeballLogo from './images/skeeball_logo.png';\nimport SearchBar from './subcomponents/searchBar/searchBar';\nimport HeaderNav from './subcomponents/headerNav/headerNav';\nimport JoinFun from './subcomponents/joinFun/joinFun';\n\nfunction Header() {\n    return (\n        <div className=\"header-bg row mb-0\">\n            <div className=\"col-3 p-2 my-auto text-left\">\n                <Link to=\"/\"><img className=\"img-fluid\" src={skeeballLogo} alt=\"Skeeball World Tour\" /></Link>\n            </div>\n            <div className=\"col-6 d-flex flex-column justify-content-center align-items-center mb-2 p-0\">\n                <JoinFun />\n                <SearchBar />\n            </div>\n            <div className=\"col-3 p-2 my-auto text-right\">\n                <HeaderNav />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './css/navDropdown.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavDropdown(props) {\n    return (\n        <div className=\"navdropdown\" data-toggle=\"dropdown\">\n            <div className=\"navdropbtn\">{props.buttonText}</div>\n            <div className=\"navdropdown-content\">\n                {props.listItems.map(item => (\n                    <div className=\"item\" key={item.id}>\n                        <a href={props.urlPrefix + item.href}>{item.text}</a>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nNavDropdown.propTypes = {\n    buttonText: PropTypes.string,\n    urlPrefix: PropTypes.string,\n    listItems: PropTypes.array,\n};\n","import React from 'react';\nimport './css/navButton.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavButton(props) {\n    return (\n        <div className=\"navbutton\">\n            <a href={props.url}><div className=\"navbtn\">{props.buttonText}</div></a>\n        </div>\n    );\n}\n\nNavButton.propTypes = {\n    buttonText: PropTypes.string,\n    url: PropTypes.string,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport NavDropdown from './subcomponents/navDropdown/navDropdown';\nimport NavButton from './subcomponents/navButton/navButton';\n\nfunction NavBar() {\n    const settings = useContext(SettingsContext);\n    const currentSeasonId = settings.current_season_id;\n    const displaySchedule = settings.display_schedule;\n\n    const [storeDivisionArr, setStoreDivisionArr] = useState([]);\n\n    useEffect(() => {\n        if (currentSeasonId) {\n            axios.get('/api/schedules/navbar/' + currentSeasonId)\n                .then((response) => {\n                    const storeDivArray = response.data.map((storeDiv) => {\n                        return {\n                            id: storeDiv.store_division,\n                            text: storeDiv.store_city + ' (' + storeDiv.day_name + ')',\n                            href: '/' + storeDiv.store_id + '/' + storeDiv.division_id,\n                        };\n                    });\n                    setStoreDivisionArr(storeDivArray);\n                })\n                .catch(error => console.log(error));\n        }\n    }, [currentSeasonId]);\n\n    return (\n        <div className=\"row mt-1 mb-4\">\n            <div className=\"col-12 justify-content-center text-center\">\n                <NavButton buttonText=\"Standings\" url=\"/standings\" />\n                <NavDropdown buttonText=\"Results +\" urlPrefix=\"/results\" listItems={storeDivisionArr} />\n                {displaySchedule === 1 &&\n                    <NavDropdown buttonText=\"Schedule +\" urlPrefix=\"/schedule\" listItems={storeDivisionArr} />\n                }\n            </div >\n        </div >\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './css/footer.css';\n\nfunction Footer() {\n    return (\n        <div className=\"row mt-3 bg-footer\">\n            <div className=\"col-6 text-center p-3 border-right\">\n                <p className=\"mb-3\"><b>Brought to you by:</b></p>\n                <p className=\"mb-1\"><a href=\"https://www.winkinglizard.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Winking Lizard Tavern</a></p>\n                <p className=\"mb-1 small\">and</p>\n                <p className=\"m-0\"><a href=\"http://www.bellmusicco.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Bell Music Company</a></p>\n            </div>\n            <div className=\"col-6 text-center p-3 small border-left\">\n                <h5 className=\"mb-5\"><a href=\"mailto:ktaylor@bellmusicco.com\">Contact Us</a></h5>\n                <p>&copy; 2010 Skeeball World Tour</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/home';\nimport Rules from './pages/rules/rules';\nimport Standings from './pages/standings/standings';\nimport Search from './pages/search/search';\nimport Champions from './pages/champions/champions';\nimport Players from './pages/players/players';\nimport Teams from './pages/teams/teams';\nimport Results from './pages/results/results';\nimport Schedule from './pages/schedule/schedule';\nimport AllTime from './pages/allTime/allTime';\nimport Leaders from './pages/leaders/leaders';\nimport Qualifiers from './pages/qualifiers/qualifiers';\nimport NoMatch from './pages/noMatch/noMatch';\nimport Header from './components/header/header';\nimport NavBar from './components/navbar/navbar';\nimport Footer from './components/footer/footer';\nimport SettingsContext from './context/settingsContext';\nimport axios from 'axios';\nimport './css/style.css';\nimport './css/my_style.css';\n\nexport default function App() {\n    const [settings, setSettings] = useState({});\n\n    useEffect(() => {\n        axios.get('/api/settings')\n            .then((response) => {\n                response.data[0] ? setSettings(response.data[0]) : setSettings({});\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"container border bg-white\">\n                <SettingsContext.Provider value={settings}>\n                    <Header />\n                    <NavBar />\n                    <Switch>\n                        <Route exact path=\"/\"><Home /></Route>\n                        <Route exact path=\"/rules\" component={Rules} />\n                        <Route exact path=\"/standings\" component={Standings} />\n                        <Route exact path=\"/teams/:teamid\" component={Teams} />\n                        <Route exact path=\"/players/:playerid\" component={Players} />\n                        <Route exact path=\"/results/:storeid/:divisionid/:seasonid?\" component={Results} />\n                        <Route exact path=\"/schedule/:storeid/:divisionid/:seasonid?\" component={Schedule} />\n                        <Route exact path=\"/leaders\" component={Leaders} />\n                        <Route exact path=\"/all-time\" component={AllTime} />\n                        <Route exact path=\"/qualifiers\" component={Qualifiers} />\n                        <Route exact path=\"/champions\" component={Champions} />\n                        <Route path=\"/search/:searchstring\" component={Search} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                    <Footer />\n                </SettingsContext.Provider>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/skeeball_logo.102ce1b8.png\";"],"sourceRoot":""}