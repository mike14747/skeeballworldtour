{"version":3,"sources":["context/settingsContext.js","pages/home/home.js","components/pageHeading/pageHeading.js","pages/rules/rules.js","components/seasonDropdown/seasonDropdown.js","pages/standings/standings.js","pages/search/search.js","pages/champions/champions.js","components/statsBlock/subcomponents/statsBlockItem/statsBlockItem.js","components/statsBlock/statsBlock.js","pages/players/players.js","components/resultsDiv/subcomponents/resultsThead/resultsThead.js","components/resultsDiv/subcomponents/resultsTbody/resultsTbody.js","components/resultsDiv/subcomponents/resultsTfoot/resultsTfoot.js","components/resultsDiv/resultsDiv.js","pages/teams/teams.js","pages/results/results.js","components/scheduleTable/subcomponents/scheduleRow/scheduleRow.js","components/scheduleTable/scheduleTable.js","pages/schedule/schedule.js","components/numLeadersDropdown/numLeadersDropdown.js","pages/allTime/allTime.js","components/leadersTable/leadersTable.js","pages/leaders/leaders.js","pages/qualifiers/qualifiers.js","pages/noMatch/noMatch.js","components/header/subcomponents/searchbar/searchbar.js","components/header/subcomponents/headerNav/headerNav.js","components/header/subcomponents/joinFun/joinFun.js","components/header/header.js","components/navbar/subcomponents/navDropdown/navDropdown.js","components/navbar/subcomponents/navButton/navButton.js","components/navbar/navbar.js","components/footer/footer.js","App.js","index.js","components/header/images/skeeball_logo.png"],"names":["SettingsContext","createContext","Home","settings","useContext","showRegButton","show_reg_button","regButtonUrl","reg_button_url","regButtonText","reg_button_text","useState","newsArr","setNewsArr","errorMsg","undefined","isLoaded","newsStatus","setNewsStatus","useEffect","axios","get","then","response","data","catch","error","console","log","className","href","src","alt","ReactHtmlParser","length","map","news","i","key","page_id","content_heading","text_date1","page_content","PageHeading","props","text","Rules","rules","setRules","rulesStatus","setRulesStatus","Dropdown","currentSeason","buttonText","listItems","handleSeasonId","season_name","season_year","item","season_id","onClick","Standings","seasonId","setSeasonId","currentSeasonId","current_season_id","querySeasonId","seasonName","setSeasonName","standingsArr","setStandingsArr","standingsArrStatus","setStandingsArrStatus","standingsSeasons","setStandingsSeasons","standingsSeasonsStatus","setStandingsSeasonsStatus","seasonArray","season","year","storeDiv","index","store_city","day_name","standing","standings_id","team_id","team_name","wins","losses","ties","total_points","Search","searchstring","useParams","playerArray","setPlayerArray","teamArray","setTeamArray","player","player_id","full_name","cities","team","Champions","champions","setChampions","championsStatus","setChampionsStatus","champion","tourny_team_id","comments","StatsBlockItem","stats","stat","StatsBlock","Players","playerid","playerNameStores","setPlayerNameStores","playerNameStoresStatus","setPlayerNameStoresStatus","currentViewStores","setCurrentViewStores","currentViewStoresStatus","setCurrentViewStoresStatus","playerSeasons","setPlayerSeasons","playerSeasonsStatus","setPlayerSeasonsStatus","playerStats","setPlayerStats","playerStatsStatus","setPlayerStatsStatus","playerResults","setPlayerResults","playerResultsStatus","setPlayerResultsStatus","stores","formattedPlayerStats","formattedPlayerResults","game","result","id","week_id","scores","score","total","ResultsThead","teamId","teamName","ResultsTbody","players","name","ResultsTfoot","gameTotals","gameResults","teamTotal","ResultsDiv","results","date","away_team","game_totals","game_results","team_total","colSpan","home_team","Teams","teamid","teamNameStores","setTeamNameStores","teamNameStoresStatus","setTeamNameStoresStatus","teamSeasons","setTeamSeasons","teamSeasonsStatus","setTeamSeasonsStatus","teamStats","setTeamStats","teamStatsStatus","setTeamStatsStatus","teamSchedule","setTeamSchedule","teamScheduleStatus","setTeamScheduleStatus","teamPlayers","setTeamPlayers","teamPlayersStatus","setTeamPlayersStatus","teamResults","setTeamResults","teamResultsStatus","setTeamResultsStatus","one_game_low","Number","one_game_avg","toFixed","one_game_high","ten_game_low","ten_game_avg","ten_game_high","games_played","avg_score","schedule","away_team_id","away_team_name","home_team_id","home_team_name","alley","start_time","week_date1","Results","storeid","divisionid","setResults","resultsStatus","setResultsStatus","store","setStore","storeStatus","setStoreStatus","resultSeasons","setResultSeasons","resultSeasonsStatus","setResultSeasonsStatus","store_id","division_id","store_name","ScheduleRow","weekId","matchup","ScheduleTable","schedules","week","matchups","Schedule","scheduleArray","setScheduleArray","scheduleArrayStatus","setScheduleArrayStatus","scheduleSeasons","setScheduleSeasons","scheduleSeasonsStatus","setScheduleSeasonsStatus","NumLeadersDropdown","numLeaders","numLeadersArray","setNumLeaders","defaultValue","leaders","value","AllTime","LeadersTable","heading","subHeading","columnName","columnData","format","leadersObj","leader","rank","field_id","field_name","numAtTieValue","tieValue","Leaders","defaultNumLeaders","num_leaders","queryNumLeaders","indAvgLeaders","setIndAvgLeaders","indAvgLeadersStatus","setIndAvgLeadersStatus","indOneGameLeaders","setIndOneGameLeaders","indOneGameLeadersStatus","setIndOneGameLeadersStatus","indTenGameLeaders","setIndTenGameLeaders","indTenGameLeadersStatus","setIndTenGameLeadersStatus","teamAvgLeaders","setTeamAvgLeaders","teamAvgLeadersStatus","setTeamAvgLeadersStatus","teamOneGameLeaders","setTeamOneGameLeaders","teamOneGameLeadersStatus","setTeamOneGameLeadersStatus","teamTenGameLeaders","setTeamTenGameLeaders","teamTenGameLeadersStatus","setTeamTenGameLeadersStatus","leadersSeasons","setLeadersSeasons","leadersSeasonsStatus","setLeadersSeasonsStatus","Qualifers","NoMatch","SearchBar","searchInput","setSearchInput","submitted","setSubmitted","onSubmit","e","preventDefault","type","maxLength","placeholder","onChange","event","target","to","HeaderNav","JoinFun","text_box_heading","text_box_text","Header","skeeballLogo","NavDropdown","data-toggle","urlPrefix","NavButton","url","NavBar","displaySchedule","display_schedule","storeDivisionArr","setStoreDivisionArr","storeDivArray","store_division","Footer","rel","App","setSettings","Provider","exact","path","component","Qualifiers","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2f6527d6.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst SettingsContext = createContext({});\n\nexport default SettingsContext;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport SettingsContext from '../../context/settingsContext';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\n\nfunction Home() {\n    const settings = useContext(SettingsContext);\n\n    const showRegButton = settings.show_reg_button;\n    const regButtonUrl = settings.reg_button_url;\n    const regButtonText = settings.reg_button_text;\n\n    const [newsArr, setNewsArr] = useState([]);\n    const [newsStatus, setNewsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    useEffect(() => {\n        axios.get('/api/pages/homepage-news')\n            .then((response) => {\n                setNewsArr(response.data);\n                setNewsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setNewsStatus({ errorMsg: 'An error occurred fetching league news!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <div>\n            {showRegButton === 1 && regButtonUrl && regButtonText &&\n                <div>\n                    <div className=\"text-center\">\n                        <a href={regButtonUrl}><img src=\"/images/register_now.jpg\" alt=\"REGISTER NOW!\" /></a>\n                        {ReactHtmlParser(regButtonText)}\n                    </div>\n                </div>\n            }\n\n            {!newsStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : newsArr && newsArr.length > 0\n                    ? <Fragment>\n                        {newsArr.map((news, i) => (\n                            <div key={news.page_id}>\n                                {i > 0 && <hr className=\"mt-4 mb-4\" />}\n                                <h5 className=\"text-danger mt-1 mb-0\">{news.content_heading}</h5>\n                                <p><span className=\"small\">{news.text_date1}</span></p>\n                                {ReactHtmlParser(news.page_content)}\n                            </div>\n                        ))}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see league news!</div>\n\n            }\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeading = (props) => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center\">{props.text}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nPageHeading.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageHeading;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport axios from 'axios';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Rules = () => {\n    const [rules, setRules] = useState(null);\n    const [rulesStatus, setRulesStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    useEffect(() => {\n        axios.get('/api/pages/rules')\n            .then((response) => {\n                response.data[0] && setRules(response.data[0]);\n                setRulesStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setRulesStatus({ errorMsg: 'An error occurred fetching league rules!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            {!rulesStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : rules\n                    ? <Fragment>\n                        <PageHeading text={rules.content_heading} />\n                        {ReactHtmlParser(rules.page_content)}\n                    </Fragment>\n                    : <div className=\"text-center empty-result\">Please check back again soon to see the rules!</div>\n\n            }\n        </Fragment>\n    );\n};\n\nexport default Rules;\n","import React, { Fragment } from 'react';\nimport './css/seasonDropdown.css';\nimport PropTypes from 'prop-types';\n\nfunction Dropdown({ currentSeason, buttonText, listItems, handleSeasonId }) {\n    return (\n        <Fragment>\n            {currentSeason &&\n                <Fragment>\n                    <span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentSeason.season_name}, {currentSeason.season_year}</span>\n                </Fragment>\n            }\n            <div className=\"dropdown ml-2\">\n                <button className=\"dropbtn\">{buttonText}<i className=\"down\"></i></button>\n                <ul className=\"dropdown-content\">\n                    {listItems.map(item => (\n                        <Fragment key={item.season_id}>\n                            {currentSeason && (item.season_id === currentSeason.season_id)\n                                ? <li className=\"viewing\">{item.text}</li>\n                                : <li onClick={() => handleSeasonId(item.season_id)}>{item.text}</li>\n                            }\n                        </Fragment>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n}\n\nDropdown.propTypes = {\n    currentSeason: PropTypes.object,\n    buttonText: PropTypes.string,\n    listItems: PropTypes.array,\n    handleSeasonId: PropTypes.func,\n};\n\nexport default Dropdown;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\n\nexport default function Standings() {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [standingsArr, setStandingsArr] = useState(null);\n    const [standingsArrStatus, setStandingsArrStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [standingsSeasons, setStandingsSeasons] = useState(null);\n    const [standingsSeasonsStatus, setStandingsSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/standings/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setStandingsSeasons(seasonArray);\n                setStandingsSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setStandingsSeasons(null);\n                setStandingsSeasonsStatus({ errorMsg: 'An error occurred fetching the standings!', isLoaded: true });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/standings/seasons/' + querySeasonId)\n                .then((response) => {\n                    setStandingsArr(response.data);\n                    setStandingsArrStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStandingsArr(null);\n                    setStandingsArrStatus({ errorMsg: 'An error occurred fetching the standings!', isLoaded: true });\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Standings\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-12 text-right p-2\">\n                    {standingsSeasonsStatus.isLoaded && standingsSeasons && standingsSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Standings From\" listItems={standingsSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            {!standingsArrStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : standingsArr && standingsArr.length > 0\n                    ? <Fragment>\n                        {standingsArr.map((storeDiv, index) => (\n                            <div key={index}>\n                                <h5 className=\"text-center\">{storeDiv[0].store_city} - {storeDiv[0].day_name}</h5>\n                                <div className=\"d-flex justify-content-center mb-4\">\n                                    <div className=\"min-w-50 mx-auto table-wrapper\">\n                                        <table className=\"table table-bordered mb-4 text-center\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th className=\"text-left\">TEAM</th>\n                                                    <th>W</th>\n                                                    <th>L</th>\n                                                    <th>T</th>\n                                                    <th>TOTAL POINTS</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {standingsArr[index].map((standing) => (\n                                                    <tr key={standing.standings_id}>\n                                                        <td className=\"text-left\"><a href={'/teams/' + standing.team_id}>{standing.team_name}</a></td>\n                                                        <td>{standing.wins}</td>\n                                                        <td>{standing.losses}</td>\n                                                        <td>{standing.ties}</td>\n                                                        <td>{standing.total_points}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </Fragment>\n                    : standingsArr\n                        ? <span className=\"empty-result\">There are no standings for this season!</span>\n                        : <span className=\"empty-result\">{standingsArrStatus.errorMsg}</span>\n            }\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nexport default function Search() {\n    const { searchstring } = useParams();\n    const [playerArray, setPlayerArray] = useState([]);\n    const [teamArray, setTeamArray] = useState([]);\n    useEffect(() => {\n        axios.get('/api/searches/players/' + searchstring)\n            .then((response) => {\n                setPlayerArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        axios.get('/api/searches/teams/' + searchstring)\n            .then((response) => {\n                setTeamArray(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [searchstring]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Search Results\" />\n            <p className=\"text-center\"><b>Search Results for:</b> {searchstring}</p>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Player Matches:</b> {playerArray.length}</p>\n                    {playerArray.map(player => (\n                        <p key={player.player_id}><a href={'/players/' + player.player_id}>{player.full_name}</a> ({player.cities})</p>\n                    ))}\n                </div>\n                <div className=\"col-6\">\n                    <p className=\"text-success\"><b>Team Matches:</b> {teamArray.length}</p>\n                    {teamArray.map(team => (\n                        <p key={team.team_id}><a href={'/teams/' + team.team_id}>{team.team_name}</a> ({team.cities})</p>\n                    ))}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport axios from 'axios';\n\nconst Champions = () => {\n    const [champions, setChampions] = useState(null);\n    const [championsStatus, setChampionsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    useEffect(() => {\n        axios.get('/api/seasons/champions')\n            .then((response) => {\n                setChampions(response.data);\n                setChampionsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setChampions(null);\n                setChampionsStatus({ errorMsg: 'An error occurred fetching champions!', isLoaded: true });\n            });\n    }, []);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Champions\" />\n            {!championsStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : champions && champions.length > 0\n                    ? <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <table className=\"table table-bordered table-hover\">\n                                <thead>\n                                    <tr className=\"bg-gray6\">\n                                        <th>Season</th>\n                                        <th>Champion</th>\n                                        <th>Store</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {champions.map((champion) => (\n                                        <tr key={champion.season_id}>\n                                            <td>{champion.season_name}-{champion.year}</td>\n                                            <td><a href={'/teams/' + champion.tourny_team_id}>{champion.team_name}</a>{champion.comments.length > 0 && <span className=\"small ml-2\">*({champion.comments})</span>}</td>\n                                            <td>{champion.store_city}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    : champions\n                        ? <span className=\"empty-result\">There are no champions to display!</span>\n                        : <span className=\"empty-result\">{championsStatus.errorMsg}</span>\n            }\n        </Fragment>\n    );\n};\n\nexport default Champions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './css/statsBlockItem.css';\n\nconst StatsBlockItem = (props) => {\n    return (\n        props.stats.map((stat, index) => (\n            <tr key={index}>\n                <td className=\"bg-stat-heading font-weight-bolder text-right\">{stat.text}</td>\n                <td className=\"text-center px-4\">{stat.data}</td>\n            </tr>\n        ))\n    );\n};\n\nStatsBlockItem.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatsBlockItem from './subcomponents/statsBlockItem/statsBlockItem';\n\nconst StatsBlock = (props) => {\n    return (\n        <table className=\"table table-bordered table-hover\">\n            <tbody>\n                <StatsBlockItem stats={props.stats} />\n            </tbody>\n        </table>\n    );\n};\n\nStatsBlock.propTypes = {\n    stats: PropTypes.array,\n};\n\nexport default StatsBlock;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nconst Players = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { playerid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [playerNameStores, setPlayerNameStores] = useState(null);\n    const [playerNameStoresStatus, setPlayerNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerSeasons, setPlayerSeasons] = useState(null);\n    const [playerSeasonsStatus, setPlayerSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerStats, setPlayerStats] = useState(null);\n    const [playerStatsStatus, setPlayerStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [playerResults, setPlayerResults] = useState(null);\n    const [playerResultsStatus, setPlayerResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/players/' + playerid + '/name-store')\n            .then((response) => {\n                response.data[0] ? setPlayerNameStores(response.data[0]) : setPlayerNameStores([]);\n                setPlayerNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerNameStores(null);\n                setPlayerNameStoresStatus({ errorMsg: 'An error occurred fetching info for this Player!', isLoaded: true });\n            });\n        axios.get('/api/players/' + playerid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setPlayerSeasons(seasonArray);\n                setPlayerSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setPlayerSeasons(null);\n                setPlayerSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this player!', isLoaded: true });\n            });\n    }, [playerid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/players/' + playerid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/players/' + playerid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data) {\n                        setPlayerStats(response.data.formattedPlayerStats);\n                        setPlayerResults(response.data.formattedPlayerResults);\n                    } else {\n                        setPlayerStats([]);\n                        setPlayerResults([]);\n                    }\n                    setPlayerStatsStatus({ errorMsg: undefined, isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setPlayerStats(null);\n                    setPlayerResults(null);\n                    setPlayerStatsStatus({ errorMsg: 'An error occurred fetching stats for this Player!', isLoaded: true });\n                    setPlayerResultsStatus({ errorMsg: 'An error occurred fetching results for this Player!', isLoaded: true });\n                });\n        }\n    }, [playerid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Player Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {playerNameStoresStatus.isLoaded && playerNameStores &&\n                        <div className=\"mb-3\">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Player: </span>{playerNameStores.full_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {playerNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {playerSeasonsStatus.isLoaded && playerSeasons && playerSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={playerSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto\">\n                    {!playerStatsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerStats && playerStats.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                <StatsBlock stats={playerStats} />\n                            </Fragment>\n                            : playerStats\n                                ? <span className=\"empty-result\">There are no player stats for this season!</span>\n                                : <span className=\"empty-result\">{playerStatsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"mx-auto table-wrapper\">\n                    {!playerResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : playerResults && playerResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Week by Week Results</h5>\n                                <table className=\"table table-bordered table-hover mb-0\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th>Week # - Team</th>\n                                            {gamesArray.map((game, i) => (\n                                                <th key={i} className=\"text-center\">{game}</th>\n                                            ))}\n                                            <th className=\"text-center\">Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {playerResults.map((result) => (\n                                            <tr key={result.id}>\n                                                <td>{result.week_id} - <a href={'/teams/' + result.team_id}>{result.team_name}</a></td>\n                                                {result.scores.map((score, index) => (\n                                                    <td key={index} className=\"text-center\">{score}</td>\n                                                ))}\n                                                <td className=\"text-center\">{result.total}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : playerResults\n                                ? <span className=\"empty-result\">There are no player results for this season!</span>\n                                : <span className=\"empty-result\">{playerResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n};\n\nexport default Players;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsThead = ({ teamId, teamName, wins, losses, ties }) => {\n    const gamesArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td><a href={'/teams/' + teamId}>{teamName}</a> (<span className={'text-' + (wins > losses ? 'success' : (wins < losses ? 'danger' : 'primary'))}>{wins}-{losses}-{ties}</span>)</td>\n                {gamesArray.map((game, i) => (\n                    <td key={i} className=\"text-center\">{game}</td>\n                ))}\n                <td className=\"text-center\">Total</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsThead.propTypes = {\n    teamId: PropTypes.number,\n    teamName: PropTypes.string,\n    wins: PropTypes.number,\n    losses: PropTypes.number,\n    ties: PropTypes.number,\n};\n\nexport default ResultsThead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTbody = ({ players }) => {\n    return (\n        <tbody>\n            {players.map((player, index) => (\n                <tr key={index} className=\"bg-white\">\n                    <td><a href={'/players/' + player.player_id}>{player.name}</a></td>\n                    {player.scores.map((score, i) => (\n                        <td key={i} className=\"text-center\">{score}</td>\n                    ))}\n                    <td className=\"text-center\">{player.total_points}</td>\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nResultsTbody.propTypes = {\n    players: PropTypes.array,\n};\n\nexport default ResultsTbody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ResultsTfoot = ({ gameTotals, gameResults, teamTotal }) => {\n    return (\n        <tbody>\n            <tr className=\"bg-gray6 font-weight-bolder\">\n                <td>Total</td>\n                {gameTotals.map((total, i) => (\n                    <td key={i} className=\"text-center\"><span className={'text-' + (gameResults[i] === 'w' ? 'success' : (gameResults[i] === 'l' ? 'danger' : 'primary'))}>{total}</span></td>\n                ))}\n                <td className=\"text-center\">{teamTotal}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nResultsTfoot.propTypes = {\n    gameTotals: PropTypes.array,\n    gameResults: PropTypes.array,\n    teamTotal: PropTypes.number,\n};\n\nexport default ResultsTfoot;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsThead from './subcomponents/resultsThead/resultsThead';\nimport ResultsTbody from './subcomponents/resultsTbody/resultsTbody';\nimport ResultsTfoot from './subcomponents/resultsTfoot/resultsTfoot';\n\nconst ResultsDiv = ({ results }) => {\n    return (\n        <Fragment>\n            {results.map((result) => (\n                <Fragment key={result.id}>\n                    <h5 className=\"text-center text-success\">Week {result.week_id} ({result.date})</h5>\n                    <div className=\"p-1 mb-4 border border-secondary table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-1\">\n                            <ResultsThead teamId={result.away_team.team_id} teamName={result.away_team.team_name} wins={result.away_team.wins} losses={result.away_team.losses} ties={result.away_team.ties} />\n                            <ResultsTbody players={result.away_team.players} />\n                            <ResultsTfoot gameTotals={result.away_team.game_totals} gameResults={result.away_team.game_results} teamTotal={result.away_team.team_total} />\n                            <tbody><tr><td colSpan=\"12\" className=\"border-0\"></td></tr></tbody>\n                            <ResultsThead teamId={result.home_team.team_id} teamName={result.home_team.team_name} wins={result.home_team.wins} losses={result.home_team.losses} ties={result.home_team.ties} />\n                            <ResultsTbody players={result.home_team.players} />\n                            <ResultsTfoot gameTotals={result.home_team.game_totals} gameResults={result.home_team.game_results} teamTotal={result.home_team.team_total} />\n                        </table>\n                    </div>\n                </Fragment>\n            ))}\n        </Fragment>\n    );\n};\n\nResultsDiv.propTypes = {\n    results: PropTypes.array,\n};\n\nexport default ResultsDiv;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport StatsBlock from '../../components/statsBlock/statsBlock';\n\nexport default function Teams() {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { teamid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [teamNameStores, setTeamNameStores] = useState(null);\n    const [teamNameStoresStatus, setTeamNameStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [currentViewStores, setCurrentViewStores] = useState(null);\n    const [currentViewStoresStatus, setCurrentViewStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamSeasons, setTeamSeasons] = useState(null);\n    const [teamSeasonsStatus, setTeamSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamStats, setTeamStats] = useState(null);\n    const [teamStatsStatus, setTeamStatsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamSchedule, setTeamSchedule] = useState(null);\n    const [teamScheduleStatus, setTeamScheduleStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamPlayers, setTeamPlayers] = useState(null);\n    const [teamPlayersStatus, setTeamPlayersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamResults, setTeamResults] = useState(null);\n    const [teamResultsStatus, setTeamResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/teams/' + teamid + '/store-name')\n            .then((response) => {\n                response.data[0] ? setTeamNameStores(response.data[0]) : setTeamNameStores([]);\n                setTeamNameStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamNameStores(null);\n                setTeamNameStoresStatus({ errorMsg: 'An error occurred fetching info for this team!', isLoaded: true });\n            });\n        axios.get('/api/teams/' + teamid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setTeamSeasons(seasonArray);\n                setTeamSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setTeamSeasons(null);\n                setTeamSeasonsStatus({ errorMsg: 'An error occurred fetching stats for this team!', isLoaded: true });\n            });\n    }, [teamid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/teams/' + teamid + '/current-stores/season/' + querySeasonId)\n                .then((response) => {\n                    response.data[0] ? setCurrentViewStores({ stores: response.data[0].stores }) : setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setCurrentViewStores(null);\n                    setCurrentViewStoresStatus({ errorMsg: undefined, isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/seasons/' + querySeasonId)\n                .then((response) => {\n                    if (response.data[2][0]) {\n                        setTeamStats([\n                            { text: 'Record:', data: response.data[2][0].wins + '-' + response.data[2][0].losses + '-' + response.data[2][0].ties },\n                            { text: 'Total Points:', data: response.data[2][0].total_points },\n                            { text: '1-Game Low:', data: response.data[2][0].one_game_low },\n                            { text: '1-Game Avg:', data: Number(response.data[2][0].one_game_avg).toFixed(1) },\n                            { text: '1-Game High:', data: response.data[2][0].one_game_high },\n                            { text: '10-Game Low:', data: response.data[2][0].ten_game_low },\n                            { text: '10-Game Avg:', data: Number(response.data[2][0].ten_game_avg).toFixed(1) },\n                            { text: '10-Game High:', data: response.data[2][0].ten_game_high },\n                        ]);\n                    } else {\n                        setTeamStats([]);\n                    }\n                    setTeamStatsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamStats(null);\n                    setTeamStatsStatus({ errorMsg: 'An error occurred fetching stats for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/current-schedule/seasons/' + querySeasonId)\n                .then((response) => {\n                    response.data[2] ? setTeamSchedule(response.data[2]) : setTeamSchedule([]);\n                    setTeamScheduleStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamSchedule(null);\n                    setTeamScheduleStatus({ errorMsg: 'An error occurred fetching the schedule for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/players/seasons/' + querySeasonId)\n                .then((response) => {\n                    setTeamPlayers(response.data);\n                    setTeamPlayersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamPlayers(null);\n                    setTeamPlayersStatus({ errorMsg: 'An error occurred fetching players for this team!', isLoaded: true });\n                });\n            axios.get('/api/teams/' + teamid + '/results/seasons/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setTeamResults(response.data) : setTeamResults([]);\n                    setTeamResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamResults(null);\n                    setTeamResultsStatus({ errorMsg: 'An error occurred fetching the schedule for this team!', isLoaded: true });\n                });\n        }\n    }, [teamid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Team Stats\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {teamNameStoresStatus.isLoaded && teamNameStores &&\n                        <div className=\"mb-3 \">\n                            <div className=\"bigger font-weight-bolder\"><span className=\"text-danger\">Team: </span>{teamNameStores.team_name}</div>\n                            <div><span className=\"small\">Career Store(s):</span> {teamNameStores.cities}</div>\n                            {currentViewStoresStatus.isLoaded && currentViewStores.stores &&\n                                <div><span className=\"small\">Current View:</span> <span className=\"font-weight-bolder\">{currentViewStores.stores}</span></div>\n                            }\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {teamSeasonsStatus.isLoaded && teamSeasons && teamSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={teamSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamPlayersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamPlayers && teamPlayers.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Players</h5>\n                                        <table className=\"table table-bordered table-hover\">\n                                            <thead>\n                                                <tr className=\"bg-gray6\">\n                                                    <th>Player</th>\n                                                    <th className=\"text-center\">Games</th>\n                                                    <th className=\"text-center\">Average</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {teamPlayers.map((player) => (\n                                                    <tr key={player.player_id}>\n                                                        <td><a href={'/players/' + player.player_id}>{player.full_name}</a></td>\n                                                        <td className=\"text-center\">{player.games_played}</td>\n                                                        <td className=\"text-center\">{Number(player.avg_score).toFixed(1)}</td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </Fragment>\n                                    : teamPlayers\n                                        ? <span className=\"empty-result\">There are no players on this team in the selected season!</span>\n                                        : <span className=\"empty-result\">{teamPlayersStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            {!teamStatsStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamStats && teamStats.length > 0\n                                    ? <Fragment>\n                                        <h5 className=\"text-center\">Detailed Breakdown</h5>\n                                        <StatsBlock stats={teamStats} />\n                                    </Fragment>\n                                    : teamStats\n                                        ? <span className=\"empty-result\">There are no team stats for the selected season!</span>\n                                        : <span className=\"empty-result\">{teamStatsStatus.errorMsg}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamScheduleStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamSchedule && teamSchedule.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Schedule</h5>\n                                <table className=\"table table-bordered table-hover\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th className=\"text-center\">WEEK #</th>\n                                            <th>Away Team</th>\n                                            <th>Home Team</th>\n                                            <th className=\"text-center\">Alley</th>\n                                            <th>Start Time</th>\n                                            <th>Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {teamSchedule.map((schedule) => (\n                                            <tr key={schedule.week_id} className=\"bg-white\">\n                                                <td className=\"text-center\">{schedule.week_id}</td>\n                                                <td><a href={'/teams/' + schedule.away_team_id}>{schedule.away_team_name}</a></td>\n                                                <td><a href={'/teams/' + schedule.home_team_id}>{schedule.home_team_name}</a></td>\n                                                <td className=\"text-center\">{schedule.alley}</td>\n                                                <td>{schedule.start_time}</td>\n                                                <td>{schedule.week_date1}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Fragment>\n                            : teamSchedule\n                                ? <span className=\"empty-result\">There is no schedule for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamScheduleStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!teamResultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : teamResults && teamResults.length > 0\n                            ? <Fragment>\n                                <h5 className=\"text-center\">Weekly Results</h5>\n                                <ResultsDiv results={teamResults} />\n                            </Fragment>\n                            : teamResults\n                                ? <span className=\"empty-result\">There are no results for this team in the selected season!</span>\n                                : <span className=\"empty-result\">{teamResultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport ResultsDiv from '../../components/resultsDiv/resultsDiv';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Results = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [results, setResults] = useState(null);\n    const [resultsStatus, setResultsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [resultSeasons, setResultSeasons] = useState(null);\n    const [resultSeasonsStatus, setResultSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setResultSeasons(seasonArray);\n                setResultSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setResultSeasons(null);\n                setResultSeasonsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore(null);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching the store name!', isLoaded: true });\n                });\n            axios.get('/api/results/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    response.data ? setResults(response.data) : setResults(null);\n                    setResultsStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setResults(null);\n                    setResultsStatus({ errorMsg: 'An error occurred fetching results!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Results\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {resultSeasonsStatus.isLoaded && resultSeasons && resultSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Stats From\" listItems={resultSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!resultsStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : results && results.length > 0\n                            ? <ResultsDiv results={results} />\n                            : results\n                                ? <span className=\"empty-result\">There are no results for this season!</span>\n                                : <span className=\"empty-result\">{resultsStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScheduleRow = ({ weekId, matchup }) => {\n    return (\n        <tr key={`${weekId}${matchup.home_team_id}`} className=\"bg-white\">\n            <td><a href={'/teams/' + matchup.away_team_id}>{matchup.away_team}</a></td>\n            <td><a href={'/teams/' + matchup.home_team_id}>{matchup.home_team}</a></td>\n            <td className=\"text-center\">{matchup.alley}</td>\n            <td>{matchup.start_time}</td>\n        </tr>\n    );\n};\n\nScheduleRow.propTypes = {\n    weekId: PropTypes.number,\n    matchup: PropTypes.object,\n};\n\nexport default ScheduleRow;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ScheduleRow from './subcomponents/scheduleRow/scheduleRow';\n\nconst ScheduleTable = ({ schedules }) => {\n    return (\n        <Fragment>\n            {schedules.map((week) => (\n                <div key={week.week_id} className=\"mb-5\">\n                    <h5 className=\"text-center text-success mb-4\">Week {week.week_id} ({week.week_date1})</h5>\n                    <div className=\"mb-3 table-wrapper\">\n                        <table className=\"table table-bordered table-hover mb-2\">\n                            <thead>\n                                <tr className=\"bg-gray6\">\n                                    <th>Away Team</th>\n                                    <th>Home Team</th>\n                                    <th className=\"text-center\">Alley</th>\n                                    <th>Start Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {week.matchups.map((matchup) => (\n                                    <Fragment key={`${week.week_id}${matchup.home_team_id}`}>\n                                        <ScheduleRow weekId={week.week_id} matchup={matchup} />\n                                    </Fragment>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            ))}\n        </Fragment>\n    );\n};\n\nScheduleTable.propTypes = {\n    schedules: PropTypes.array,\n};\n\nexport default ScheduleTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport ScheduleTable from '../../components/scheduleTable/scheduleTable';\n\nconst Schedule = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const { storeid, divisionid } = useParams();\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [scheduleArray, setScheduleArray] = useState(null);\n    const [scheduleArrayStatus, setScheduleArrayStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [scheduleSeasons, setScheduleSeasons] = useState(null);\n    const [scheduleSeasonsStatus, setScheduleSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [store, setStore] = useState(null);\n    const [storeStatus, setStoreStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/schedules/store/' + storeid + '/division/' + divisionid + '/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setScheduleSeasons(seasonArray);\n                setScheduleSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setScheduleSeasons(null);\n                setScheduleSeasonsStatus({ errorMsg: 'An error occurred fetching the season list for this store!', isLoaded: true });\n            });\n    }, [storeid, divisionid]);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('/api/stores/' + storeid + '/divisions/' + divisionid)\n                .then((response) => {\n                    response.data[0] ? setStore(response.data[0]) : setStore([]);\n                    setStoreStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setStore(null);\n                    setStoreStatus({ errorMsg: 'An error occurred fetching info for this store!', isLoaded: true });\n                });\n\n            axios('/api/schedules/store/' + storeid + '/division/' + divisionid + '/season/' + querySeasonId)\n                .then((response) => {\n                    setScheduleArray(response.data);\n                    setScheduleArrayStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setScheduleArray(null);\n                    setScheduleArrayStatus({ errorMsg: 'An error occurred fetching the schedule for this store!', isLoaded: true });\n                });\n        }\n    }, [storeid, divisionid, querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Schedule\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-6 text-left p-2\">\n                    {storeStatus.isLoaded && store &&\n                        <div className=\"mb-3 bigger\">\n                            <a href={'/stores/' + store.store_id + '/divisions/' + store.division_id}>{store.store_name} ({store.day_name})</a>\n                        </div>\n                    }\n                </div>\n                <div className=\"col-6 text-right p-2\">\n                    {scheduleSeasonsStatus.isLoaded && scheduleSeasons && scheduleSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Schedule From\" listItems={scheduleSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center mb-4\">\n                <div className=\"min-w-50 mx-auto\">\n                    {!scheduleArrayStatus.isLoaded\n                        ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                        : scheduleArray && scheduleArray.length > 0\n                            ? <Fragment>\n                                <ScheduleTable schedules={scheduleArray} />\n                            </Fragment>\n                            : scheduleArray\n                                ? <span className=\"empty-result\">There is no schedule available for this season!</span>\n                                : <span className=\"empty-result\">{scheduleArrayStatus.errorMsg}</span>\n                    }\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Schedule;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumLeadersDropdown({ numLeaders, numLeadersArray, setNumLeaders }) {\n    return (\n        <Fragment>\n            {numLeadersArray && numLeadersArray.length > 0 &&\n                <span className=\"small\">Currently showing top:</span>\n            }\n            <select className=\"ml-2\" defaultValue={numLeaders}>\n                {numLeadersArray.map(leaders => (\n                    <Fragment key={leaders}>\n                        {numLeaders === leaders\n                            ? <option>{leaders}</option>\n                            : <option value={leaders} onClick={() => setNumLeaders(leaders)}>{leaders}</option>\n                        }\n                    </Fragment>\n                ))}\n            </select>\n        </Fragment>\n    );\n}\n\nNumLeadersDropdown.propTypes = {\n    numLeaders: PropTypes.number,\n    numLeadersArray: PropTypes.array,\n    setNumLeaders: PropTypes.func,\n};\n\nexport default NumLeadersDropdown;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst AllTime = () => {\n    const [numLeaders, setNumLeaders] = useState(20);\n    const numLeadersArray = [10, 20, 50, 100];\n\n    useEffect(() => {\n\n    }, [numLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    <NumLeadersDropdown numLeaders={numLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                </div>\n                <div className=\"col-4 text-right p-2\">\n\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default AllTime;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LeadersTable = ({ heading, subHeading, columnName, columnData, format, href, leadersObj }) => {\n    return (\n        <Fragment>\n            <div className=\"text-center mb-4\">\n                <h5 className=\"text-success mb-0\">{heading}</h5>\n                {subHeading &&\n                    <span className=\"text-secondary small\">{subHeading}</span>\n                }\n            </div>\n            <table className=\"table table-bordered table-hover mb-5\">\n                <thead>\n                    <tr className=\"bg-gray6\">\n                        <th className=\"text-center\">Rank</th>\n                        <th className=\"text-left\">{columnName}</th>\n                        <th className=\"text-center\">{columnData}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {leadersObj.leaders.map((leader) => (\n                        <tr key={leader.key}>\n                            <td className=\"text-center\">{leader.rank}</td>\n                            <td><a href={`${href}${leader.field_id}`}>{leader.field_name}</a> ({leader.store_city})</td>\n                            <td className=\"text-center\">\n                                {format === 'decimal'\n                                    ? Number(leader.data).toFixed(1)\n                                    : Number(leader.data)\n                                }\n                            </td>\n                        </tr>\n                    ))}\n                    {leadersObj.numAtTieValue > 1 &&\n                        <tr>\n                            <td></td>\n                            <td className=\"text-right text-success\">{leadersObj.numAtTieValue} tied at:</td>\n                            <td className=\"text-center\">{leadersObj.tieValue}</td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </Fragment>\n    );\n};\n\nLeadersTable.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    columnName: PropTypes.string,\n    columnData: PropTypes.string,\n    format: PropTypes.string,\n    href: PropTypes.string,\n    leadersObj: PropTypes.object,\n};\n\nexport default LeadersTable;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\nimport SeasonDropdown from '../../components/seasonDropdown/seasonDropdown';\nimport LeadersTable from '../../components/leadersTable/leadersTable';\nimport NumLeadersDropdown from '../../components/numLeadersDropdown/numLeadersDropdown';\n\nconst Leaders = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    const [numLeaders, setNumLeaders] = useState(null);\n    const defaultNumLeaders = settings.num_leaders;\n    const queryNumLeaders = numLeaders || defaultNumLeaders;\n    const numLeadersArray = [10, 20, 50, 100];\n\n    const [indAvgLeaders, setIndAvgLeaders] = useState(null);\n    const [indAvgLeadersStatus, setIndAvgLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [indOneGameLeaders, setIndOneGameLeaders] = useState(null);\n    const [indOneGameLeadersStatus, setIndOneGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [indTenGameLeaders, setIndTenGameLeaders] = useState(null);\n    const [indTenGameLeadersStatus, setIndTenGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamAvgLeaders, setTeamAvgLeaders] = useState(null);\n    const [teamAvgLeadersStatus, setTeamAvgLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamOneGameLeaders, setTeamOneGameLeaders] = useState(null);\n    const [teamOneGameLeadersStatus, setTeamOneGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [teamTenGameLeaders, setTeamTenGameLeaders] = useState(null);\n    const [teamTenGameLeadersStatus, setTeamTenGameLeadersStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [leadersSeasons, setLeadersSeasons] = useState(null);\n    const [leadersSeasonsStatus, setLeadersSeasonsStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const handleSeasonId = season => setSeasonId(season);\n\n    useEffect(() => {\n        axios.get('/api/leaders/seasons-list')\n            .then((response) => {\n                const seasonArray = response.data.map((season) => {\n                    return {\n                        season_id: season.season_id,\n                        text: season.season_name + ' - ' + season.year,\n                    };\n                });\n                setLeadersSeasons(seasonArray);\n                setLeadersSeasonsStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setLeadersSeasons(null);\n                setLeadersSeasonsStatus({ errorMsg: 'An error occurred fetching leaders seasons!', isLoaded: true });\n            });\n    }, []);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n            axios.get('api/leaders/individual/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndAvgLeaders(response.data);\n                    setIndAvgLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndAvgLeaders(null);\n                    setIndAvgLeadersStatus({ errorMsg: 'An error occurred fetching player best average leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/individual/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndOneGameLeaders(response.data);\n                    setIndOneGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndOneGameLeaders(null);\n                    setIndOneGameLeadersStatus({ errorMsg: 'An error occurred fetching player 1-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/individual/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setIndTenGameLeaders(response.data);\n                    setIndTenGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setIndTenGameLeaders(null);\n                    setIndTenGameLeadersStatus({ errorMsg: 'An error occurred fetching player 10-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/average/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamAvgLeaders(response.data);\n                    setTeamAvgLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamAvgLeaders(null);\n                    setTeamAvgLeadersStatus({ errorMsg: 'An error occurred fetching team best average leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/one-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamOneGameLeaders(response.data);\n                    setTeamOneGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamOneGameLeaders(null);\n                    setTeamOneGameLeadersStatus({ errorMsg: 'An error occurred fetching team 1-game leaders!', isLoaded: true });\n                });\n            axios.get('api/leaders/team/ten-game/num-leaders/' + queryNumLeaders + '/season/' + querySeasonId)\n                .then((response) => {\n                    setTeamTenGameLeaders(response.data);\n                    setTeamTenGameLeadersStatus({ errorMsg: undefined, isLoaded: true });\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setTeamTenGameLeaders(null);\n                    setTeamTenGameLeadersStatus({ errorMsg: 'An error occurred fetching team 10-game leaders!', isLoaded: true });\n                });\n        }\n    }, [querySeasonId, queryNumLeaders]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"League Leaders\" />\n            <div className=\"row mb-4\">\n                <div className=\"col-4 text-left p-2\">\n                    Filter by: (Store / Division)\n                </div>\n                <div className=\"col-4 text-center p-2\">\n                    {queryNumLeaders &&\n                        <NumLeadersDropdown numLeaders={queryNumLeaders} numLeadersArray={numLeadersArray} setNumLeaders={setNumLeaders} />\n                    }\n                </div>\n                <div className=\"col-4 text-right p-2\">\n                    {leadersSeasonsStatus.isLoaded && leadersSeasons && leadersSeasons.length > 0 &&\n                        <SeasonDropdown currentSeason={seasonName} buttonText=\"View Leaders From\" listItems={leadersSeasons} handleSeasonId={handleSeasonId} />\n                    }\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Individual Leaders</h3>\n                            {!indAvgLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indAvgLeaders.leaders && indAvgLeaders.numAtTieValue && (indAvgLeaders.leaders.length > 0 || indAvgLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, high season average / game\" subHeading=\"(must play in a minimum of 50% of your team's games to qualify)\" columnName=\"Player\" columnData=\"Average\" format=\"decimal\" href=\"/players/\" leadersObj={indAvgLeaders} />\n                                    : indAvgLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no player average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indAvgLeadersStatus.errorMsg}</div>\n                            }\n                            {!indOneGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indOneGameLeaders.leaders && indOneGameLeaders.numAtTieValue && (indOneGameLeaders.leaders.length > 0 || indOneGameLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 1-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indOneGameLeaders} />\n                                    : indOneGameLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no player 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indOneGameLeadersStatus.errorMsg}</div>\n                            }\n                            {!indTenGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : indTenGameLeaders.leaders && indTenGameLeaders.numAtTieValue && (indTenGameLeaders.leaders.length > 0 || indTenGameLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Player, 10-game high\" columnName=\"Player\" columnData=\"Score\" format=\"integer\" href=\"/players/\" leadersObj={indTenGameLeaders} />\n                                    : indTenGameLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no player 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{indTenGameLeadersStatus.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <h3 className=\"text-center mb-4\">Team Leaders</h3>\n                            {!teamAvgLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamAvgLeaders.leaders && teamAvgLeaders.numAtTieValue && (teamAvgLeaders.leaders.length > 0 || teamAvgLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high average\" columnName=\"Team\" columnData=\"Average\" format=\"decimal\" href=\"/teams/\" leadersObj={teamAvgLeaders} />\n                                    : teamAvgLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no team average leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamAvgLeadersStatus.errorMsg}</div>\n                            }\n                            {!teamOneGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamOneGameLeaders.leaders && teamOneGameLeaders.numAtTieValue && (teamOneGameLeaders.leaders.length > 0 || teamOneGameLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 1-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamOneGameLeaders} />\n                                    : teamOneGameLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no team 1-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamOneGameLeadersStatus.errorMsg}</div>\n                            }\n                            {!teamTenGameLeadersStatus.isLoaded\n                                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                                : teamTenGameLeaders.leaders && teamTenGameLeaders.numAtTieValue && (teamTenGameLeaders.leaders.length > 0 || teamTenGameLeaders.numAtTieValue > 1)\n                                    ? <LeadersTable heading=\"Team, 10-game high\" columnName=\"Team\" columnData=\"Score\" format=\"integer\" href=\"/teams/\" leadersObj={teamTenGameLeaders} />\n                                    : teamTenGameLeaders.leaders\n                                        ? <div className=\"empty-result\">There are no team 10-game leaders for this season!</div>\n                                        : <div className=\"empty-result\">{teamTenGameLeadersStatus.errorMsg}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Leaders;\n","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst Qualifers = () => {\n    const settings = useContext(SettingsContext);\n\n    const [seasonId, setSeasonId] = useState(null);\n    const currentSeasonId = settings.current_season_id;\n    const querySeasonId = seasonId || currentSeasonId;\n\n    const [seasonName, setSeasonName] = useState(null);\n\n    useEffect(() => {\n        if (querySeasonId) {\n            axios.get('/api/seasons/' + querySeasonId + '/name')\n                .then((response) => {\n                    response.data[0] ? setSeasonName({ season_id: querySeasonId, season_name: response.data[0].season_name, season_year: response.data[0].year }) : setSeasonName(null);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSeasonName(null);\n                });\n        }\n    }, [querySeasonId]);\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Tournament Qualifiers\" />\n            {seasonName &&\n                <div>\n                    {seasonName.season_name}-{seasonName.season_year}\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default Qualifers;\n","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div className=\"m-5 bigger\">\n            <p className=\"text-danger\"><b>Error 404!</b></p>\n            <p>An error has occurred.</p>\n            <p>The page you are looking for does not exist!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './css/searchbar.css';\n\nfunction SearchBar() {\n    const [searchInput, setSearchInput] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    useEffect(() => {\n        if (submitted) {\n            setSearchInput('');\n            setSubmitted(false);\n        }\n    }, [submitted]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        searchInput.length > 0 && setSubmitted(true);\n    };\n\n    return (\n        <Fragment>\n            <form className=\"form-searchbar\" onSubmit={handleSubmit}>\n                <input type=\"text\" maxLength=\"20\" placeholder=\"Find Player/Team\" className=\"input-searchbar\" value={searchInput} onChange={event => setSearchInput(event.target.value)} />\n                <button type=\"submit\" name=\"submit\" className=\"search-button\">Go</button>\n            </form>\n            {submitted && <Redirect to={'/search/' + searchInput} />}\n        </Fragment>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './css/headerNav.css';\n\nconst HeaderNav = () => {\n    return (\n        <div className=\"h-nav-container\">\n            <span className=\"h-nav-burger\">&#9776;</span>\n            <ul className=\"h-nav-content\">\n                <a href=\"/champions\"><li className=\"nav-item\">Champions</li></a>\n                <a href=\"/rules\"><li className=\"nav-item\">Rules</li></a>\n                <a href=\"/leaders\"><li className=\"nav-item\">Leaders</li></a>\n                <a href=\"/all-time\"><li className=\"nav-item\">All-Time Records</li></a>\n            </ul>\n        </div>\n    );\n};\n\nexport default HeaderNav;\n","import React, { useContext } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport './css/joinFun.css';\nimport SettingsContext from '../../../../context/settingsContext';\n\nconst JoinFun = () => {\n    const settings = useContext(SettingsContext);\n\n    return (\n        // <div className=\"join\">\n        <div>\n            {settings.text_box_heading &&\n                <div>{settings.text_box_heading}</div>\n            }\n            {settings.text_box_text &&\n                <div>{ReactHtmlParser(settings.text_box_text)}</div>\n            }\n        </div>\n    );\n};\n\nexport default JoinFun;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/header.css';\nimport skeeballLogo from './images/skeeball_logo.png';\nimport SearchBar from './subcomponents/searchbar/searchbar';\nimport HeaderNav from './subcomponents/headerNav/headerNav';\nimport JoinFun from './subcomponents/joinFun/joinFun';\n\nfunction Header() {\n    return (\n        <div className=\"header-bg row mb-0\">\n            <div className=\"col-3 p-2 my-auto text-left\">\n                <Link to=\"/\"><img className=\"img-fluid\" src={skeeballLogo} alt=\"Skeeball World Tour\" /></Link>\n            </div>\n            <div className=\"col-6 d-flex flex-column justify-content-center align-items-center mb-2 p-0\">\n                <JoinFun />\n                <SearchBar />\n            </div>\n            <div className=\"col-3 p-2 my-auto text-right\">\n                <HeaderNav />\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './css/navDropdown.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavDropdown(props) {\n    return (\n        <div className=\"navdropdown\" data-toggle=\"dropdown\">\n            <div className=\"navdropbtn\">{props.buttonText}</div>\n            <div className=\"navdropdown-content\">\n                {props.listItems.map(item => (\n                    <div className=\"item\" key={item.id}>\n                        <a href={props.urlPrefix + item.href}>{item.text}</a>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nNavDropdown.propTypes = {\n    buttonText: PropTypes.string,\n    urlPrefix: PropTypes.string,\n    listItems: PropTypes.array,\n};\n","import React from 'react';\nimport './css/navButton.css';\nimport PropTypes from 'prop-types';\n\nexport default function NavButton(props) {\n    return (\n        <div className=\"navbutton\">\n            <a href={props.url}><div className=\"navbtn\">{props.buttonText}</div></a>\n        </div>\n    );\n}\n\nNavButton.propTypes = {\n    buttonText: PropTypes.string,\n    url: PropTypes.string,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport SettingsContext from '../../context/settingsContext';\nimport NavDropdown from './subcomponents/navDropdown/navDropdown';\nimport NavButton from './subcomponents/navButton/navButton';\n\nfunction NavBar() {\n    const settings = useContext(SettingsContext);\n    const currentSeasonId = settings.current_season_id;\n    const displaySchedule = settings.display_schedule;\n\n    const [storeDivisionArr, setStoreDivisionArr] = useState([]);\n\n    useEffect(() => {\n        if (currentSeasonId) {\n            axios.get('/api/schedules/navbar/' + currentSeasonId)\n                .then((response) => {\n                    const storeDivArray = response.data.map((storeDiv) => {\n                        return {\n                            id: storeDiv.store_division,\n                            text: storeDiv.store_city + ' (' + storeDiv.day_name + ')',\n                            href: '/' + storeDiv.store_id + '/' + storeDiv.division_id,\n                        };\n                    });\n                    setStoreDivisionArr(storeDivArray);\n                })\n                .catch(error => console.log(error));\n        }\n    }, [currentSeasonId]);\n\n    return (\n        <div className=\"row mt-1 mb-4\">\n            <div className=\"col-12 justify-content-center text-center\">\n                <NavButton buttonText=\"Standings\" url=\"/standings\" />\n                <NavDropdown buttonText=\"Results +\" urlPrefix=\"/results\" listItems={storeDivisionArr} />\n                {displaySchedule === 1 &&\n                    <NavDropdown buttonText=\"Schedule +\" urlPrefix=\"/schedule\" listItems={storeDivisionArr} />\n                }\n            </div >\n        </div >\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './css/footer.css';\n\nfunction Footer() {\n    return (\n        <div className=\"row mt-3 bg-footer\">\n            <div className=\"col-6 text-center p-3 border-right\">\n                <p className=\"mb-3\"><b>Brought to you by:</b></p>\n                <p className=\"mb-1\"><a href=\"https://www.winkinglizard.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Winking Lizard Tavern</a></p>\n                <p className=\"mb-1 small\">and</p>\n                <p className=\"m-0\"><a href=\"http://www.bellmusicco.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Bell Music Company</a></p>\n            </div>\n            <div className=\"col-6 text-center p-3 small border-left\">\n                <h5 className=\"mb-5\"><a href=\"mailto:ktaylor@bellmusicco.com\">Contact Us</a></h5>\n                <p>&copy; 2010 Skeeball World Tour</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/home';\nimport Rules from './pages/rules/rules';\nimport Standings from './pages/standings/standings';\nimport Search from './pages/search/search';\nimport Champions from './pages/champions/champions';\nimport Players from './pages/players/players';\nimport Teams from './pages/teams/teams';\nimport Results from './pages/results/results';\nimport Schedule from './pages/schedule/schedule';\nimport AllTime from './pages/allTime/allTime';\nimport Leaders from './pages/leaders/leaders';\nimport Qualifiers from './pages/qualifiers/qualifiers';\nimport NoMatch from './pages/noMatch/noMatch';\nimport Header from './components/header/header';\nimport NavBar from './components/navbar/navbar';\nimport Footer from './components/footer/footer';\nimport SettingsContext from './context/settingsContext';\nimport axios from 'axios';\nimport './css/style.css';\nimport './css/my_style.css';\n\nexport default function App() {\n    const [settings, setSettings] = useState({});\n\n    useEffect(() => {\n        axios.get('/api/settings')\n            .then((response) => {\n                response.data[0] ? setSettings(response.data[0]) : setSettings({});\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <Router>\n            <div className=\"container border bg-white\">\n                <SettingsContext.Provider value={settings}>\n                    <Header />\n                    <NavBar />\n                    <Switch>\n                        <Route exact path=\"/\"><Home /></Route>\n                        <Route exact path=\"/rules\" component={Rules} />\n                        <Route exact path=\"/standings\" component={Standings} />\n                        <Route exact path=\"/teams/:teamid\" component={Teams} />\n                        <Route exact path=\"/players/:playerid\" component={Players} />\n                        <Route exact path=\"/results/:storeid/:divisionid/:seasonid?\" component={Results} />\n                        <Route exact path=\"/schedule/:storeid/:divisionid/:seasonid?\" component={Schedule} />\n                        <Route exact path=\"/leaders\" component={Leaders} />\n                        <Route exact path=\"/all-time\" component={AllTime} />\n                        <Route exact path=\"/qualifiers\" component={Qualifiers} />\n                        <Route exact path=\"/champions\" component={Champions} />\n                        <Route path=\"/search/:searchstring\" component={Search} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                    <Footer />\n                </SettingsContext.Provider>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/skeeball_logo.102ce1b8.png\";"],"sourceRoot":""}