{"version":3,"sources":["components/pageHeading/pageHeading.js","pages/adminCentral/adminCentral.js","context/userContext.js","pages/login/login.js","utils/protectedRoute.js","pages/noMatch/noMatch.js","components/header/subcomponents/userBar/userBar.js","components/header/header.js","components/footer/footer.js","pages/stores/addStore/addStore.js","pages/stores/subcomponents/storesSelected.js","pages/stores/subcomponents/storesUnselected.js","pages/stores/editStore/editStore.js","App.js","serviceWorker.js","index.js"],"names":["PageHeading","text","className","AdminCentral","UserContext","createContext","Login","useState","username","setUsername","password","setPassword","message","setMessage","useContext","user","setUser","to","pathname","onSubmit","event","preventDefault","match","axios","post","then","response","status","id","data","catch","error","console","log","type","value","name","onChange","target","ProtectedRoute","Component","component","rest","render","props","NoMatch","UserBar","setError","get","Header","Footer","AddStore","StoresSelected","selectedStore","handleChange","setSelectedStore","onClick","store_id","store_name","store_address","store_city","store_state","store_zip","store_phone","map_url","StoresUnselected","store","active","EditStore","stores","setStores","errorMsg","undefined","isLoaded","storesStatus","setStoresStatus","useEffect","e","prevState","length","map","key","src","alt","UnprotectedPage","App","Provider","exact","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74997aa2.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeading = ({ text }) => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center\">{text}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nPageHeading.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageHeading;\n","import React, { Fragment } from 'react';\nimport PageHeading from '../../components/pageHeading/pageHeading';\n\nconst AdminCentral = () => {\n    return (\n        <Fragment>\n            <PageHeading text=\"Welcome to Admin Central\" />\n        </Fragment>\n    );\n};\n\nexport default AdminCentral;\n","import { createContext } from 'react';\n\nconst UserContext = createContext([{}, () => {}]);\n\nexport default UserContext;\n","import React, { useState, useContext, Fragment } from 'react';\nimport axios from 'axios';\nimport UserContext from '../../context/userContext';\nimport { Redirect } from 'react-router-dom';\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState(null);\n    const [user, setUser] = useContext(UserContext);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setMessage(null);\n        if (username.match(/^[a-zA-Z][a-zA-Z0-9-_]{3,10}[a-zA-Z0-9]$/) && password.match(/^[a-zA-Z0-9-_]{6,12}$/)) {\n            axios.post('/api/auth/login', {\n                username: username,\n                password: password,\n            })\n                .then(response => {\n                    if (response.status === 200) {\n                        setUser({\n                            id: response.data.user.id,\n                            username: response.data.user.username,\n                        });\n                    } else {\n                        setUser(null);\n                        setMessage(response.data.message);\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setMessage('An error occurred trying to log in the user!');\n                });\n        } else {\n            setMessage('Username and Password must be in the proper format!');\n        }\n        return true;\n    }\n\n    return (\n        <div>\n            {user\n                ? <Redirect to={{ pathname: '/' }} />\n                : (<Fragment>\n                    <h1>Login</h1>\n                    <form onSubmit={handleSubmit}>\n                        <label>Username</label>\n                        <input type=\"text\" value={username} name=\"username\" onChange={event => setUsername(event.target.value)} />\n                        <label>Password</label>\n                        <input type=\"password\" value={password} name=\"password\" onChange={event => setPassword(event.target.value)} />\n                        <button>Submit</button>\n                    </form>\n                    {message &&\n                        <div className=\"text-danger font-weight-bolder\">\n                            {message}\n                        </div>\n                    }\n                </Fragment>)\n            }\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProtectedRoute = ({ user, component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={props => user\n                ? <Component {...props} />\n                : <Redirect to={{ pathname: '/login' }} />\n            }\n        />\n    );\n};\n\nProtectedRoute.propTypes = {\n    user: PropTypes.object,\n    component: PropTypes.func,\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div className=\"m-5 bigger\">\n            <p className=\"text-danger\"><b>Error 404!</b></p>\n            <p>An error has occurred.</p>\n            <p>The page you are looking for does not exist!</p>\n        </div>\n    );\n};\n\nexport default NoMatch;\n","import React, { useState, useContext, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../../../context/userContext';\nimport axios from 'axios';\n\nconst UserBar = () => {\n    const [user, setUser] = useContext(UserContext);\n    const [error, setError] = useState(null);\n\n    function handleLogout(event) {\n        event.preventDefault();\n        axios.get('/api/auth/logout')\n            .then(() => {\n                setUser(null);\n            })\n            .catch(error => {\n                console.log(error);\n                setError('An error occurred trying to log out the user!');\n            });\n    }\n\n    return (\n        <Fragment>\n            {user\n                ? (<Fragment>\n                    <div className=\"mb-4\">\n                        Logged in as: {user.username}\n                    </div>\n                    <div>\n                        <form onSubmit={handleLogout}>\n                            <button>Log Out</button>\n                        </form></div>\n                </Fragment>)\n                : <Link to='/login'>Log In</Link>\n            }\n            {error &&\n                <div className=\"text-danger font-weight-bolder\">\n                    {error}\n                </div>\n            }\n        </Fragment>\n    );\n};\n\nexport default UserBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport UserBar from './subcomponents/userBar/userBar';\n\nconst Header = () => {\n    return (\n        <div className=\"row border-bottom mb-4\">\n            <div className=\"col-6\">\n                Skeeball World Tour Admin Area\n                <nav>\n                    <ul>\n                        <li><Link to='/'>Admin Central</Link></li>\n                        <li><Link to='/unprotected'>Unprotected Page</Link></li>\n                        <li><Link to='login'>Login</Link></li>\n                        <li><Link to='blah'>Bad Route</Link></li>\n                        <li><Link to='add-store'>Add Store</Link></li>\n                        <li><Link to='edit-store'>Edit Store</Link></li>\n                    </ul>\n                </nav>\n            </div>\n            <div className=\"col-6 text-right\">\n                <UserBar />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <div className=\"row border-top mt-4\">\n            <div className=\"col-12 text-center p-3 small\">&copy; 2010 Skeeball World Tour</div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PageHeading from '../../../components/pageHeading/pageHeading';\n\nconst AddStore = () => {\n    return (\n        <PageHeading text=\"Add a New Store\" />\n    );\n};\n\nexport default AddStore;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StoresSelected = ({ selectedStore, handleChange, setSelectedStore }) => {\n    return (\n        <Fragment>\n            <td><button onClick={() => setSelectedStore(null)}>Cancel</button></td>\n            <td>{selectedStore.store_id}</td>\n            <td><input type=\"text\" name=\"store_name\" value={selectedStore.store_name} onChange={handleChange} /></td>\n            <td><input type=\"text\" name=\"store_address\" value={selectedStore.store_address} onChange={handleChange} /></td>\n            <td><input type=\"text\" name=\"store_city\" value={selectedStore.store_city} onChange={handleChange} /></td>\n            <td><input type=\"text\" name=\"store_state\" value={selectedStore.store_state} onChange={handleChange} /></td>\n            <td><input type=\"text\" name=\"store_zip\" value={selectedStore.store_zip} onChange={handleChange} /></td>\n            <td><input type=\"text\" name=\"store_phone\" value={selectedStore.store_phone} onChange={handleChange} /></td>\n            <td><input type=\"text\" name=\"map_url\" value={selectedStore.map_url} onChange={handleChange} /></td>\n            <td>\n                <select>\n                    <option value=\"1\">Yes</option>\n                    <option value=\"0\">No</option>\n                </select>\n            </td>\n            {/* {selectedStore.active} */}\n        </Fragment>\n    );\n};\n\nStoresSelected.propTypes = {\n    selectedStore: PropTypes.object,\n    handleChange: PropTypes.func,\n    setSelectedStore: PropTypes.func,\n};\n\nexport default StoresSelected;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StoresUnselected = ({ store, setSelectedStore }) => {\n    return (\n        <Fragment>\n            <td><button onClick={() => setSelectedStore(store)}>Select</button></td>\n            <td>{store.store_id}</td>\n            <td>{store.store_name}</td>\n            <td>{store.store_address}</td>\n            <td>{store.store_city}</td>\n            <td>{store.store_state}</td>\n            <td>{store.store_zip}</td>\n            <td>{store.store_phone}</td>\n            <td>{store.map_url}</td>\n            <td>{store.active}</td>\n        </Fragment>\n    );\n};\n\nStoresUnselected.propTypes = {\n    store: PropTypes.object,\n    setSelectedStore: PropTypes.func,\n};\n\nexport default StoresUnselected;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PageHeading from '../../../components/pageHeading/pageHeading';\nimport axios from 'axios';\nimport StoreSelected from '../subcomponents/storesSelected';\nimport StoreUnselected from '../subcomponents/storesUnselected';\n\nconst EditStore = () => {\n    const [stores, setStores] = useState(null);\n    const [storesStatus, setStoresStatus] = useState({ errorMsg: undefined, isLoaded: false });\n\n    const [selectedStore, setSelectedStore] = useState(null);\n\n    useEffect(() => {\n        axios.get('/api/admin/stores')\n            .then(response => {\n                setStores(response.data);\n                setStoresStatus({ errorMsg: undefined, isLoaded: true });\n            })\n            .catch((error) => {\n                console.log(error);\n                setStores(null);\n                setStoresStatus({ errorMsg: 'An error occurred fetching stores!', isLoaded: true });\n            });\n    }, []);\n\n    function deleteStore() {\n\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setSelectedStore(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    return (\n        <Fragment>\n            <PageHeading text=\"Edit / Delete a Store\" />\n            {!storesStatus.isLoaded\n                ? <div className=\"text-center\"><img src={'/images/loading.gif'} alt={'Loading'} /></div>\n                : stores && stores.length > 0\n                    ? <div className=\"d-flex justify-content-center\">\n                        <div className=\"min-w-50 mx-auto\">\n                            <div className=\"mb-3 table-wrapper\">\n                                <table className=\"table table-bordered table-hover\">\n                                    <thead>\n                                        <tr className=\"bg-gray6\">\n                                            <th>Action</th>\n                                            <th>Id</th>\n                                            <th>Name</th>\n                                            <th>Address</th>\n                                            <th>City</th>\n                                            <th>State</th>\n                                            <th>Zip</th>\n                                            <th>Phone</th>\n                                            <th>Map URL</th>\n                                            <th>Active</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {stores.map((store) => (\n                                            <tr key={store.store_id}>\n                                                {/* <td><button onClick={() => setSelectedStore(store)}>Update</button><button onClick={() => deleteStore}>Delete</button></td> */}\n                                                {(selectedStore && selectedStore.store_id === store.store_id) ? <StoreSelected selectedStore={selectedStore} handleChange={handleChange} setSelectedStore={setSelectedStore} /> : <StoreUnselected store={store} setSelectedStore={setSelectedStore} />}\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    : stores\n                        ? <span className=\"empty-result\">There are no stores to display!</span>\n                        : <span className=\"empty-result\">{storesStatus.errorMsg}</span>\n            }\n        </Fragment>\n    );\n};\n\nexport default EditStore;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport AdminCentral from './pages/adminCentral/adminCentral';\nimport Login from './pages/login/login';\nimport './css/my_style.css';\nimport './css/style.css';\nimport UserContext from './context/userContext';\nimport ProtectedRoute from './utils/protectedRoute';\nimport NoMatch from './pages/noMatch/noMatch';\nimport axios from 'axios';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport AddStore from './pages/stores/addStore/addStore';\nimport EditStore from './pages/stores/editStore/editStore';\n\nfunction App() {\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        axios.get('/api/auth/status')\n            .then(response => {\n                if (response.status === 200) {\n                    setUser(response.data.user);\n                } else {\n                    setUser(null);\n                }\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    // console.log('App.js re-render: ', user);\n\n    return (\n        <Router>\n            <div className=\"container border bg-white\">\n                <UserContext.Provider value={[user, setUser]}>\n                    <Header />\n                    <Switch>\n                        <ProtectedRoute exact path=\"/\" component={AdminCentral} user={user} />\n                        <ProtectedRoute exact path='/add-store' component={AddStore} user={user} />\n                        <ProtectedRoute exact path='/edit-store' component={EditStore} user={user} />\n                        <Route exact path=\"/login\">\n                            {user ? <Redirect to=\"/\" /> : <Login />}\n                        </Route>\n                        <Route exact path=\"/unprotected\" component={UnprotectedPage} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                    <Footer />\n                </UserContext.Provider>\n            </div>\n        </Router >\n    );\n}\n\nfunction UnprotectedPage() {\n    return (\n        <h1 className=\"text-center\">Unprotected Page</h1>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}